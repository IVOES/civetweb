examples/client/client.c:78:6: style: The scope of the variable 'is_chunked' can be reduced. [variableScope]
 int is_chunked = 0;
     ^
examples/client/client.c:95:8: style: Local variable 'ret' shadows outer variable [shadowVariable]
   int ret = mg_read(cli, buf, sizeof(buf));
       ^
examples/client/client.c:60:6: note: Shadowed declaration
 int ret = mg_get_response(cli, errbuf, sizeof(errbuf), 10000);
     ^
examples/client/client.c:95:8: note: Shadow variable
   int ret = mg_read(cli, buf, sizeof(buf));
       ^
examples/client/client.c:107:8: style: Local variable 'ret' shadows outer variable [shadowVariable]
   int ret = mg_read(cli, buf, sizeof(buf));
       ^
examples/client/client.c:60:6: note: Shadowed declaration
 int ret = mg_get_response(cli, errbuf, sizeof(errbuf), 10000);
     ^
examples/client/client.c:107:8: note: Shadow variable
   int ret = mg_read(cli, buf, sizeof(buf));
       ^
examples/client/client.c:78:17: style: Variable 'is_chunked' is assigned a value that is never used. [unreadVariable]
 int is_chunked = 0;
                ^
examples/client/client.c:85:15: style: Variable 'is_chunked' is assigned a value that is never used. [unreadVariable]
   is_chunked = 1;
              ^
examples/embedded_c/embedded_c.c:617:9: style: The scope of the variable 's' can be reduced. [variableScope]
 int r, s;
        ^
examples/embedded_c/embedded_c.c:676:14: style: The scope of the variable 'user' can be reduced. [variableScope]
 const char *user = "user";
             ^
examples/embedded_c/embedded_c.c:677:7: style: The scope of the variable 'passwd' can be reduced. [variableScope]
 char passwd[64];
      ^
examples/embedded_c/embedded_c.c:228:41: style: Variable 'req_info' is assigned a value that is never used. [unreadVariable]
 const struct mg_request_info *req_info = mg_get_request_info(conn);
                                        ^
examples/embedded_c/embedded_c.c:616:20: style: Variable 'r_total' is assigned a value that is never used. [unreadVariable]
 long long r_total = 0;
                   ^
examples/embedded_c/embedded_c.c:655:11: style: Variable 'r_total' is assigned a value that is never used. [unreadVariable]
  r_total += r;
          ^
examples/embedded_c/embedded_c.c:1039:25: style: Variable 'ctx' is assigned a value that is never used. [unreadVariable]
 struct ssl_ctx_st *ctx = (struct ssl_ctx_st *)ssl_ctx;
                        ^
examples/embedded_c/embedded_c.c:1137:6: style: Condition 'err' is always false [knownConditionTrueFalse]
 if (err) {
     ^
examples/embedded_c/embedded_c.c:1110:12: note: Assignment 'err=0', assigned value is 0
 int err = 0;
           ^
examples/embedded_c/embedded_c.c:1137:6: note: Condition 'err' is always false
 if (err) {
     ^
examples/embedded_cpp/embedded_cpp.cpp:165:13: style: The scope of the variable 'rlen' can be reduced. [variableScope]
  long long rlen, wlen;
            ^
examples/embedded_cpp/embedded_cpp.cpp:165:19: style: The scope of the variable 'wlen' can be reduced. [variableScope]
  long long rlen, wlen;
                  ^
examples/rest/cJSON/cJSON.c:449:13: style: Condition 'newbuffer' is always true [knownConditionTrueFalse]
        if (newbuffer)
            ^
examples/rest/cJSON/cJSON.c:441:13: note: Assuming that condition '!newbuffer' is not redundant
        if (!newbuffer)
            ^
examples/rest/cJSON/cJSON.c:449:13: note: Condition 'newbuffer' is always true
        if (newbuffer)
            ^
examples/rest/cJSON/cJSON.c:491:17: style: Condition '(d*0)!=0' is always false [knownConditionTrueFalse]
    if ((d * 0) != 0)
                ^
examples/rest/cJSON/cJSON.c:701:42: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
examples/rest/cJSON/cJSON.c:1567:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
            ^
examples/rest/cJSON/cJSON.c:1557:41: note: Calling function 'parse_string', 2nd argument 'input_buffer' value is 0
        if (!parse_string(current_item, input_buffer))
                                        ^
examples/rest/cJSON/cJSON.c:701:42: note: Null pointer dereference
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
examples/rest/cJSON/cJSON.c:702:38: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    const unsigned char *input_end = buffer_at_offset(input_buffer) + 1;
                                     ^
examples/rest/cJSON/cJSON.c:1567:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
            ^
examples/rest/cJSON/cJSON.c:1557:41: note: Calling function 'parse_string', 2nd argument 'input_buffer' value is 0
        if (!parse_string(current_item, input_buffer))
                                        ^
examples/rest/cJSON/cJSON.c:702:38: note: Null pointer dereference
    const unsigned char *input_end = buffer_at_offset(input_buffer) + 1;
                                     ^
examples/rest/cJSON/cJSON.c:707:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (buffer_at_offset(input_buffer)[0] != '\"')
        ^
examples/rest/cJSON/cJSON.c:1567:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
            ^
examples/rest/cJSON/cJSON.c:1557:41: note: Calling function 'parse_string', 2nd argument 'input_buffer' value is 0
        if (!parse_string(current_item, input_buffer))
                                        ^
examples/rest/cJSON/cJSON.c:707:9: note: Null pointer dereference
    if (buffer_at_offset(input_buffer)[0] != '\"')
        ^
examples/rest/cJSON/cJSON.c:1347:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        ^
examples/rest/cJSON/cJSON.c:1361:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
        ^
examples/rest/cJSON/cJSON.c:1347:9: note: Null pointer dereference
    if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        ^
examples/rest/cJSON/cJSON.c:1351:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->depth++;
    ^
examples/rest/cJSON/cJSON.c:1361:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
        ^
examples/rest/cJSON/cJSON.c:1351:5: note: Null pointer dereference
    input_buffer->depth++;
    ^
examples/rest/cJSON/cJSON.c:1353:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (buffer_at_offset(input_buffer)[0] != '[')
        ^
examples/rest/cJSON/cJSON.c:1361:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
        ^
examples/rest/cJSON/cJSON.c:1353:9: note: Null pointer dereference
    if (buffer_at_offset(input_buffer)[0] != '[')
        ^
examples/rest/cJSON/cJSON.c:1359:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->offset++;
    ^
examples/rest/cJSON/cJSON.c:1361:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
        ^
examples/rest/cJSON/cJSON.c:1359:5: note: Null pointer dereference
    input_buffer->offset++;
    ^
examples/rest/cJSON/cJSON.c:1370:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
        input_buffer->offset--;
        ^
examples/rest/cJSON/cJSON.c:1361:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == ']'))
        ^
examples/rest/cJSON/cJSON.c:1370:9: note: Null pointer dereference
        input_buffer->offset--;
        ^
examples/rest/cJSON/cJSON.c:1503:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        ^
examples/rest/cJSON/cJSON.c:1509:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '{'))
        ^
examples/rest/cJSON/cJSON.c:1503:9: note: Null pointer dereference
    if (input_buffer->depth >= CJSON_NESTING_LIMIT)
        ^
examples/rest/cJSON/cJSON.c:1507:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->depth++;
    ^
examples/rest/cJSON/cJSON.c:1509:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != '{'))
        ^
examples/rest/cJSON/cJSON.c:1507:5: note: Null pointer dereference
    input_buffer->depth++;
    ^
examples/rest/cJSON/cJSON.c:1514:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->offset++;
    ^
examples/rest/cJSON/cJSON.c:1516:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '}'))
        ^
examples/rest/cJSON/cJSON.c:1514:5: note: Null pointer dereference
    input_buffer->offset++;
    ^
examples/rest/cJSON/cJSON.c:1524:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
        input_buffer->offset--;
        ^
examples/rest/cJSON/cJSON.c:1516:9: note: Assuming that condition 'input_buffer!=NULL' is not redundant
    if (can_access_at_index(input_buffer, 0) && (buffer_at_offset(input_buffer)[0] == '}'))
        ^
examples/rest/cJSON/cJSON.c:1524:9: note: Null pointer dereference
        input_buffer->offset--;
        ^
examples/rest/cJSON/cJSON.c:1529:5: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
    input_buffer->offset--;
    ^
examples/rest/cJSON/cJSON.c:1567:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
            ^
examples/rest/cJSON/cJSON.c:1529:5: note: Null pointer dereference
    input_buffer->offset--;
    ^
examples/rest/cJSON/cJSON.c:1555:9: warning: Either the condition 'input_buffer!=NULL' is redundant or there is possible null pointer dereference: input_buffer. [nullPointerRedundantCheck]
        input_buffer->offset++;
        ^
examples/rest/cJSON/cJSON.c:1567:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant
        if (cannot_access_at_index(input_buffer, 0) || (buffer_at_offset(input_buffer)[0] != ':'))
            ^
examples/rest/cJSON/cJSON.c:1555:9: note: Null pointer dereference
        input_buffer->offset++;
        ^
examples/rest/cJSON/cJSON.c:458:22: warning: Either the condition 'newbuffer' is redundant or there is pointer arithmetic with NULL pointer. [nullPointerArithmeticRedundantCheck]
    return newbuffer + p->offset;
                     ^
examples/rest/cJSON/cJSON.c:449:13: note: Assuming that condition 'newbuffer' is not redundant
        if (newbuffer)
            ^
examples/rest/cJSON/cJSON.c:458:22: note: Null pointer addition
    return newbuffer + p->offset;
                     ^
examples/rest/cJSON/cJSON.c:215:40: style:inconclusive: Function 'cJSON_Delete' argument 1 names different: declaration 'c' definition 'item'. [funcArgNamesDifferent]
CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)
                                       ^
examples/rest/cJSON/cJSON.h:155:40: note: Function 'cJSON_Delete' argument 1 names different: declaration 'c' definition 'item'.
CJSON_PUBLIC(void) cJSON_Delete(cJSON *c);
                                       ^
examples/rest/cJSON/cJSON.c:215:40: note: Function 'cJSON_Delete' argument 1 names different: declaration 'c' definition 'item'.
CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)
                                       ^
examples/rest/cJSON/cJSON.c:1193:69: style:inconclusive: Function 'cJSON_PrintPreallocated' argument 2 names different: declaration 'buffer' definition 'buf'. [funcArgNamesDifferent]
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buf, const int len, const cJSON_bool fmt)
                                                                    ^
examples/rest/cJSON/cJSON.h:153:69: note: Function 'cJSON_PrintPreallocated' argument 2 names different: declaration 'buffer' definition 'buf'.
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format);
                                                                    ^
examples/rest/cJSON/cJSON.c:1193:69: note: Function 'cJSON_PrintPreallocated' argument 2 names different: declaration 'buffer' definition 'buf'.
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buf, const int len, const cJSON_bool fmt)
                                                                    ^
examples/rest/cJSON/cJSON.c:1193:84: style:inconclusive: Function 'cJSON_PrintPreallocated' argument 3 names different: declaration 'length' definition 'len'. [funcArgNamesDifferent]
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buf, const int len, const cJSON_bool fmt)
                                                                                   ^
examples/rest/cJSON/cJSON.h:153:87: note: Function 'cJSON_PrintPreallocated' argument 3 names different: declaration 'length' definition 'len'.
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format);
                                                                                      ^
examples/rest/cJSON/cJSON.c:1193:84: note: Function 'cJSON_PrintPreallocated' argument 3 names different: declaration 'length' definition 'len'.
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buf, const int len, const cJSON_bool fmt)
                                                                                   ^
examples/rest/cJSON/cJSON.c:1193:106: style:inconclusive: Function 'cJSON_PrintPreallocated' argument 4 names different: declaration 'format' definition 'fmt'. [funcArgNamesDifferent]
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buf, const int len, const cJSON_bool fmt)
                                                                                                         ^
examples/rest/cJSON/cJSON.h:153:112: note: Function 'cJSON_PrintPreallocated' argument 4 names different: declaration 'format' definition 'fmt'.
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format);
                                                                                                               ^
examples/rest/cJSON/cJSON.c:1193:106: note: Function 'cJSON_PrintPreallocated' argument 4 names different: declaration 'format' definition 'fmt'.
CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buf, const int len, const cJSON_bool fmt)
                                                                                                         ^
examples/rest/cJSON/cJSON.c:2280:51: style:inconclusive: Function 'cJSON_CreateBool' argument 1 names different: declaration 'boolean' definition 'b'. [funcArgNamesDifferent]
CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool b)
                                                  ^
examples/rest/cJSON/cJSON.h:187:51: note: Function 'cJSON_CreateBool' argument 1 names different: declaration 'boolean' definition 'b'.
CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool boolean);
                                                  ^
examples/rest/cJSON/cJSON.c:2280:51: note: Function 'cJSON_CreateBool' argument 1 names different: declaration 'boolean' definition 'b'.
CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool b)
                                                  ^
examples/rest/cJSON/cJSON.c:1439:19: style: Variable 'length' is assigned a value that is never used. [unreadVariable]
    size_t length = 0;
                  ^
examples/rest/cJSON/cJSON_Utils.c:1014:9: style: The scope of the variable 'status' can be reduced. [variableScope]
    int status = 0;
        ^
examples/rest/cJSON/cJSON_Utils.c:1043:9: style: The scope of the variable 'status' can be reduced. [variableScope]
    int status = 0;
        ^
examples/rest/cJSON/cJSON_Utils.c:1014:16: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
    int status = 0;
               ^
examples/rest/cJSON/cJSON_Utils.c:1043:16: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
    int status = 0;
               ^
examples/rest/rest.c:286:10: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
 int err = 0;
         ^
examples/ws_client/ws_client.c:316:15: style: Condition 'b!=1' is always true [knownConditionTrueFalse]
          ((b != 1) ? "s" : ""));
              ^
examples/ws_client/ws_client.c:309:7: note: Assignment 'b=99', assigned value is 99
  b = 99;
      ^
examples/ws_client/ws_client.c:316:15: note: Condition 'b!=1' is always true
          ((b != 1) ? "s" : ""));
              ^
fuzztest/fuzzmain.c:86:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
fuzztest/fuzzmain.c:93:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
fuzztest/fuzzmain.c:99:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
fuzztest/fuzzmain.c:384:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
fuzztest/fuzzmain.c:405:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
fuzztest/fuzzmain.c:415:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
fuzztest/fuzzmain.c:427:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
fuzztest/fuzzmain.c:442:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  TESTabort();
  ^
src/civetweb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 205 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/mod_mbedtls.inl:79:0: information: Skipping configuration 'DEBUG;MG_CONFIG_MBEDTLS_DEBUG;MG_CONFIG_MBEDTLS_DEBUG;USE_MBEDTLS' since the value of 'MG_CONFIG_MBEDTLS_DEBUG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 mbedtls_debug_set_threshold(MG_CONFIG_MBEDTLS_DEBUG);
^
src/mod_mbedtls.inl:79:0: information: Skipping configuration 'DEBUG;MG_CONFIG_MBEDTLS_DEBUG;USE_MBEDTLS' since the value of 'MG_CONFIG_MBEDTLS_DEBUG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 mbedtls_debug_set_threshold(MG_CONFIG_MBEDTLS_DEBUG);
^
src/match.inl:75:12: style: Array index 'i_pat' is used before limits check. [arrayIndexThenCheck]
   if ((pat[i_pat] == '*') && (i_pat < pat_len)) {
           ^
src/civetweb.c:3820:47: error: The address of local variable 's' is accessed at non-zero index. [objectIndex]
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:8649:22: note: Address of variable taken here.
  name = skip_quoted(&s, "=", " ", 0);
                     ^
src/civetweb.c:8649:22: note: Calling function 'skip_quoted', 1st argument '&s' value is lifetime=s
  name = skip_quoted(&s, "=", " ", 0);
                     ^
src/civetweb.c:3787:15: note: Assuming condition is false
 if (end_word > begin_word) {
              ^
src/civetweb.c:3820:47: note: The address of local variable 's' is accessed at non-zero index.
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:3820:47: error: The address of local variable 's' is accessed at non-zero index. [objectIndex]
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:8654:24: note: Address of variable taken here.
   value = skip_quoted(&s, "\"", " ", '\\');
                       ^
src/civetweb.c:8654:24: note: Calling function 'skip_quoted', 1st argument '&s' value is lifetime=s
   value = skip_quoted(&s, "\"", " ", '\\');
                       ^
src/civetweb.c:3787:15: note: Assuming condition is false
 if (end_word > begin_word) {
              ^
src/civetweb.c:3820:47: note: The address of local variable 's' is accessed at non-zero index.
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:3820:47: error: The address of local variable 's' is accessed at non-zero index. [objectIndex]
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:8659:24: note: Address of variable taken here.
   value = skip_quoted(&s, ", ", " ", 0); /* IE uses commas, FF
                       ^
src/civetweb.c:8659:24: note: Calling function 'skip_quoted', 1st argument '&s' value is lifetime=s
   value = skip_quoted(&s, ", ", " ", 0); /* IE uses commas, FF
                       ^
src/civetweb.c:3787:15: note: Assuming condition is false
 if (end_word > begin_word) {
              ^
src/civetweb.c:3820:47: note: The address of local variable 's' is accessed at non-zero index.
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/sort.inl:20:14: warning: Obsolete function 'alloca' called. In C99 and later it is recommended to use a variable length array instead. [allocaCalled]
 void *tmp = alloca(elemsize);
             ^
src/civetweb.c:16184:6: style: Condition '!log_buf[0]' is always true [knownConditionTrueFalse]
 if (!log_buf[0]) {
     ^
src/civetweb.c:16119:15: note: Assignment 'log_buf[0]=0', assigned value is 0
 log_buf[0] = 0;
              ^
src/civetweb.c:16179:6: note: Assuming condition is false
     && (conn->phys_ctx->callbacks.log_access == NULL)) {
     ^
src/civetweb.c:16184:6: note: Condition '!log_buf[0]' is always true
 if (!log_buf[0]) {
     ^
src/civetweb.c:8041:7: warning:inconclusive: Width 3 given in format string (no. 2) is smaller than destination buffer 'month_str[32]'. [invalidScanfFormatWidth_smaller]
 if ((sscanf(datetime,
      ^
src/civetweb.c:8050:10: warning:inconclusive: Width 3 given in format string (no. 2) is smaller than destination buffer 'month_str[32]'. [invalidScanfFormatWidth_smaller]
     || (sscanf(datetime,
         ^
src/civetweb.c:8059:10: warning:inconclusive: Width 3 given in format string (no. 2) is smaller than destination buffer 'month_str[32]'. [invalidScanfFormatWidth_smaller]
     || (sscanf(datetime,
         ^
src/civetweb.c:8068:10: warning:inconclusive: Width 3 given in format string (no. 2) is smaller than destination buffer 'month_str[32]'. [invalidScanfFormatWidth_smaller]
     || (sscanf(datetime,
         ^
src/civetweb.c:3096:9: style: The scope of the variable 'i' can be reduced. [variableScope]
 size_t i, big_len = strlen(big_str), small_len = strlen(small_str);
        ^
src/civetweb.c:3860:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
src/sort.inl:18:9: style: The scope of the variable 'gap' can be reduced. [variableScope]
 size_t gap, i, j, k;
        ^
src/civetweb.c:6189:6: style: The scope of the variable 'n' can be reduced. [variableScope]
 int n, nwritten = 0;
     ^
src/civetweb.c:6460:6: style: The scope of the variable 'n' can be reduced. [variableScope]
 int n, nread = 0;
     ^
src/civetweb.c:6515:23: style: The scope of the variable 'n' can be reduced. [variableScope]
 int64_t content_len, n, buffered_len, nread;
                      ^
src/civetweb.c:6515:26: style: The scope of the variable 'buffered_len' can be reduced. [variableScope]
 int64_t content_len, n, buffered_len, nread;
                         ^
src/civetweb.c:6520:14: style: The scope of the variable 'body' can be reduced. [variableScope]
 const char *body;
             ^
src/civetweb.c:6927:10: style: The scope of the variable 'ap_copy' can be reduced. [variableScope]
 va_list ap_copy;
         ^
src/civetweb.c:7332:6: style: The scope of the variable 'a' can be reduced. [variableScope]
 int a, b, c;
     ^
src/civetweb.c:7332:9: style: The scope of the variable 'b' can be reduced. [variableScope]
 int a, b, c;
        ^
src/civetweb.c:7332:12: style: The scope of the variable 'c' can be reduced. [variableScope]
 int a, b, c;
           ^
src/civetweb.c:7408:16: style: The scope of the variable 'a' can be reduced. [variableScope]
 unsigned char a, b, c, d;
               ^
src/civetweb.c:7408:19: style: The scope of the variable 'b' can be reduced. [variableScope]
 unsigned char a, b, c, d;
                  ^
src/civetweb.c:7408:22: style: The scope of the variable 'c' can be reduced. [variableScope]
 unsigned char a, b, c, d;
                     ^
src/civetweb.c:7408:25: style: The scope of the variable 'd' can be reduced. [variableScope]
 unsigned char a, b, c, d;
                        ^
src/civetweb.c:8037:33: style: The scope of the variable 'month' can be reduced. [variableScope]
 int second, minute, hour, day, month, year;
                                ^
src/civetweb.c:8363:14: style: The scope of the variable 'ext' can be reduced. [variableScope]
 const char *ext;
             ^
src/civetweb.c:8386:21: style: The scope of the variable 'ext' can be reduced. [variableScope]
 const char *list, *ext;
                    ^
src/civetweb.c:8768:9: style: The scope of the variable 'l' can be reduced. [variableScope]
 size_t l;
        ^
src/civetweb.c:9810:7: style: The scope of the variable 'path' can be reduced. [variableScope]
 char path[UTF8_PATH_MAX];
      ^
src/civetweb.c:9866:7: style: The scope of the variable 'path' can be reduced. [variableScope]
 char path[UTF8_PATH_MAX];
      ^
src/civetweb.c:9867:17: style: The scope of the variable 'dp' can be reduced. [variableScope]
 struct dirent *dp;
                ^
src/civetweb.c:9975:24: style: The scope of the variable 'p' can be reduced. [variableScope]
 char date[64], *esc, *p;
                       ^
src/civetweb.c:10605:9: style: The scope of the variable 'len' can be reduced. [variableScope]
 size_t len;
        ^
src/civetweb.c:10654:11: style: The scope of the variable 'n' can be reduced. [variableScope]
 int ret, n;
          ^
src/civetweb.c:11141:19: style: The scope of the variable 'n' can be reduced. [variableScope]
 int request_len, n = 0;
                  ^
src/civetweb.c:11215:7: style: The scope of the variable 'buf' can be reduced. [variableScope]
 char buf[MG_BUF_LEN];
      ^
src/civetweb.c:12623:7: style: The scope of the variable 'date' can be reduced. [variableScope]
 char date[64];
      ^
src/handle_form.inl:35:6: style: The scope of the variable 'filename_dec_len' can be reduced. [variableScope]
 int filename_dec_len;
     ^
src/civetweb.c:14157:15: style: The scope of the variable 'i' can be reduced. [variableScope]
 unsigned int i;
              ^
src/civetweb.c:16265:6: style: The scope of the variable 'allowed' can be reduced. [variableScope]
 int allowed, flag, matched;
     ^
src/civetweb.c:16265:15: style: The scope of the variable 'flag' can be reduced. [variableScope]
 int allowed, flag, matched;
              ^
src/civetweb.c:16265:21: style: The scope of the variable 'matched' can be reduced. [variableScope]
 int allowed, flag, matched;
                    ^
src/civetweb.c:18501:14: style: The scope of the variable 'server_domain' can be reduced. [variableScope]
 const char *server_domain;
             ^
src/civetweb.c:18502:9: style: The scope of the variable 'server_domain_len' can be reduced. [variableScope]
 size_t server_domain_len;
        ^
src/civetweb.c:18918:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
src/md5.inl:419:13: style: Checking if unsigned expression 'nbytes' is less than zero. [unsignedLessThanZero]
 if (nbytes <= 0)
            ^
src/civetweb.c:18485:38: style: Checking if unsigned expression 'port' is less than zero. [unsignedLessThanZero]
   if ((portend != hostend) || (port <= 0) || !is_valid_port(port)) {
                                     ^
src/civetweb.c:18533:39: style: Checking if unsigned expression 'port' is less than zero. [unsignedLessThanZero]
    if ((portend != hostend) || (port <= 0)
                                      ^
src/civetweb.c:8478:30: portability: Passing NULL after the last typed argument to a variadic function leads to undefined behaviour. [varFuncNullUB]
 mg_md5(ha2, method, ":", uri, NULL);
                             ^
src/civetweb.c:8490:12: portability: Passing NULL after the last typed argument to a variadic function leads to undefined behaviour. [varFuncNullUB]
        ha2,
           ^
src/civetweb.c:8864:39: portability: Passing NULL after the last typed argument to a variadic function leads to undefined behaviour. [varFuncNullUB]
           workdata->ah.plain_password,
                                      ^
src/civetweb.c:9262:45: portability: Passing NULL after the last typed argument to a variadic function leads to undefined behaviour. [varFuncNullUB]
 mg_md5(ha1buf, user, ":", domain, ":", pass, NULL);
                                            ^
src/civetweb.c:12898:42: portability: Passing NULL after the last typed argument to a variadic function leads to undefined behaviour. [varFuncNullUB]
           conn->request_info.remote_user,
                                         ^
src/civetweb.c:5977:8: style: Redundant pointer operation on 'stop_flag' - it's already a pointer. [redundantPointerOp]
  if (!STOP_FLAG_IS_ZERO(&*stop_flag)) {
       ^
src/civetweb.c:15390:43: style:inconclusive: Function 'handle_file_based_request' argument 3 names different: declaration 'filep' definition 'file'. [funcArgNamesDifferent]
                          struct mg_file *file)
                                          ^
src/civetweb.c:4190:55: note: Function 'handle_file_based_request' argument 3 names different: declaration 'filep' definition 'file'.
                                      struct mg_file *filep);
                                                      ^
src/civetweb.c:15390:43: note: Function 'handle_file_based_request' argument 3 names different: declaration 'filep' definition 'file'.
                          struct mg_file *file)
                                          ^
src/civetweb.c:18964:8: style: struct member 'websocket_client_thread_data::callback_data' is never used. [unusedStructMember]
 void *callback_data;
       ^
src/civetweb.c:6462:31: style: Variable 'now' is assigned a value that is never used. [unreadVariable]
 uint64_t start_time = 0, now = 0, timeout_ns = 0;
                              ^
src/civetweb.c:11141:21: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
 int request_len, n = 0;
                    ^
src/civetweb.c:19724:15: style: Variable 'queue_filled' is assigned a value that is never used. [unreadVariable]
 queue_filled = ctx->sq_head - ctx->sq_tail;
              ^
src/civetweb.c:6973:2: error: va_list 'ap_copy' used before va_start() was called. [va_list_usedBeforeStarted]
 va_copy(ap_copy, ap);
 ^
src/civetweb.c:6974:37: error: va_list 'ap_copy' used before va_start() was called. [va_list_usedBeforeStarted]
 len = vsnprintf_impl(NULL, 0, fmt, ap_copy);
                                    ^
src/civetweb.c:6975:2: error: va_list 'ap_copy' used before va_start() was called. [va_list_usedBeforeStarted]
 va_end(ap_copy);
 ^
src/civetweb.c:6982:3: error: va_list 'ap_copy' used before va_start() was called. [va_list_usedBeforeStarted]
  va_copy(ap_copy, ap);
  ^
src/civetweb.c:6983:38: error: va_list 'ap_copy' used before va_start() was called. [va_list_usedBeforeStarted]
  len = alloc_vprintf2(out_buf, fmt, ap_copy);
                                     ^
src/civetweb.c:6984:3: error: va_list 'ap_copy' used before va_start() was called. [va_list_usedBeforeStarted]
  va_end(ap_copy);
  ^
src/mod_mbedtls.inl:241:18: style:inconclusive: Function 'mbed_debug' argument 1 names different: declaration 'context' definition 'user_param'. [funcArgNamesDifferent]
mbed_debug(void *user_param,
                 ^
src/mod_mbedtls.inl:46:30: note: Function 'mbed_debug' argument 1 names different: declaration 'context' definition 'user_param'.
static void mbed_debug(void *context,
                             ^
src/mod_mbedtls.inl:241:18: note: Function 'mbed_debug' argument 1 names different: declaration 'context' definition 'user_param'.
mbed_debug(void *user_param,
                 ^
src/civetweb.c:10199:9: warning: %I64d in format string (no. 1) requires '__int64 *' but the argument type is 'signed long *'. [invalidScanfArgType_int]
 return sscanf(header,
        ^
src/civetweb.c:10199:9: warning: %I64d in format string (no. 2) requires '__int64 *' but the argument type is 'signed long *'. [invalidScanfArgType_int]
 return sscanf(header,
        ^
src/civetweb.c:12892:5: warning: %I64u in format string (no. 1) requires 'unsigned __int64' but the argument type is 'unsigned long'. [invalidPrintfArgType_uint]
    sprintf(s, "%" UINT64_FMT, (uint64_t)dav_lock[i].locktime);
    ^
src/civetweb.c:5579:6: warning: Either the condition 'interp!=NULL' is redundant or there is possible null pointer dereference: interp. [nullPointerRedundantCheck]
 if (interp[0] != '\0') {
     ^
src/civetweb.c:5541:13: note: Assuming that condition 'interp!=NULL' is not redundant
 if (interp != NULL) {
            ^
src/civetweb.c:5579:6: note: Null pointer dereference
 if (interp[0] != '\0') {
     ^
src/civetweb.c:725:9: style: The scope of the variable 'd' can be reduced. [variableScope]
 double d;
        ^
src/civetweb.c:4809:11: style: The scope of the variable 'nsnow' can be reduced. [variableScope]
 uint64_t nsnow, nswaitabs;
          ^
src/civetweb.c:4809:18: style: The scope of the variable 'nswaitabs' can be reduced. [variableScope]
 uint64_t nsnow, nswaitabs;
                 ^
src/civetweb.c:4810:10: style: The scope of the variable 'nswaitrel' can be reduced. [variableScope]
 int64_t nswaitrel;
         ^
src/civetweb.c:5068:9: style: The scope of the variable 'creation_time' can be reduced. [variableScope]
 time_t creation_time;
        ^
src/civetweb.c:5043:19: warning: Division by result of sizeof(). memset() expects a size in bytes, did you intend to multiply instead? [sizeofDivisionMemfunc]
 memset(wbuf2, 0, ARRAY_SIZE(wbuf2) * sizeof(wchar_t));
                  ^
src/civetweb.c:772:17: style: Variable 'li2.LowPart' is assigned a value that is never used. [unreadVariable]
    li2.LowPart = t_kernel.dwLowDateTime;
                ^
src/civetweb.c:773:18: style: Variable 'li2.HighPart' is assigned a value that is never used. [unreadVariable]
    li2.HighPart = t_kernel.dwHighDateTime;
                 ^
src/civetweb.c:792:17: style: Variable 'li2.LowPart' is assigned a value that is never used. [unreadVariable]
    li2.LowPart = t_kernel.dwLowDateTime;
                ^
src/civetweb.c:793:18: style: Variable 'li2.HighPart' is assigned a value that is never used. [unreadVariable]
    li2.HighPart = t_kernel.dwHighDateTime;
                 ^
src/main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/main.c:918:7: style: The scope of the variable 'path' can be reduced. [variableScope]
 char path[PATH_MAX] = "", absolute[PATH_MAX] = "";
      ^
src/main.c:918:28: style: The scope of the variable 'absolute' can be reduced. [variableScope]
 char path[PATH_MAX] = "", absolute[PATH_MAX] = "";
                           ^
src/main.c:920:14: style: The scope of the variable 'p' can be reduced. [variableScope]
 const char *p;
             ^
src/main.c:1086:8: style: The scope of the variable 'buf' can be reduced. [variableScope]
  char buf[1024] = {0};
       ^
src/main.c:180:6: style: struct member 'tuser_data::_unused' is never used. [unusedStructMember]
 int _unused;
     ^
src/main.c:306:0: information: Skipping configuration 'BUILD_DATE' since the value of 'BUILD_DATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 const char *bd = BUILD_DATE;
^
src/main.c:761:0: information: Skipping configuration 'CONFIG_FILE' since the value of 'CONFIG_FILE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
           CONFIG_FILE);
^
src/main.c:771:0: information: Skipping configuration 'CONFIG_FILE' since the value of 'CONFIG_FILE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
           CONFIG_FILE);
^
src/main.c:780:0: information: Skipping configuration 'CONFIG_FILE2;__linux__' since the value of 'CONFIG_FILE2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  fp = fopen(CONFIG_FILE2, "r");
^
src/main.c:782:0: information: Skipping configuration 'CONFIG_FILE2;__linux__' since the value of 'CONFIG_FILE2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   strcpy(g_config_file_name, CONFIG_FILE2);
^
src/main.c:840:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT(sizeof(main_config_options) / sizeof(main_config_options[0])
^
src/main.c:842:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT((strlen(mg_version()) + 12) < sizeof(g_server_base_name));
^
src/main.c:840:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT;_MSC_VER' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT(sizeof(main_config_options) / sizeof(main_config_options[0])
^
src/main.c:842:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT;_MSC_VER' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT((strlen(mg_version()) + 12) < sizeof(g_server_base_name));
^
src/main.c:884:10: style: The scope of the variable 'wbuf' can be reduced. [variableScope]
 wchar_t wbuf[1024];
         ^
src/main.c:886:6: style: The scope of the variable 'len' can be reduced. [variableScope]
 int len;
     ^
src/main.c:1514:14: style: The scope of the variable 'default_value' can be reduced. [variableScope]
 const char *default_value;
             ^
src/main.c:1516:9: style: The scope of the variable 'id' can be reduced. [variableScope]
 int i, id;
        ^
src/main.c:1860:11: style: The scope of the variable 'u' can be reduced. [variableScope]
 unsigned u;
          ^
src/main.c:2229:8: style: The scope of the variable 'x' can be reduced. [variableScope]
 short x, y, next_cell_width, next_cell_height;
       ^
src/main.c:2229:14: style: The scope of the variable 'next_cell_width' can be reduced. [variableScope]
 short x, y, next_cell_width, next_cell_height;
             ^
src/main.c:2229:31: style: The scope of the variable 'next_cell_height' can be reduced. [variableScope]
 short x, y, next_cell_width, next_cell_height;
                              ^
src/main.c:2493:11: style: The scope of the variable 'nelems' can be reduced. [variableScope]
 short y, nelems;
          ^
src/main.c:1631:10: style: Variable 'name' is assigned a value that is never used. [unreadVariable]
    name = default_options[i].name;
         ^
src/main.c:840:0: information: Skipping configuration 'DEBUG_ASSERT' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT(sizeof(main_config_options) / sizeof(main_config_options[0])
^
src/main.c:842:0: information: Skipping configuration 'DEBUG_ASSERT' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT((strlen(mg_version()) + 12) < sizeof(g_server_base_name));
^
src/main.c:932:0: information: Skipping configuration 'IGNORE_UNUSED_RESULT' since the value of 'IGNORE_UNUSED_RESULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   IGNORE_UNUSED_RESULT(getcwd(path, sizeof(path)));
^
src/main.c:946:0: information: Skipping configuration 'IGNORE_UNUSED_RESULT' since the value of 'IGNORE_UNUSED_RESULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  IGNORE_UNUSED_RESULT(abs_path(path, absolute, sizeof(absolute)));
^
src/third_party/LuaXML_lib.c:486:2: error: syntax error [syntaxError]
 if
 ^
src/third_party/LuaXML_lib.c:694:0: information: Skipping configuration 'luaL_optint' since the value of 'luaL_optint' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 enum whitespace_mode mode = luaL_optint(L, 2, WHITESPACE_TRIM);
^
src/third_party/LuaXML_lib.c:1186:0: information: Skipping configuration 'luaL_optint' since the value of 'luaL_optint' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 int maxdepth = luaL_optint(L, 7, -1); // default (< 0) indicates "no limit"
^
src/third_party/LuaXML_lib.c:1122:0: information: Skipping configuration 'lua_equal' since the value of 'lua_equal' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (!lua_equal(L, -1, 2))
^
src/third_party/LuaXML_lib.c:1132:0: information: Skipping configuration 'lua_equal' since the value of 'lua_equal' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (!lua_equal(L, -1, 4))
^
src/third_party/LuaXML_lib.c:1204:0: information: Skipping configuration 'lua_equal' since the value of 'lua_equal' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  cont = !lua_equal(L, -1, -2);
^
src/third_party/duktape-1.5.2/examples/alloc-logging/duk_alloc_logging.c:72:2: error: Memory leak: hdr [memleak]
 return ret;
 ^
src/third_party/duktape-1.5.2/examples/alloc-logging/duk_alloc_logging.c:121:4: error: Memory leak: hdr [memleak]
   return ret;
   ^
src/third_party/duktape-1.5.2/examples/alloc-logging/duk_alloc_logging.c:77:9: style: The scope of the variable 'old_size' can be reduced. [variableScope]
 size_t old_size;
        ^
src/third_party/duktape-1.5.2/examples/alloc-logging/duk_alloc_logging.c:78:8: style: The scope of the variable 't' can be reduced. [variableScope]
 void *t;
       ^
src/third_party/duktape-1.5.2/examples/alloc-logging/duk_alloc_logging.c:32:10: style: union member 'Anonymous0::d' is never used. [unusedStructMember]
  double d;
         ^
src/third_party/duktape-1.5.2/examples/alloc-torture/duk_alloc_torture.c:99:21: style: The scope of the variable 'old_p' can be reduced. [variableScope]
 unsigned char *p, *old_p;
                    ^
src/third_party/duktape-1.5.2/examples/alloc-torture/duk_alloc_torture.c:100:9: style: The scope of the variable 'old_size' can be reduced. [variableScope]
 size_t old_size;
        ^
src/third_party/duktape-1.5.2/examples/alloc-torture/duk_alloc_torture.c:32:10: style: union member 'Anonymous0::d' is never used. [unusedStructMember]
  double d;
         ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1006:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_LOGGING) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1006:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_LOGGING) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1018:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_TORTURE) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1018:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_TORTURE) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1030:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_HYBRID) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1030:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_HYBRID) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1048:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_AJSHEAP) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1048:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_AJSHEAP) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1064:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_DEFAULT) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1064:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_DEFAULT) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:932:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:717:7: style: Condition 'buffer' is always true [knownConditionTrueFalse]
  if (buffer && buffer[0] != (char) 0) {
      ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:713:7: note: Assuming that condition '!buffer' is not redundant
  if (!buffer) {
      ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:717:7: note: Condition 'buffer' is always true
  if (buffer && buffer[0] != (char) 0) {
      ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:722:42: warning: Either the condition 'buffer' is redundant or there is possible null pointer dereference: buffer. [nullPointerRedundantCheck]
  duk_push_uint(ctx, (duk_uint_t) strlen(buffer));
                                         ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:733:7: note: Assuming that condition 'buffer' is not redundant
  if (buffer) {
      ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:722:42: note: Null pointer dereference
  duk_push_uint(ctx, (duk_uint_t) strlen(buffer));
                                         ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:856:10: error: Resource handle 'f' freed twice. [doubleFree]
  (void) fclose(f);
         ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:849:10: note: Resource handle 'f' freed twice.
  (void) fclose(f);
         ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:856:10: note: Resource handle 'f' freed twice.
  (void) fclose(f);
         ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:847:13: warning: Either the condition '!f' is redundant or there is possible null pointer dereference: f. [nullPointerRedundantCheck]
 rc = fseek(f, 0, SEEK_END);
            ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:842:6: note: Assuming that condition '!f' is not redundant
 if (!f) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:847:13: note: Null pointer dereference
 rc = fseek(f, 0, SEEK_END);
            ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:853:23: warning: Either the condition '!f' is redundant or there is possible null pointer dereference: f. [nullPointerRedundantCheck]
 len = (size_t) ftell(f);
                      ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:842:6: note: Assuming that condition '!f' is not redundant
 if (!f) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:853:23: note: Null pointer dereference
 len = (size_t) ftell(f);
                      ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:854:13: warning: Either the condition '!f' is redundant or there is possible null pointer dereference: f. [nullPointerRedundantCheck]
 rc = fseek(f, 0, SEEK_SET);
            ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:842:6: note: Assuming that condition '!f' is not redundant
 if (!f) {
     ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:854:13: note: Null pointer dereference
 rc = fseek(f, 0, SEEK_SET);
            ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:553:17: style: The scope of the variable 'nloops' can be reduced. [variableScope]
   size_t i, j, nloops;
                ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1208:23: style: Label 'root' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   FS.mount(NODEFS, { root: "." }, "/working");
                      ^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline.c:1223:23: style: Label 'root' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   FS.mount(NODEFS, { root: "/tmp" }, "/tmp");
                      ^
src/third_party/duktape-1.5.2/examples/codepage-conv/duk_codepage_conv.c:21:15: style: The scope of the variable 'cp' can be reduced. [variableScope]
 unsigned int cp;
              ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:90:3: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
  buf += 3;
  ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:1114:17: style: The scope of the variable 'now' can be reduced. [variableScope]
  size_t avail, now;
                ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:530:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = duk__trans_dvalue_encode_i32(ctx, p, i);
     ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:544:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:552:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:560:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:575:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:583:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:629:5: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
  p = duk__trans_dvalue_encode_double(ctx, p, dv->d);
    ^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_unix.c:55:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 addr.sin_port = htons(DUK_DEBUG_PORT);
^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_unix.c:100:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 fprintf(stderr, "Waiting for debug connection on port %d\n", (int) DUK_DEBUG_PORT);
^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:105:23: warning: Either the condition 'result!=NULL' is redundant or there is possible null pointer dereference: result. [nullPointerRedundantCheck]
 server_sock = socket(result->ai_family, result->ai_socktype, result->ai_protocol);
                      ^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:129:13: note: Assuming that condition 'result!=NULL' is not redundant
 if (result != NULL) {
            ^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:105:23: note: Null pointer dereference
 server_sock = socket(result->ai_family, result->ai_socktype, result->ai_protocol);
                      ^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:113:25: warning: Either the condition 'result!=NULL' is redundant or there is possible null pointer dereference: result. [nullPointerRedundantCheck]
 rc = bind(server_sock, result->ai_addr, (int) result->ai_addrlen);
                        ^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:129:13: note: Assuming that condition 'result!=NULL' is not redundant
 if (result != NULL) {
            ^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:113:25: note: Null pointer dereference
 rc = bind(server_sock, result->ai_addr, (int) result->ai_addrlen);
                        ^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:98:0: information: Skipping configuration 'DUK_DEBUG_ADDRESS' since the value of 'DUK_DEBUG_ADDRESS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 rc = getaddrinfo(DUK_DEBUG_ADDRESS, DUK__STRINGIFY(DUK_DEBUG_PORT), &hints, &result);
^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:98:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 rc = getaddrinfo(DUK_DEBUG_ADDRESS, DUK__STRINGIFY(DUK_DEBUG_PORT), &hints, &result);
^
src/third_party/duktape-1.5.2/examples/debug-trans-socket/duk_trans_socket_windows.c:177:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 fprintf(stderr, "Waiting for debug connection on port %d\n", (int) DUK_DEBUG_PORT);
^
src/third_party/duktape-1.5.2/examples/eval/eval.c:28:14: style: The scope of the variable 'res' can be reduced. [variableScope]
 const char *res;
             ^
src/third_party/duktape-1.5.2/examples/eventloop/c_eventloop.c:84:12: style: The scope of the variable 't' can be reduced. [variableScope]
 ev_timer *t;
           ^
src/third_party/duktape-1.5.2/examples/eventloop/poll.c:17:6: style: The scope of the variable 'fd' can be reduced. [variableScope]
 int fd, rc;
     ^
src/third_party/duktape-1.5.2/examples/eventloop/socket.c:105:23: warning:inconclusive: Possible null pointer dereference: addr_inet [nullPointer]
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.5.2/examples/eventloop/socket.c:93:14: note: Assignment 'addr_inet=NULL', assigned value is 0
 addr_inet = NULL;
             ^
src/third_party/duktape-1.5.2/examples/eventloop/socket.c:105:23: note: Null pointer dereference
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.5.2/examples/eventloop/socket.c:213:23: warning:inconclusive: Possible null pointer dereference: addr_inet [nullPointer]
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.5.2/examples/eventloop/socket.c:201:14: note: Assignment 'addr_inet=NULL', assigned value is 0
 addr_inet = NULL;
             ^
src/third_party/duktape-1.5.2/examples/eventloop/socket.c:213:23: note: Null pointer dereference
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.5.2/examples/sandbox/sandbox.c:63:2: error: Memory leak: hdr [memleak]
 return (void *) (hdr + 1);
 ^
src/third_party/duktape-1.5.2/examples/sandbox/sandbox.c:124:4: error: Memory leak: hdr [memleak]
   return (void *) (hdr + 1);
   ^
src/third_party/duktape-1.5.2/examples/sandbox/sandbox.c:68:9: style: The scope of the variable 'old_size' can be reduced. [variableScope]
 size_t old_size;
        ^
src/third_party/duktape-1.5.2/examples/sandbox/sandbox.c:69:8: style: The scope of the variable 't' can be reduced. [variableScope]
 void *t;
       ^
src/third_party/duktape-1.5.2/examples/sandbox/sandbox.c:26:10: style: union member 'Anonymous0::d' is never used. [unusedStructMember]
  double d;
         ^
src/third_party/duktape-1.5.2/src-noline/duktape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 729 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-noline/duktape.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_alloc_default.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_alloc_default.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_buffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_buffer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_bytecode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_bytecode.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_call.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_call.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_codec.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_codec.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_compile.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_compile.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_debug.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_debug.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_heap.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_heap.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_logging.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_logging.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_memory.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_memory.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_object.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_object.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_stack.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_stack.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_string.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_string.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_var.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_api_var.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_array.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_array.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_boolean.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_boolean.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_buffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_buffer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_date.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_date.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_date_unix.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_date_unix.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_date_windows.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_date_windows.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_duktape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 383 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_duktape.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_error.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_error.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_function.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_function.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_global.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 385 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_global.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_json.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 399 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_json.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_logger.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_logger.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_math.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 383 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_math.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_number.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_number.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_object.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_object.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_pointer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_pointer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_proxy.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_proxy.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_regexp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_regexp.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_string.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_string.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_thread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_thread.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_thrower.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_bi_thrower.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_builtins.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_builtins.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_fixedbuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_fixedbuffer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_heap.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_heap.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_macros.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_macros.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_vsnprintf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 385 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_debug_vsnprintf.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 395 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_debugger.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_augment.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_augment.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_longjmp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_longjmp.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_macros.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 390 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_macros.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_throw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_error_throw.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hbuffer_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hbuffer_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hbuffer_ops.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hbuffer_ops.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hbufferobject_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hbufferobject_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 410 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_hashstring.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_hashstring.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_markandsweep.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 399 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_markandsweep.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_memory.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_memory.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_refcount.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 387 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_refcount.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_stringcache.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_stringcache.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_stringtable.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 404 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_heap_stringtable.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_class.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_class.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_enum.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_enum.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_finalizer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_finalizer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_pc2line.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_pc2line.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_props.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hobject_props.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hstring_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hstring_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_builtins.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 402 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_builtins.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_stacks.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_hthread_stacks.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_call.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 387 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_call.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_compiler.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 397 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_compiler.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_executor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 393 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_executor.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_ops.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_ops.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_var.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_js_var.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_lexer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 387 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_lexer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_numconv.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_numconv.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_regexp_compiler.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_regexp_compiler.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_regexp_executor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_regexp_executor.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_replacements.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 385 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_replacements.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_selftest.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_selftest.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_strings.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_strings.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_tval.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_tval.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_unicode_support.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 383 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_unicode_support.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_unicode_tables.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_unicode_tables.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_bitdecoder.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_bitdecoder.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_bitencoder.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_bitencoder.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_bufwriter.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_bufwriter.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_hashbytes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_hashbytes.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_hashprime.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_hashprime.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_tinyrandom.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src-separate/duk_util_tinyrandom.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.5.2/src/duktape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.5.2/src/duktape.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/examples/alloc-logging/duk_alloc_logging.c:72:2: error: Memory leak: hdr [memleak]
 return ret;
 ^
src/third_party/duktape-1.8.0/examples/alloc-logging/duk_alloc_logging.c:121:4: error: Memory leak: hdr [memleak]
   return ret;
   ^
src/third_party/duktape-1.8.0/examples/alloc-logging/duk_alloc_logging.c:77:9: style: The scope of the variable 'old_size' can be reduced. [variableScope]
 size_t old_size;
        ^
src/third_party/duktape-1.8.0/examples/alloc-logging/duk_alloc_logging.c:78:8: style: The scope of the variable 't' can be reduced. [variableScope]
 void *t;
       ^
src/third_party/duktape-1.8.0/examples/alloc-logging/duk_alloc_logging.c:32:10: style: union member 'Anonymous0::d' is never used. [unusedStructMember]
  double d;
         ^
src/third_party/duktape-1.8.0/examples/alloc-torture/duk_alloc_torture.c:99:21: style: The scope of the variable 'old_p' can be reduced. [variableScope]
 unsigned char *p, *old_p;
                    ^
src/third_party/duktape-1.8.0/examples/alloc-torture/duk_alloc_torture.c:100:9: style: The scope of the variable 'old_size' can be reduced. [variableScope]
 size_t old_size;
        ^
src/third_party/duktape-1.8.0/examples/alloc-torture/duk_alloc_torture.c:32:10: style: union member 'Anonymous0::d' is never used. [unusedStructMember]
  double d;
         ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1006:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_LOGGING) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1006:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_LOGGING) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1018:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_TORTURE) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1018:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_TORTURE) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1030:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_HYBRID) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1030:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_HYBRID) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1048:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_AJSHEAP) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1048:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_AJSHEAP) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1064:6: style: Condition '!ctx' is always true [knownConditionTrueFalse]
 if (!ctx && alloc_provider == ALLOC_DEFAULT) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1005:8: note: Assignment 'ctx=NULL', assigned value is 0
 ctx = NULL;
       ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1064:6: note: Condition '!ctx' is always true
 if (!ctx && alloc_provider == ALLOC_DEFAULT) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:932:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:717:7: style: Condition 'buffer' is always true [knownConditionTrueFalse]
  if (buffer && buffer[0] != (char) 0) {
      ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:713:7: note: Assuming that condition '!buffer' is not redundant
  if (!buffer) {
      ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:717:7: note: Condition 'buffer' is always true
  if (buffer && buffer[0] != (char) 0) {
      ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:722:42: warning: Either the condition 'buffer' is redundant or there is possible null pointer dereference: buffer. [nullPointerRedundantCheck]
  duk_push_uint(ctx, (duk_uint_t) strlen(buffer));
                                         ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:733:7: note: Assuming that condition 'buffer' is not redundant
  if (buffer) {
      ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:722:42: note: Null pointer dereference
  duk_push_uint(ctx, (duk_uint_t) strlen(buffer));
                                         ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:856:10: error: Resource handle 'f' freed twice. [doubleFree]
  (void) fclose(f);
         ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:849:10: note: Resource handle 'f' freed twice.
  (void) fclose(f);
         ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:856:10: note: Resource handle 'f' freed twice.
  (void) fclose(f);
         ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:847:13: warning: Either the condition '!f' is redundant or there is possible null pointer dereference: f. [nullPointerRedundantCheck]
 rc = fseek(f, 0, SEEK_END);
            ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:842:6: note: Assuming that condition '!f' is not redundant
 if (!f) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:847:13: note: Null pointer dereference
 rc = fseek(f, 0, SEEK_END);
            ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:853:23: warning: Either the condition '!f' is redundant or there is possible null pointer dereference: f. [nullPointerRedundantCheck]
 len = (size_t) ftell(f);
                      ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:842:6: note: Assuming that condition '!f' is not redundant
 if (!f) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:853:23: note: Null pointer dereference
 len = (size_t) ftell(f);
                      ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:854:13: warning: Either the condition '!f' is redundant or there is possible null pointer dereference: f. [nullPointerRedundantCheck]
 rc = fseek(f, 0, SEEK_SET);
            ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:842:6: note: Assuming that condition '!f' is not redundant
 if (!f) {
     ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:854:13: note: Null pointer dereference
 rc = fseek(f, 0, SEEK_SET);
            ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:553:17: style: The scope of the variable 'nloops' can be reduced. [variableScope]
   size_t i, j, nloops;
                ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1208:23: style: Label 'root' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   FS.mount(NODEFS, { root: "." }, "/working");
                      ^
src/third_party/duktape-1.8.0/examples/cmdline/duk_cmdline.c:1223:23: style: Label 'root' is not used. There is #if in function body so the label might be used in code that is removed by the preprocessor. [unusedLabelConfiguration]
   FS.mount(NODEFS, { root: "/tmp" }, "/tmp");
                      ^
src/third_party/duktape-1.8.0/examples/codepage-conv/duk_codepage_conv.c:21:15: style: The scope of the variable 'cp' can be reduced. [variableScope]
 unsigned int cp;
              ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:90:3: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
  buf += 3;
  ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:1114:17: style: The scope of the variable 'now' can be reduced. [variableScope]
  size_t avail, now;
                ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:530:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p = duk__trans_dvalue_encode_i32(ctx, p, i);
     ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:544:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:552:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:560:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:575:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:583:6: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
   p += i;
     ^
src/third_party/duktape-1.8.0/examples/debug-trans-dvalue/duk_trans_dvalue.c:629:5: style: Variable 'p' is assigned a value that is never used. [unreadVariable]
  p = duk__trans_dvalue_encode_double(ctx, p, dv->d);
    ^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_unix.c:55:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 addr.sin_port = htons(DUK_DEBUG_PORT);
^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_unix.c:100:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 fprintf(stderr, "Waiting for debug connection on port %d\n", (int) DUK_DEBUG_PORT);
^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:105:23: warning: Either the condition 'result!=NULL' is redundant or there is possible null pointer dereference: result. [nullPointerRedundantCheck]
 server_sock = socket(result->ai_family, result->ai_socktype, result->ai_protocol);
                      ^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:129:13: note: Assuming that condition 'result!=NULL' is not redundant
 if (result != NULL) {
            ^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:105:23: note: Null pointer dereference
 server_sock = socket(result->ai_family, result->ai_socktype, result->ai_protocol);
                      ^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:113:25: warning: Either the condition 'result!=NULL' is redundant or there is possible null pointer dereference: result. [nullPointerRedundantCheck]
 rc = bind(server_sock, result->ai_addr, (int) result->ai_addrlen);
                        ^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:129:13: note: Assuming that condition 'result!=NULL' is not redundant
 if (result != NULL) {
            ^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:113:25: note: Null pointer dereference
 rc = bind(server_sock, result->ai_addr, (int) result->ai_addrlen);
                        ^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:98:0: information: Skipping configuration 'DUK_DEBUG_ADDRESS' since the value of 'DUK_DEBUG_ADDRESS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 rc = getaddrinfo(DUK_DEBUG_ADDRESS, DUK__STRINGIFY(DUK_DEBUG_PORT), &hints, &result);
^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:98:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 rc = getaddrinfo(DUK_DEBUG_ADDRESS, DUK__STRINGIFY(DUK_DEBUG_PORT), &hints, &result);
^
src/third_party/duktape-1.8.0/examples/debug-trans-socket/duk_trans_socket_windows.c:177:0: information: Skipping configuration 'DUK_DEBUG_PORT' since the value of 'DUK_DEBUG_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 fprintf(stderr, "Waiting for debug connection on port %d\n", (int) DUK_DEBUG_PORT);
^
src/third_party/duktape-1.8.0/examples/eval/eval.c:28:14: style: The scope of the variable 'res' can be reduced. [variableScope]
 const char *res;
             ^
src/third_party/duktape-1.8.0/examples/eventloop/c_eventloop.c:84:12: style: The scope of the variable 't' can be reduced. [variableScope]
 ev_timer *t;
           ^
src/third_party/duktape-1.8.0/examples/eventloop/poll.c:17:6: style: The scope of the variable 'fd' can be reduced. [variableScope]
 int fd, rc;
     ^
src/third_party/duktape-1.8.0/examples/eventloop/socket.c:105:23: warning:inconclusive: Possible null pointer dereference: addr_inet [nullPointer]
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.8.0/examples/eventloop/socket.c:93:14: note: Assignment 'addr_inet=NULL', assigned value is 0
 addr_inet = NULL;
             ^
src/third_party/duktape-1.8.0/examples/eventloop/socket.c:105:23: note: Null pointer dereference
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.8.0/examples/eventloop/socket.c:213:23: warning:inconclusive: Possible null pointer dereference: addr_inet [nullPointer]
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.8.0/examples/eventloop/socket.c:201:14: note: Assignment 'addr_inet=NULL', assigned value is 0
 addr_inet = NULL;
             ^
src/third_party/duktape-1.8.0/examples/eventloop/socket.c:213:23: note: Null pointer dereference
 sockaddr.sin_addr = *addr_inet;
                      ^
src/third_party/duktape-1.8.0/examples/sandbox/sandbox.c:63:2: error: Memory leak: hdr [memleak]
 return (void *) (hdr + 1);
 ^
src/third_party/duktape-1.8.0/examples/sandbox/sandbox.c:124:4: error: Memory leak: hdr [memleak]
   return (void *) (hdr + 1);
   ^
src/third_party/duktape-1.8.0/examples/sandbox/sandbox.c:68:9: style: The scope of the variable 'old_size' can be reduced. [variableScope]
 size_t old_size;
        ^
src/third_party/duktape-1.8.0/examples/sandbox/sandbox.c:69:8: style: The scope of the variable 't' can be reduced. [variableScope]
 void *t;
       ^
src/third_party/duktape-1.8.0/examples/sandbox/sandbox.c:26:10: style: union member 'Anonymous0::d' is never used. [unusedStructMember]
  double d;
         ^
src/third_party/duktape-1.8.0/src-noline/duktape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 730 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-noline/duktape.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_alloc_default.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_alloc_default.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_buffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_buffer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_bytecode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_bytecode.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_call.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_call.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_codec.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_codec.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_compile.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_compile.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_debug.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_debug.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_heap.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_heap.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_logging.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_logging.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_memory.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_memory.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_object.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_object.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_stack.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 389 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_stack.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_string.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_string.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_var.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_api_var.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_array.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_array.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_boolean.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_boolean.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_buffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_buffer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_date.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_date.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_date_unix.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_date_unix.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_date_windows.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_date_windows.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_duktape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 383 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_duktape.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_error.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_error.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_function.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_function.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_global.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 385 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_global.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_json.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 399 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_json.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_logger.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_logger.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_math.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 383 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_math.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_number.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_number.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_object.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_object.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_pointer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_pointer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_proxy.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_proxy.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_regexp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_regexp.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_string.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_string.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_thread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_thread.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_thrower.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_bi_thrower.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_builtins.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_builtins.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_fixedbuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_fixedbuffer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_heap.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_heap.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_macros.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_macros.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_vsnprintf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 385 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_debug_vsnprintf.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 395 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_debugger.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_augment.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_augment.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_longjmp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_longjmp.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_macros.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 390 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_macros.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_throw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_error_throw.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hbuffer_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hbuffer_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hbuffer_ops.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hbuffer_ops.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hbufferobject_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hbufferobject_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 410 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_hashstring.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_hashstring.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_markandsweep.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 399 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_markandsweep.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_memory.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_memory.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_refcount.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_refcount.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_stringcache.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_stringcache.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_stringtable.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 404 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_heap_stringtable.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_class.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_class.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_enum.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_enum.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_finalizer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_finalizer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_pc2line.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_pc2line.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_props.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hobject_props.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hstring_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hstring_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_alloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_alloc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_builtins.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 402 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_builtins.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_stacks.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_hthread_stacks.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_call.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 387 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_call.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_compiler.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 397 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_compiler.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_executor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 393 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_executor.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_ops.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_ops.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_var.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_js_var.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_lexer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 387 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_lexer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_numconv.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_numconv.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_regexp_compiler.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_regexp_compiler.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_regexp_executor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_regexp_executor.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_replacements.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 385 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_replacements.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_selftest.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 388 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_selftest.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_strings.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_strings.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_tval.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_tval.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_unicode_support.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 383 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_unicode_support.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_unicode_tables.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_unicode_tables.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_bitdecoder.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_bitdecoder.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_bitencoder.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_bitencoder.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_bufwriter.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_bufwriter.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_hashbytes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 379 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_hashbytes.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_hashprime.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 380 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_hashprime.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_misc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 381 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_misc.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_tinyrandom.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 378 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src-separate/duk_util_tinyrandom.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/duktape-1.8.0/src/duktape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 382 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/duktape-1.8.0/src/duktape.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
src/third_party/lfs.c:1108:5: warning:inconclusive: Possible null pointer dereference: target [nullPointer]
    target[tsize] = '\0';
    ^
src/third_party/lfs.c:1077:18: note: Assignment 'target=NULL', assigned value is 0
  char *target = NULL;
                 ^
src/third_party/lfs.c:1108:5: note: Null pointer dereference
    target[tsize] = '\0';
    ^
src/third_party/lsqlite3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lsqlite3.c:555:9: style: The scope of the variable 'result' can be reduced. [variableScope]
    int result, n;
        ^
src/third_party/lsqlite3.c:579:17: style: The scope of the variable 'name' can be reduced. [variableScope]
    const char *name;
                ^
src/third_party/lsqlite3.c:1856:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/third_party/lsqlite3.c:1318:16: style: Unused variable: n [unusedVariable]
    lua_Number n;
               ^
src/third_party/lua-5.1.5/src/lapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lapi.c:248:53: style:inconclusive: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'. [funcArgNamesDifferent]
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.1.5/src/lua.h:140:59: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char     *(lua_typename) (lua_State *L, int tp);
                                                          ^
src/third_party/lua-5.1.5/src/lapi.c:248:53: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.1.5/src/lapi.c:1025:53: style:inconclusive: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'. [funcArgNamesDifferent]
LUA_API void *lua_newuserdata (lua_State *L, size_t size) {
                                                    ^
src/third_party/lua-5.1.5/src/lua.h:182:55: note: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);
                                                      ^
src/third_party/lua-5.1.5/src/lapi.c:1025:53: note: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *lua_newuserdata (lua_State *L, size_t size) {
                                                    ^
src/third_party/lua-5.1.5/src/lua.h:94:0: error: No header in #include [preprocessorErrorDirective]
#include LUA_USER_H
^
src/third_party/lua-5.1.5/src/lauxlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lauxlib.c:158:61: style:inconclusive: Function 'luaL_checklstring' argument 2 names different: declaration 'numArg' definition 'narg'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                            ^
src/third_party/lua-5.1.5/src/lauxlib.h:50:63: note: Function 'luaL_checklstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *(luaL_checklstring) (lua_State *L, int numArg,
                                                              ^
src/third_party/lua-5.1.5/src/lauxlib.c:158:61: note: Function 'luaL_checklstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                            ^
src/third_party/lua-5.1.5/src/lauxlib.c:158:75: style:inconclusive: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                                          ^
src/third_party/lua-5.1.5/src/lauxlib.h:51:67: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
                                                          size_t *l);
                                                                  ^
src/third_party/lua-5.1.5/src/lauxlib.c:158:75: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                                          ^
src/third_party/lua-5.1.5/src/lauxlib.c:165:59: style:inconclusive: Function 'luaL_optlstring' argument 2 names different: declaration 'numArg' definition 'narg'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,
                                                          ^
src/third_party/lua-5.1.5/src/lauxlib.h:52:61: note: Function 'luaL_optlstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *(luaL_optlstring) (lua_State *L, int numArg,
                                                            ^
src/third_party/lua-5.1.5/src/lauxlib.c:165:59: note: Function 'luaL_optlstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,
                                                          ^
src/third_party/lua-5.1.5/src/lauxlib.c:166:66: style:inconclusive: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.1.5/src/lauxlib.h:53:68: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                          const char *def, size_t *l);
                                                                   ^
src/third_party/lua-5.1.5/src/lauxlib.c:166:66: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.1.5/src/lbaselib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lcode.c:36:16: style: The scope of the variable 'previous' can be reduced. [variableScope]
  Instruction *previous;
               ^
src/third_party/lua-5.1.5/src/lcode.c:472:59: style:inconclusive: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'. [funcArgNamesDifferent]
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.1.5/src/lcode.h:61:69: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
LUAI_FUNC void luaK_storevar (FuncState *fs, expdesc *var, expdesc *e);
                                                                    ^
src/third_party/lua-5.1.5/src/lcode.c:472:59: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.1.5/src/lcode.c:689:53: style:inconclusive: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'. [funcArgNamesDifferent]
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e) {
                                                    ^
src/third_party/lua-5.1.5/src/lcode.h:70:63: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
LUAI_FUNC void luaK_prefix (FuncState *fs, UnOpr op, expdesc *v);
                                                              ^
src/third_party/lua-5.1.5/src/lcode.c:689:53: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e) {
                                                    ^
src/third_party/lua-5.1.5/src/lcode.c:737:54: style:inconclusive: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'. [funcArgNamesDifferent]
void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {
                                                     ^
src/third_party/lua-5.1.5/src/lcode.h:72:64: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
LUAI_FUNC void luaK_posfix (FuncState *fs, BinOpr op, expdesc *v1, expdesc *v2);
                                                               ^
src/third_party/lua-5.1.5/src/lcode.c:737:54: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {
                                                     ^
src/third_party/lua-5.1.5/src/lcode.c:737:67: style:inconclusive: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'. [funcArgNamesDifferent]
void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {
                                                                  ^
src/third_party/lua-5.1.5/src/lcode.h:72:77: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
LUAI_FUNC void luaK_posfix (FuncState *fs, BinOpr op, expdesc *v1, expdesc *v2);
                                                                            ^
src/third_party/lua-5.1.5/src/lcode.c:737:67: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {
                                                                  ^
src/third_party/lua-5.1.5/src/lcode.c:804:48: style:inconclusive: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                               ^
src/third_party/lua-5.1.5/src/lcode.h:46:58: note: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                         ^
src/third_party/lua-5.1.5/src/lcode.c:804:48: note: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                               ^
src/third_party/lua-5.1.5/src/lcode.c:804:55: style:inconclusive: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                      ^
src/third_party/lua-5.1.5/src/lcode.h:46:65: note: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                                ^
src/third_party/lua-5.1.5/src/lcode.c:804:55: note: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                      ^
src/third_party/lua-5.1.5/src/lcode.c:804:62: style:inconclusive: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                             ^
src/third_party/lua-5.1.5/src/lcode.h:46:72: note: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                                       ^
src/third_party/lua-5.1.5/src/lcode.c:804:62: note: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                             ^
src/third_party/lua-5.1.5/src/lcode.c:812:48: style:inconclusive: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.1.5/src/lcode.h:45:58: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                         ^
src/third_party/lua-5.1.5/src/lcode.c:812:48: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.1.5/src/lcode.c:812:64: style:inconclusive: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.1.5/src/lcode.h:45:74: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                                         ^
src/third_party/lua-5.1.5/src/lcode.c:812:64: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.1.5/src/ldblib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/ldebug.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/ldebug.c:567:65: style:inconclusive: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'. [funcArgNamesDifferent]
void luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                ^
src/third_party/lua-5.1.5/src/ldebug.h:22:58: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
                                             const char *opname);
                                                         ^
src/third_party/lua-5.1.5/src/ldebug.c:567:65: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
void luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                ^
src/third_party/lua-5.1.5/src/ldo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/ldo.c:457:27: style:inconclusive: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'. [funcArgNamesDifferent]
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.1.5/src/ldo.h:45:51: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                                        ptrdiff_t oldtop, ptrdiff_t ef);
                                                  ^
src/third_party/lua-5.1.5/src/ldo.c:457:27: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.1.5/src/ldump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lfunc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lfunc.c:145:3: style: Checking if unsigned expression '(unsigned long)(0+1)' is less than zero. [unsignedLessThanZero]
  luaM_freearray(L, f->lineinfo, f->sizelineinfo, int);
  ^
src/third_party/lua-5.1.5/src/lfunc.c:163:45: style:inconclusive: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'. [funcArgNamesDifferent]
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.1.5/src/lfunc.h:30:55: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
LUAI_FUNC const char *luaF_getlocalname (const Proto *func, int local_number,
                                                      ^
src/third_party/lua-5.1.5/src/lfunc.c:163:45: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.1.5/src/lgc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/linit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/liolib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/llex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/llex.c:81:21: warning: Either the condition 'token<257' is redundant or iscntrl() argument nr 1 can have invalid value. The value is 256 but the valid values are '0:255'. [invalidFunctionArg]
    return (iscntrl(token)) ? luaO_pushfstring(ls->L, "char(%d)", token) :
                    ^
src/third_party/lua-5.1.5/src/llex.c:79:13: note: Assuming that condition 'token<257' is not redundant
  if (token < FIRST_RESERVED) {
            ^
src/third_party/lua-5.1.5/src/llex.c:81:21: note: Invalid argument
    return (iscntrl(token)) ? luaO_pushfstring(ls->L, "char(%d)", token) :
                    ^
src/third_party/lua-5.1.5/src/llex.c:112:50: style:inconclusive: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'. [funcArgNamesDifferent]
void luaX_syntaxerror (LexState *ls, const char *msg) {
                                                 ^
src/third_party/lua-5.1.5/src/llex.h:77:60: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
LUAI_FUNC void luaX_syntaxerror (LexState *ls, const char *s);
                                                           ^
src/third_party/lua-5.1.5/src/llex.c:112:50: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
void luaX_syntaxerror (LexState *ls, const char *msg) {
                                                 ^
src/third_party/lua-5.1.5/src/lmathlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lmem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lmem.c:46:67: style:inconclusive: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'. [funcArgNamesDifferent]
void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,
                                                                  ^
src/third_party/lua-5.1.5/src/lmem.h:45:39: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'.
                               size_t size_elem, int limit,
                                      ^
src/third_party/lua-5.1.5/src/lmem.c:46:67: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'.
void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,
                                                                  ^
src/third_party/lua-5.1.5/src/lmem.c:76:56: style:inconclusive: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.1.5/src/lmem.h:41:66: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
LUAI_FUNC void *luaM_realloc_ (lua_State *L, void *block, size_t oldsize,
                                                                 ^
src/third_party/lua-5.1.5/src/lmem.c:76:56: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.1.5/src/lmem.c:76:70: style:inconclusive: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.1.5/src/lmem.h:42:66: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
                                                          size_t size);
                                                                 ^
src/third_party/lua-5.1.5/src/lmem.c:76:70: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.1.5/src/loadlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lobject.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lobject.c:182:58: style:inconclusive: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'. [funcArgNamesDifferent]
void luaO_chunkid (char *out, const char *source, size_t bufflen) {
                                                         ^
src/third_party/lua-5.1.5/src/lobject.h:377:68: note: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'.
LUAI_FUNC void luaO_chunkid (char *out, const char *source, size_t len);
                                                                   ^
src/third_party/lua-5.1.5/src/lobject.c:182:58: note: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'.
void luaO_chunkid (char *out, const char *source, size_t bufflen) {
                                                         ^
src/third_party/lua-5.1.5/src/lopcodes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/loslib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lparser.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lparser.c:359:14: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  Proto *f = fs->f;
             ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:359:14: note: Null pointer dereference
  Proto *f = fs->f;
             ^
src/third_party/lua-5.1.5/src/lparser.c:362:3: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  luaM_reallocvector(L, f->code, f->sizecode, fs->pc, Instruction);
  ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:362:3: note: Null pointer dereference
  luaM_reallocvector(L, f->code, f->sizecode, fs->pc, Instruction);
  ^
src/third_party/lua-5.1.5/src/lparser.c:363:17: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  f->sizecode = fs->pc;
                ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:363:17: note: Null pointer dereference
  f->sizecode = fs->pc;
                ^
src/third_party/lua-5.1.5/src/lparser.c:364:3: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  luaM_reallocvector(L, f->lineinfo, f->sizelineinfo, fs->pc, int);
  ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:364:3: note: Null pointer dereference
  luaM_reallocvector(L, f->lineinfo, f->sizelineinfo, fs->pc, int);
  ^
src/third_party/lua-5.1.5/src/lparser.c:365:21: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  f->sizelineinfo = fs->pc;
                    ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:365:21: note: Null pointer dereference
  f->sizelineinfo = fs->pc;
                    ^
src/third_party/lua-5.1.5/src/lparser.c:366:3: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  luaM_reallocvector(L, f->k, f->sizek, fs->nk, TValue);
  ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:366:3: note: Null pointer dereference
  luaM_reallocvector(L, f->k, f->sizek, fs->nk, TValue);
  ^
src/third_party/lua-5.1.5/src/lparser.c:367:14: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  f->sizek = fs->nk;
             ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:367:14: note: Null pointer dereference
  f->sizek = fs->nk;
             ^
src/third_party/lua-5.1.5/src/lparser.c:368:3: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  luaM_reallocvector(L, f->p, f->sizep, fs->np, Proto *);
  ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:368:3: note: Null pointer dereference
  luaM_reallocvector(L, f->p, f->sizep, fs->np, Proto *);
  ^
src/third_party/lua-5.1.5/src/lparser.c:369:14: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  f->sizep = fs->np;
             ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:369:14: note: Null pointer dereference
  f->sizep = fs->np;
             ^
src/third_party/lua-5.1.5/src/lparser.c:370:3: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  luaM_reallocvector(L, f->locvars, f->sizelocvars, fs->nlocvars, LocVar);
  ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:370:3: note: Null pointer dereference
  luaM_reallocvector(L, f->locvars, f->sizelocvars, fs->nlocvars, LocVar);
  ^
src/third_party/lua-5.1.5/src/lparser.c:371:20: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  f->sizelocvars = fs->nlocvars;
                   ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:371:20: note: Null pointer dereference
  f->sizelocvars = fs->nlocvars;
                   ^
src/third_party/lua-5.1.5/src/lparser.c:376:12: warning: Either the condition 'fs' is redundant or there is possible null pointer dereference: fs. [nullPointerRedundantCheck]
  ls->fs = fs->prev;
           ^
src/third_party/lua-5.1.5/src/lparser.c:378:7: note: Assuming that condition 'fs' is not redundant
  if (fs) anchor_token(ls);
      ^
src/third_party/lua-5.1.5/src/lparser.c:376:12: note: Null pointer dereference
  ls->fs = fs->prev;
           ^
src/third_party/lua-5.1.5/src/lstate.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lstring.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lstrlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/ltable.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/ltable.c:358:48: style:inconclusive: Function 'luaH_new' argument 3 names different: declaration 'lnhash' definition 'nhash'. [funcArgNamesDifferent]
Table *luaH_new (lua_State *L, int narray, int nhash) {
                                               ^
src/third_party/lua-5.1.5/src/ltable.h:27:58: note: Function 'luaH_new' argument 3 names different: declaration 'lnhash' definition 'nhash'.
LUAI_FUNC Table *luaH_new (lua_State *L, int narray, int lnhash);
                                                         ^
src/third_party/lua-5.1.5/src/ltable.c:358:48: note: Function 'luaH_new' argument 3 names different: declaration 'lnhash' definition 'nhash'.
Table *luaH_new (lua_State *L, int narray, int nhash) {
                                               ^
src/third_party/lua-5.1.5/src/ltablib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/ltm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lua.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lua.c:184:14: warning: Either the condition '(b=readline(prmt))!=NULL' is redundant or there is possible null pointer dereference: b. [nullPointerRedundantCheck]
  l = strlen(b);
             ^
src/third_party/lua-5.1.5/src/lua.c:182:7: note: Assuming that condition '(b=readline(prmt))!=NULL' is not redundant
  if (lua_readline(L, b, prmt) == 0)
      ^
src/third_party/lua-5.1.5/src/lua.c:184:14: note: Null pointer dereference
  l = strlen(b);
             ^
src/third_party/lua-5.1.5/src/lua.c:182:7: style: Redundant initialization for 'b'. The initialized value is overwritten before it is read. [redundantInitialization]
  if (lua_readline(L, b, prmt) == 0)
      ^
src/third_party/lua-5.1.5/src/lua.c:179:11: note: b is initialized
  char *b = buffer;
          ^
src/third_party/lua-5.1.5/src/lua.c:182:7: note: b is overwritten
  if (lua_readline(L, b, prmt) == 0)
      ^
src/third_party/lua-5.1.5/src/luac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lundump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lundump.c:50:10: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
 size_t r=luaZ_read(S->Z,b,size);
         ^
src/third_party/lua-5.1.5/src/lvm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/lvm.c:677:9: warning: Either the condition '(pstep=luaV_tonumber(pstep,ra+2))!=NULL' is redundant or there is possible null pointer dereference: pstep. [nullPointerRedundantCheck]
        setnvalue(ra, luai_numsub(nvalue(ra), nvalue(pstep)));
        ^
src/third_party/lua-5.1.5/src/lvm.c:675:19: note: Assuming that condition '(pstep=luaV_tonumber(pstep,ra+2))!=NULL' is not redundant
        else if (!tonumber(pstep, ra+2))
                  ^
src/third_party/lua-5.1.5/src/lvm.c:677:9: note: Null pointer dereference
        setnvalue(ra, luai_numsub(nvalue(ra), nvalue(pstep)));
        ^
src/third_party/lua-5.1.5/src/lzio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/print.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.1.5/src/print.c:30:10: warning: The address of local variable 'gc' might be accessed at non-zero index. [objectIndex]
  int c=s[i];
         ^
src/third_party/lua-5.1.5/src/print.c:66:14: note: Address of variable taken here.
 PrintString(rawtsvalue(o));
             ^
src/third_party/lua-5.1.5/src/print.c:66:14: note: Calling function 'PrintString', 1st argument '&(o)->value.gc->ts' value is lifetime=gc
 PrintString(rawtsvalue(o));
             ^
src/third_party/lua-5.1.5/src/print.c:30:10: note: The address of local variable 'gc' might be accessed at non-zero index.
  int c=s[i];
         ^
src/third_party/lua-5.2.4/src/lapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lapi.c:255:53: style:inconclusive: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'. [funcArgNamesDifferent]
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.2.4/src/lua.h:166:59: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char     *(lua_typename) (lua_State *L, int tp);
                                                          ^
src/third_party/lua-5.2.4/src/lapi.c:255:53: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.2.4/src/lapi.c:501:74: style:inconclusive: Function 'lua_pushlstring' argument 3 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {
                                                                         ^
src/third_party/lua-5.2.4/src/lua.h:209:76: note: Function 'lua_pushlstring' argument 3 names different: declaration 'l' definition 'len'.
LUA_API const char *(lua_pushlstring) (lua_State *L, const char *s, size_t l);
                                                                           ^
src/third_party/lua-5.2.4/src/lapi.c:501:74: note: Function 'lua_pushlstring' argument 3 names different: declaration 'l' definition 'len'.
LUA_API const char *lua_pushlstring (lua_State *L, const char *s, size_t len) {
                                                                         ^
src/third_party/lua-5.2.4/src/lapi.c:1175:53: style:inconclusive: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'. [funcArgNamesDifferent]
LUA_API void *lua_newuserdata (lua_State *L, size_t size) {
                                                    ^
src/third_party/lua-5.2.4/src/lua.h:230:55: note: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);
                                                      ^
src/third_party/lua-5.2.4/src/lapi.c:1175:53: note: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *lua_newuserdata (lua_State *L, size_t size) {
                                                    ^
src/third_party/lua-5.2.4/src/lapi.c:1055:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       lu_mem debt = cast(lu_mem, data) * 1024 - GCSTEPSIZE;
^
src/third_party/lua-5.2.4/src/llimits.h:53:0: information: Skipping configuration 'LUAI_USER_ALIGNMENT_T' since the value of 'LUAI_USER_ALIGNMENT_T' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;
^
src/third_party/lua-5.2.4/src/lauxlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lauxlib.c:598:7: style: The scope of the variable 'c' can be reduced. [variableScope]
  int c;
      ^
src/third_party/lua-5.2.4/src/lauxlib.c:357:61: style:inconclusive: Function 'luaL_checklstring' argument 2 names different: declaration 'numArg' definition 'narg'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                            ^
src/third_party/lua-5.2.4/src/lauxlib.h:36:63: note: Function 'luaL_checklstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *(luaL_checklstring) (lua_State *L, int numArg,
                                                              ^
src/third_party/lua-5.2.4/src/lauxlib.c:357:61: note: Function 'luaL_checklstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                            ^
src/third_party/lua-5.2.4/src/lauxlib.c:357:75: style:inconclusive: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                                          ^
src/third_party/lua-5.2.4/src/lauxlib.h:37:67: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
                                                          size_t *l);
                                                                  ^
src/third_party/lua-5.2.4/src/lauxlib.c:357:75: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {
                                                                          ^
src/third_party/lua-5.2.4/src/lauxlib.c:364:59: style:inconclusive: Function 'luaL_optlstring' argument 2 names different: declaration 'numArg' definition 'narg'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,
                                                          ^
src/third_party/lua-5.2.4/src/lauxlib.h:38:61: note: Function 'luaL_optlstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *(luaL_optlstring) (lua_State *L, int numArg,
                                                            ^
src/third_party/lua-5.2.4/src/lauxlib.c:364:59: note: Function 'luaL_optlstring' argument 2 names different: declaration 'numArg' definition 'narg'.
LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,
                                                          ^
src/third_party/lua-5.2.4/src/lauxlib.c:365:66: style:inconclusive: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.2.4/src/lauxlib.h:39:68: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                          const char *def, size_t *l);
                                                                   ^
src/third_party/lua-5.2.4/src/lauxlib.c:365:66: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.2.4/src/lua.h:118:0: error: No header in #include [preprocessorErrorDirective]
#include LUA_USER_H
^
src/third_party/lua-5.2.4/src/lauxlib.c:248:15: style: The scope of the variable 'what' can be reduced. [variableScope]
  const char *what = "exit";  /* type of termination */
              ^
src/third_party/lua-5.2.4/src/lauxlib.c:252:0: information: Skipping configuration 'LUA_USE_POSIX;inspectstat' since the value of 'inspectstat' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    inspectstat(stat, what);  /* interpret result */
^
src/third_party/lua-5.2.4/src/lbaselib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lbitlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lbitlib.c:41:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return trim(r);
^
src/third_party/lua-5.2.4/src/lbitlib.c:64:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lua_pushunsigned(L, trim(r));
^
src/third_party/lua-5.2.4/src/lbitlib.c:74:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lua_pushunsigned(L, trim(r));
^
src/third_party/lua-5.2.4/src/lbitlib.c:81:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lua_pushunsigned(L, trim(r));
^
src/third_party/lua-5.2.4/src/lbitlib.c:89:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    r = trim(r);
^
src/third_party/lua-5.2.4/src/lbitlib.c:90:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (i >= LUA_NBITS) r = 0;
^
src/third_party/lua-5.2.4/src/lbitlib.c:94:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (i >= LUA_NBITS) r = 0;
^
src/third_party/lua-5.2.4/src/lbitlib.c:96:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    r = trim(r);
^
src/third_party/lua-5.2.4/src/lbitlib.c:116:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (i < 0 || !(r & ((b_uint)1 << (LUA_NBITS - 1))))
^
src/third_party/lua-5.2.4/src/lbitlib.c:119:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (i >= LUA_NBITS) r = ALLONES;
^
src/third_party/lua-5.2.4/src/lbitlib.c:121:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      r = trim((r >> i) | ~(~(b_uint)0 >> i));  /* add signal bit */
^
src/third_party/lua-5.2.4/src/lbitlib.c:130:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  i &= (LUA_NBITS - 1);  /* i = i % NBITS */
^
src/third_party/lua-5.2.4/src/lbitlib.c:131:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  r = trim(r);
^
src/third_party/lua-5.2.4/src/lbitlib.c:133:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    r = (r << i) | (r >> (LUA_NBITS - i));
^
src/third_party/lua-5.2.4/src/lbitlib.c:134:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lua_pushunsigned(L, trim(r));
^
src/third_party/lua-5.2.4/src/lbitlib.c:160:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (f + w > LUA_NBITS)
^
src/third_party/lua-5.2.4/src/lbitlib.c:171:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  r = (r >> f) & mask(w);
^
src/third_party/lua-5.2.4/src/lbitlib.c:182:0: information: Skipping configuration 'LUA_NBITS' since the value of 'LUA_NBITS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  int m = mask(w);
^
src/third_party/lua-5.2.4/src/lcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lcode.c:333:5: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    setsvalue(L, L->top++, luaS_newlstr(L, (char *)&r, sizeof(r)));
    ^
src/third_party/lua-5.2.4/src/lcode.c:38:16: style: The scope of the variable 'previous' can be reduced. [variableScope]
  Instruction *previous;
               ^
src/third_party/lua-5.2.4/src/lcode.c:227:48: style:inconclusive: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                               ^
src/third_party/lua-5.2.4/src/lcode.h:48:58: note: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                         ^
src/third_party/lua-5.2.4/src/lcode.c:227:48: note: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                               ^
src/third_party/lua-5.2.4/src/lcode.c:227:55: style:inconclusive: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                      ^
src/third_party/lua-5.2.4/src/lcode.h:48:65: note: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                                ^
src/third_party/lua-5.2.4/src/lcode.c:227:55: note: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                      ^
src/third_party/lua-5.2.4/src/lcode.c:227:62: style:inconclusive: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                             ^
src/third_party/lua-5.2.4/src/lcode.h:48:72: note: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                                       ^
src/third_party/lua-5.2.4/src/lcode.c:227:62: note: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                             ^
src/third_party/lua-5.2.4/src/lcode.c:236:48: style:inconclusive: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.2.4/src/lcode.h:47:58: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                         ^
src/third_party/lua-5.2.4/src/lcode.c:236:48: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.2.4/src/lcode.c:236:64: style:inconclusive: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.2.4/src/lcode.h:47:74: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                                         ^
src/third_party/lua-5.2.4/src/lcode.c:236:64: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.2.4/src/lcode.c:558:59: style:inconclusive: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'. [funcArgNamesDifferent]
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.2.4/src/lcode.h:66:69: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
LUAI_FUNC void luaK_storevar (FuncState *fs, expdesc *var, expdesc *e);
                                                                    ^
src/third_party/lua-5.2.4/src/lcode.c:558:59: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.2.4/src/lcode.c:762:53: style:inconclusive: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'. [funcArgNamesDifferent]
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {
                                                    ^
src/third_party/lua-5.2.4/src/lcode.h:76:63: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
LUAI_FUNC void luaK_prefix (FuncState *fs, UnOpr op, expdesc *v, int line);
                                                              ^
src/third_party/lua-5.2.4/src/lcode.c:762:53: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {
                                                    ^
src/third_party/lua-5.2.4/src/lcode.c:814:28: style:inconclusive: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'. [funcArgNamesDifferent]
                  expdesc *e1, expdesc *e2, int line) {
                           ^
src/third_party/lua-5.2.4/src/lcode.h:78:64: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
LUAI_FUNC void luaK_posfix (FuncState *fs, BinOpr op, expdesc *v1,
                                                               ^
src/third_party/lua-5.2.4/src/lcode.c:814:28: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
                  expdesc *e1, expdesc *e2, int line) {
                           ^
src/third_party/lua-5.2.4/src/lcode.c:814:41: style:inconclusive: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'. [funcArgNamesDifferent]
                  expdesc *e1, expdesc *e2, int line) {
                                        ^
src/third_party/lua-5.2.4/src/lcode.h:79:38: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
                            expdesc *v2, int line);
                                     ^
src/third_party/lua-5.2.4/src/lcode.c:814:41: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
                  expdesc *e1, expdesc *e2, int line) {
                                        ^
src/third_party/lua-5.2.4/src/lcorolib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lctype.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 46 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/ldblib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/ldblib.c:172:15: style: The scope of the variable 'name' can be reduced. [variableScope]
  const char *name;
              ^
src/third_party/lua-5.2.4/src/ldebug.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/ldebug.c:530:68: style:inconclusive: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'. [funcArgNamesDifferent]
l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                   ^
src/third_party/lua-5.2.4/src/ldebug.h:25:61: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
                                                const char *opname);
                                                            ^
src/third_party/lua-5.2.4/src/ldebug.c:530:68: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                   ^
src/third_party/lua-5.2.4/src/ldo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 52 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/ldo.c:237:13: style: Variable 'ci->top' is reassigned a value before the old one has been used. [redundantAssignment]
    ci->top = restorestack(L, ci_top);
            ^
src/third_party/lua-5.2.4/src/ldo.c:228:13: note: ci->top is assigned
    ci->top = L->top + LUA_MINSTACK;
            ^
src/third_party/lua-5.2.4/src/ldo.c:237:13: note: ci->top is overwritten
    ci->top = restorestack(L, ci_top);
            ^
src/third_party/lua-5.2.4/src/ldo.c:596:27: style:inconclusive: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'. [funcArgNamesDifferent]
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.2.4/src/ldo.h:36:51: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                                        ptrdiff_t oldtop, ptrdiff_t ef);
                                                  ^
src/third_party/lua-5.2.4/src/ldo.c:596:27: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.2.4/src/ldo.c:394:0: information: Skipping configuration 'LUAI_MAXCCALLS' since the value of 'LUAI_MAXCCALLS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (++L->nCcalls >= LUAI_MAXCCALLS) {
^
src/third_party/lua-5.2.4/src/ldo.c:395:0: information: Skipping configuration 'LUAI_MAXCCALLS' since the value of 'LUAI_MAXCCALLS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (L->nCcalls == LUAI_MAXCCALLS)
^
src/third_party/lua-5.2.4/src/ldo.c:397:0: information: Skipping configuration 'LUAI_MAXCCALLS' since the value of 'LUAI_MAXCCALLS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    else if (L->nCcalls >= (LUAI_MAXCCALLS + (LUAI_MAXCCALLS>>3)))
^
src/third_party/lua-5.2.4/src/ldo.c:500:0: information: Skipping configuration 'LUAI_MAXCCALLS' since the value of 'LUAI_MAXCCALLS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (nCcalls >= LUAI_MAXCCALLS)
^
src/third_party/lua-5.2.4/src/ldo.c:106:0: information: Skipping configuration 'LUAI_THROW' since the value of 'LUAI_THROW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LUAI_THROW(L, L->errorJmp);  /* jump to it */
^
src/third_party/lua-5.2.4/src/ldo.c:106:0: information: Skipping configuration 'LUAI_THROW;LUA_USE_LONGJMP' since the value of 'LUAI_THROW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LUAI_THROW(L, L->errorJmp);  /* jump to it */
^
src/third_party/lua-5.2.4/src/ldo.c:106:0: information: Skipping configuration 'LUAI_THROW;LUA_USE_ULONGJMP' since the value of 'LUAI_THROW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    LUAI_THROW(L, L->errorJmp);  /* jump to it */
^
src/third_party/lua-5.2.4/src/ldump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 47 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lfunc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lfunc.c:23:46: style:inconclusive: Function 'luaF_newCclosure' argument 2 names different: declaration 'nelems' definition 'n'. [funcArgNamesDifferent]
Closure *luaF_newCclosure (lua_State *L, int n) {
                                             ^
src/third_party/lua-5.2.4/src/lfunc.h:22:56: note: Function 'luaF_newCclosure' argument 2 names different: declaration 'nelems' definition 'n'.
LUAI_FUNC Closure *luaF_newCclosure (lua_State *L, int nelems);
                                                       ^
src/third_party/lua-5.2.4/src/lfunc.c:23:46: note: Function 'luaF_newCclosure' argument 2 names different: declaration 'nelems' definition 'n'.
Closure *luaF_newCclosure (lua_State *L, int n) {
                                             ^
src/third_party/lua-5.2.4/src/lfunc.c:30:46: style:inconclusive: Function 'luaF_newLclosure' argument 2 names different: declaration 'nelems' definition 'n'. [funcArgNamesDifferent]
Closure *luaF_newLclosure (lua_State *L, int n) {
                                             ^
src/third_party/lua-5.2.4/src/lfunc.h:23:56: note: Function 'luaF_newLclosure' argument 2 names different: declaration 'nelems' definition 'n'.
LUAI_FUNC Closure *luaF_newLclosure (lua_State *L, int nelems);
                                                       ^
src/third_party/lua-5.2.4/src/lfunc.c:30:46: note: Function 'luaF_newLclosure' argument 2 names different: declaration 'nelems' definition 'n'.
Closure *luaF_newLclosure (lua_State *L, int n) {
                                             ^
src/third_party/lua-5.2.4/src/lfunc.c:150:45: style:inconclusive: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'. [funcArgNamesDifferent]
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.2.4/src/lfunc.h:29:55: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
LUAI_FUNC const char *luaF_getlocalname (const Proto *func, int local_number,
                                                      ^
src/third_party/lua-5.2.4/src/lfunc.c:150:45: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.2.4/src/lgc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lgc.c:1070:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      for (i = 0; i < GCSWEEPMAX && g->sweepstrgc + i < g->strt.size; i++)
^
src/third_party/lua-5.2.4/src/lgc.c:1079:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        g->sweepfin = sweeplist(L, g->sweepfin, GCSWEEPMAX);
^
src/third_party/lua-5.2.4/src/lgc.c:1080:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return GCSWEEPMAX*GCSWEEPCOST;
^
src/third_party/lua-5.2.4/src/lgc.c:1089:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        g->sweepgc = sweeplist(L, g->sweepgc, GCSWEEPMAX);
^
src/third_party/lua-5.2.4/src/lgc.c:1090:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        return GCSWEEPMAX*GCSWEEPCOST;
^
src/third_party/lua-5.2.4/src/lgc.c:1150:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  } while (debt > -GCSTEPSIZE && g->gcstate != GCSpause);
^
src/third_party/lua-5.2.4/src/lgc.c:1180:0: information: Skipping configuration 'GCSTEPSIZE' since the value of 'GCSTEPSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  else luaE_setdebt(g, -GCSTEPSIZE);  /* avoid being called too often */
^
src/third_party/lua-5.2.4/src/linit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/liolib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/liolib.c:404:19: style: Checking if unsigned expression 'rlen' is less than zero. [unsignedLessThanZero]
    else if (rlen <= (MAX_SIZE_T / 4))  /* avoid buffers too large */
                  ^
src/third_party/lua-5.2.4/src/llex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 52 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/llex.c:114:53: style:inconclusive: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'. [funcArgNamesDifferent]
l_noret luaX_syntaxerror (LexState *ls, const char *msg) {
                                                    ^
src/third_party/lua-5.2.4/src/llex.h:74:63: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
LUAI_FUNC l_noret luaX_syntaxerror (LexState *ls, const char *s);
                                                              ^
src/third_party/lua-5.2.4/src/llex.c:114:53: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
l_noret luaX_syntaxerror (LexState *ls, const char *msg) {
                                                    ^
src/third_party/lua-5.2.4/src/lmathlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lmem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lmem.c:46:67: style:inconclusive: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'. [funcArgNamesDifferent]
void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,
                                                                  ^
src/third_party/lua-5.2.4/src/lmem.h:53:39: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'.
                               size_t size_elem, int limit,
                                      ^
src/third_party/lua-5.2.4/src/lmem.c:46:67: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'.
void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,
                                                                  ^
src/third_party/lua-5.2.4/src/lmem.c:75:56: style:inconclusive: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.2.4/src/lmem.h:50:66: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
LUAI_FUNC void *luaM_realloc_ (lua_State *L, void *block, size_t oldsize,
                                                                 ^
src/third_party/lua-5.2.4/src/lmem.c:75:56: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.2.4/src/lmem.c:75:70: style:inconclusive: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.2.4/src/lmem.h:51:66: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
                                                          size_t size);
                                                                 ^
src/third_party/lua-5.2.4/src/lmem.c:75:70: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.2.4/src/loadlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 32 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/loadlib.c:708:0: information: Skipping configuration 'LUA_CPATH' since the value of 'LUA_CPATH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  setpath(L, "cpath", LUA_CPATHVERSION, LUA_CPATH, LUA_CPATH_DEFAULT);
^
src/third_party/lua-5.2.4/src/loadlib.c:439:0: information: Skipping configuration 'LUA_CSUBSEP' since the value of 'LUA_CSUBSEP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *filename = findfile(L, name, "cpath", LUA_CSUBSEP);
^
src/third_party/lua-5.2.4/src/loadlib.c:452:0: information: Skipping configuration 'LUA_CSUBSEP' since the value of 'LUA_CSUBSEP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  filename = findfile(L, lua_tostring(L, -1), "cpath", LUA_CSUBSEP);
^
src/third_party/lua-5.2.4/src/loadlib.c:199:0: information: Skipping configuration 'LUA_DL_DLL;LUA_LLE_FLAGS' since the value of 'LUA_LLE_FLAGS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  HMODULE lib = LoadLibraryExA(path, NULL, LUA_LLE_FLAGS);
^
src/third_party/lua-5.2.4/src/lobject.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 51 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lobject.c:252:58: style:inconclusive: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'. [funcArgNamesDifferent]
void luaO_chunkid (char *out, const char *source, size_t bufflen) {
                                                         ^
src/third_party/lua-5.2.4/src/lobject.h:603:68: note: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'.
LUAI_FUNC void luaO_chunkid (char *out, const char *source, size_t len);
                                                                   ^
src/third_party/lua-5.2.4/src/lobject.c:252:58: note: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'.
void luaO_chunkid (char *out, const char *source, size_t bufflen) {
                                                         ^
src/third_party/lua-5.2.4/src/lopcodes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/loslib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/loslib.c:172:0: information: Skipping configuration 'LUA_STRFTIMEOPTIONS' since the value of 'LUA_STRFTIMEOPTIONS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  static const char *const options[] = LUA_STRFTIMEOPTIONS;
^
src/third_party/lua-5.2.4/src/loslib.c:172:0: information: Skipping configuration 'LUA_STRFTIMEOPTIONS;LUA_USE_POSIX' since the value of 'LUA_STRFTIMEOPTIONS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  static const char *const options[] = LUA_STRFTIMEOPTIONS;
^
src/third_party/lua-5.2.4/src/lparser.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lparser.c:333:0: information: Skipping configuration 'LUAI_MAXCCALLS' since the value of 'LUAI_MAXCCALLS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  checklimit(ls->fs, L->nCcalls, LUAI_MAXCCALLS, "C levels");
^
src/third_party/lua-5.2.4/src/lparser.c:1145:0: information: Skipping configuration 'LUAI_MAXCCALLS' since the value of 'LUAI_MAXCCALLS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    checklimit(ls->fs, nvars + ls->L->nCcalls, LUAI_MAXCCALLS,
^
src/third_party/lua-5.2.4/src/lstate.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 54 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lstate.c:61:0: information: Skipping configuration 'LUAI_EXTRASPACE' since the value of 'LUAI_EXTRASPACE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  char buff[LUAI_EXTRASPACE];
^
src/third_party/lua-5.2.4/src/lstate.c:305:0: information: Skipping configuration 'LUAI_GCMAJOR' since the value of 'LUAI_GCMAJOR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  g->gcmajorinc = LUAI_GCMAJOR;
^
src/third_party/lua-5.2.4/src/lstate.c:306:0: information: Skipping configuration 'LUAI_GCMUL' since the value of 'LUAI_GCMUL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  g->gcstepmul = LUAI_GCMUL;
^
src/third_party/lua-5.2.4/src/lstate.c:304:0: information: Skipping configuration 'LUAI_GCPAUSE' since the value of 'LUAI_GCPAUSE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  g->gcpause = LUAI_GCPAUSE;
^
src/third_party/lua-5.2.4/src/lstring.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lstring.c:54:0: information: Skipping configuration 'LUAI_HASHLIMIT' since the value of 'LUAI_HASHLIMIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  size_t step = (l >> LUAI_HASHLIMIT) + 1;
^
src/third_party/lua-5.2.4/src/lstrlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lstrlib.c:942:0: information: Skipping configuration 'LUA_FLTFRMLEN' since the value of 'LUA_FLTFRMLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          addlenmod(form, LUA_FLTFRMLEN);
^
src/third_party/lua-5.2.4/src/lstrlib.c:906:0: information: Skipping configuration 'LUA_INTFRMLEN' since the value of 'LUA_INTFRMLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      char form[MAX_FORMAT];  /* to store the format (`%...') */
^
src/third_party/lua-5.2.4/src/lstrlib.c:923:0: information: Skipping configuration 'LUA_INTFRMLEN' since the value of 'LUA_INTFRMLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          addlenmod(form, LUA_INTFRMLEN);
^
src/third_party/lua-5.2.4/src/lstrlib.c:933:0: information: Skipping configuration 'LUA_INTFRMLEN' since the value of 'LUA_INTFRMLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          addlenmod(form, LUA_INTFRMLEN);
^
src/third_party/lua-5.2.4/src/lstrlib.c:906:0: information: Skipping configuration 'LUA_INTFRMLEN;LUA_USE_LONGLONG' since the value of 'LUA_INTFRMLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      char form[MAX_FORMAT];  /* to store the format (`%...') */
^
src/third_party/lua-5.2.4/src/lstrlib.c:923:0: information: Skipping configuration 'LUA_INTFRMLEN;LUA_USE_LONGLONG' since the value of 'LUA_INTFRMLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          addlenmod(form, LUA_INTFRMLEN);
^
src/third_party/lua-5.2.4/src/lstrlib.c:933:0: information: Skipping configuration 'LUA_INTFRMLEN;LUA_USE_LONGLONG' since the value of 'LUA_INTFRMLEN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
          addlenmod(form, LUA_INTFRMLEN);
^
src/third_party/lua-5.2.4/src/lstrlib.c:208:0: information: Skipping configuration 'LUA_MAXCAPTURES' since the value of 'LUA_MAXCAPTURES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  } capture[LUA_MAXCAPTURES];
^
src/third_party/lua-5.2.4/src/lstrlib.c:378:0: information: Skipping configuration 'LUA_MAXCAPTURES' since the value of 'LUA_MAXCAPTURES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (level >= LUA_MAXCAPTURES) luaL_error(ms->L, "too many captures");
^
src/third_party/lua-5.2.4/src/ltable.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/ltable.c:82:3: error: Uninitialized variable: e [uninitvar]
  luai_hashnum(i, n);
  ^
src/third_party/lua-5.2.4/src/ltablib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/ltm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lua.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lua.c:424:0: information: Skipping configuration 'LUA_INIT' since the value of 'LUA_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *name = "=" LUA_INITVERSION;
^
src/third_party/lua-5.2.4/src/lua.c:427:0: information: Skipping configuration 'LUA_INIT' since the value of 'LUA_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    name = "=" LUA_INIT;
^
src/third_party/lua-5.2.4/src/lua.c:261:0: information: Skipping configuration 'LUA_MAXINPUT' since the value of 'LUA_MAXINPUT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  char buffer[LUA_MAXINPUT];
^
src/third_party/lua-5.2.4/src/lua.c:265:0: information: Skipping configuration 'LUA_MAXINPUT' since the value of 'LUA_MAXINPUT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  int readstatus = lua_readline(L, b, prmt);
^
src/third_party/lua-5.2.4/src/lua.c:90:0: information: Skipping configuration 'LUA_PROGNAME' since the value of 'LUA_PROGNAME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const char *progname = LUA_PROGNAME;
^
src/third_party/lua-5.2.4/src/lua.c:239:0: information: Skipping configuration 'LUA_PROMPT' since the value of 'LUA_PROMPT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (p == NULL) p = (firstline ? LUA_PROMPT : LUA_PROMPT2);
^
src/third_party/lua-5.2.4/src/luac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lundump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lvm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 50 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.2.4/src/lvm.c:778:7: warning: Either the condition '(pstep=luaV_tonumber(pstep,ra+2))!=NULL' is redundant or there is possible null pointer dereference: pstep. [nullPointerRedundantCheck]
      vmcase(OP_FORPREP,
      ^
src/third_party/lua-5.2.4/src/lvm.c:778:7: note: Assuming that condition '(pstep=luaV_tonumber(pstep,ra+2))!=NULL' is not redundant
      vmcase(OP_FORPREP,
      ^
src/third_party/lua-5.2.4/src/lvm.c:778:7: note: Null pointer dereference
      vmcase(OP_FORPREP,
      ^
src/third_party/lua-5.2.4/src/lvm.c:653:7: style: Variable 'L->top' is reassigned a value before the old one has been used. [redundantAssignment]
      vmcase(OP_CONCAT,
      ^
src/third_party/lua-5.2.4/src/lvm.c:653:7: note: L->top is assigned
      vmcase(OP_CONCAT,
      ^
src/third_party/lua-5.2.4/src/lvm.c:653:7: note: L->top is overwritten
      vmcase(OP_CONCAT,
      ^
src/third_party/lua-5.2.4/src/lzio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 47 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 58 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lapi.c:257:53: style:inconclusive: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'. [funcArgNamesDifferent]
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.3.6/src/lua.h:178:59: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char     *(lua_typename) (lua_State *L, int tp);
                                                          ^
src/third_party/lua-5.3.6/src/lapi.c:257:53: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.3.6/src/lapi.c:1184:53: style:inconclusive: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'. [funcArgNamesDifferent]
LUA_API void *lua_newuserdata (lua_State *L, size_t size) {
                                                    ^
src/third_party/lua-5.3.6/src/lua.h:249:55: note: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);
                                                      ^
src/third_party/lua-5.3.6/src/lapi.c:1184:53: note: Function 'lua_newuserdata' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *lua_newuserdata (lua_State *L, size_t size) {
                                                    ^
src/third_party/lua-5.3.6/src/lauxlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lauxlib.c:671:7: style: The scope of the variable 'c' can be reduced. [variableScope]
  int c;
      ^
src/third_party/lua-5.3.6/src/lauxlib.c:390:74: style:inconclusive: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {
                                                                         ^
src/third_party/lua-5.3.6/src/lauxlib.h:48:67: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
                                                          size_t *l);
                                                                  ^
src/third_party/lua-5.3.6/src/lauxlib.c:390:74: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {
                                                                         ^
src/third_party/lua-5.3.6/src/lauxlib.c:398:66: style:inconclusive: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.3.6/src/lauxlib.h:50:68: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                          const char *def, size_t *l);
                                                                   ^
src/third_party/lua-5.3.6/src/lauxlib.c:398:66: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.3.6/src/lbaselib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lbitlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lcode.c:65:16: style: The scope of the variable 'previous' can be reduced. [variableScope]
  Instruction *previous;
               ^
src/third_party/lua-5.3.6/src/lcode.c:312:48: style:inconclusive: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                               ^
src/third_party/lua-5.3.6/src/lcode.h:53:58: note: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                         ^
src/third_party/lua-5.3.6/src/lcode.c:312:48: note: Function 'luaK_codeABC' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                               ^
src/third_party/lua-5.3.6/src/lcode.c:312:55: style:inconclusive: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                      ^
src/third_party/lua-5.3.6/src/lcode.h:53:65: note: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                                ^
src/third_party/lua-5.3.6/src/lcode.c:312:55: note: Function 'luaK_codeABC' argument 4 names different: declaration 'B' definition 'b'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                      ^
src/third_party/lua-5.3.6/src/lcode.c:312:62: style:inconclusive: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'. [funcArgNamesDifferent]
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                             ^
src/third_party/lua-5.3.6/src/lcode.h:53:72: note: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'.
LUAI_FUNC int luaK_codeABC (FuncState *fs, OpCode o, int A, int B, int C);
                                                                       ^
src/third_party/lua-5.3.6/src/lcode.c:312:62: note: Function 'luaK_codeABC' argument 5 names different: declaration 'C' definition 'c'.
int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {
                                                             ^
src/third_party/lua-5.3.6/src/lcode.c:324:48: style:inconclusive: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.3.6/src/lcode.h:52:58: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                         ^
src/third_party/lua-5.3.6/src/lcode.c:324:48: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.3.6/src/lcode.c:324:64: style:inconclusive: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.3.6/src/lcode.h:52:74: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                                         ^
src/third_party/lua-5.3.6/src/lcode.c:324:64: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.3.6/src/lcode.c:782:59: style:inconclusive: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'. [funcArgNamesDifferent]
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.3.6/src/lcode.h:71:69: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
LUAI_FUNC void luaK_storevar (FuncState *fs, expdesc *var, expdesc *e);
                                                                    ^
src/third_party/lua-5.3.6/src/lcode.c:782:59: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.3.6/src/lcode.c:1066:53: style:inconclusive: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'. [funcArgNamesDifferent]
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {
                                                    ^
src/third_party/lua-5.3.6/src/lcode.h:81:63: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
LUAI_FUNC void luaK_prefix (FuncState *fs, UnOpr op, expdesc *v, int line);
                                                              ^
src/third_party/lua-5.3.6/src/lcode.c:1066:53: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {
                                                    ^
src/third_party/lua-5.3.6/src/lcode.c:1125:28: style:inconclusive: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'. [funcArgNamesDifferent]
                  expdesc *e1, expdesc *e2, int line) {
                           ^
src/third_party/lua-5.3.6/src/lcode.h:83:64: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
LUAI_FUNC void luaK_posfix (FuncState *fs, BinOpr op, expdesc *v1,
                                                               ^
src/third_party/lua-5.3.6/src/lcode.c:1125:28: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
                  expdesc *e1, expdesc *e2, int line) {
                           ^
src/third_party/lua-5.3.6/src/lcode.c:1125:41: style:inconclusive: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'. [funcArgNamesDifferent]
                  expdesc *e1, expdesc *e2, int line) {
                                        ^
src/third_party/lua-5.3.6/src/lcode.h:84:38: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
                            expdesc *v2, int line);
                                     ^
src/third_party/lua-5.3.6/src/lcode.c:1125:41: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
                  expdesc *e1, expdesc *e2, int line) {
                                        ^
src/third_party/lua-5.3.6/src/lcorolib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lctype.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 54 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/ldblib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/ldblib.c:197:15: style: The scope of the variable 'name' can be reduced. [variableScope]
  const char *name;
              ^
src/third_party/lua-5.3.6/src/ldebug.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/ldebug.c:586:68: style:inconclusive: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'. [funcArgNamesDifferent]
l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                   ^
src/third_party/lua-5.3.6/src/ldebug.h:22:61: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
                                                const char *opname);
                                                            ^
src/third_party/lua-5.3.6/src/ldebug.c:586:68: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                   ^
src/third_party/lua-5.3.6/src/ldo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 62 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/ldo.c:273:13: style: Variable 'ci->top' is reassigned a value before the old one has been used. [redundantAssignment]
    ci->top = restorestack(L, ci_top);
            ^
src/third_party/lua-5.3.6/src/ldo.c:264:13: note: ci->top is assigned
    ci->top = L->top + LUA_MINSTACK;
            ^
src/third_party/lua-5.3.6/src/ldo.c:273:13: note: ci->top is overwritten
    ci->top = restorestack(L, ci_top);
            ^
src/third_party/lua-5.3.6/src/ldo.c:722:27: style:inconclusive: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'. [funcArgNamesDifferent]
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.3.6/src/ldo.h:46:51: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                                        ptrdiff_t oldtop, ptrdiff_t ef);
                                                  ^
src/third_party/lua-5.3.6/src/ldo.c:722:27: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.3.6/src/ldump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 53 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/ldump.c:54:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:54:3: note: Address of variable taken here.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:54:3: note: The address of local variable 'x' might be accessed at non-zero index.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:59:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:59:3: note: Address of variable taken here.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:59:3: note: The address of local variable 'x' might be accessed at non-zero index.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:64:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:64:3: note: Address of variable taken here.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:64:3: note: The address of local variable 'x' might be accessed at non-zero index.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:69:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:69:3: note: Address of variable taken here.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:69:3: note: The address of local variable 'x' might be accessed at non-zero index.
  DumpVar(x, D);
  ^
src/third_party/lua-5.3.6/src/ldump.c:83:7: warning: The address of local variable 'size' might be accessed at non-zero index. [objectIndex]
      DumpVar(size, D);
      ^
src/third_party/lua-5.3.6/src/ldump.c:83:7: note: Address of variable taken here.
      DumpVar(size, D);
      ^
src/third_party/lua-5.3.6/src/ldump.c:83:7: note: The address of local variable 'size' might be accessed at non-zero index.
      DumpVar(size, D);
      ^
src/third_party/lua-5.3.6/src/lfunc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 54 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lfunc.c:25:47: style:inconclusive: Function 'luaF_newCclosure' argument 2 names different: declaration 'nelems' definition 'n'. [funcArgNamesDifferent]
CClosure *luaF_newCclosure (lua_State *L, int n) {
                                              ^
src/third_party/lua-5.3.6/src/lfunc.h:51:57: note: Function 'luaF_newCclosure' argument 2 names different: declaration 'nelems' definition 'n'.
LUAI_FUNC CClosure *luaF_newCclosure (lua_State *L, int nelems);
                                                        ^
src/third_party/lua-5.3.6/src/lfunc.c:25:47: note: Function 'luaF_newCclosure' argument 2 names different: declaration 'nelems' definition 'n'.
CClosure *luaF_newCclosure (lua_State *L, int n) {
                                              ^
src/third_party/lua-5.3.6/src/lfunc.c:33:47: style:inconclusive: Function 'luaF_newLclosure' argument 2 names different: declaration 'nelems' definition 'n'. [funcArgNamesDifferent]
LClosure *luaF_newLclosure (lua_State *L, int n) {
                                              ^
src/third_party/lua-5.3.6/src/lfunc.h:52:57: note: Function 'luaF_newLclosure' argument 2 names different: declaration 'nelems' definition 'n'.
LUAI_FUNC LClosure *luaF_newLclosure (lua_State *L, int nelems);
                                                        ^
src/third_party/lua-5.3.6/src/lfunc.c:33:47: note: Function 'luaF_newLclosure' argument 2 names different: declaration 'nelems' definition 'n'.
LClosure *luaF_newLclosure (lua_State *L, int n) {
                                              ^
src/third_party/lua-5.3.6/src/lfunc.c:140:45: style:inconclusive: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'. [funcArgNamesDifferent]
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.3.6/src/lfunc.h:57:55: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
LUAI_FUNC const char *luaF_getlocalname (const Proto *func, int local_number,
                                                      ^
src/third_party/lua-5.3.6/src/lfunc.c:140:45: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.3.6/src/lgc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 55 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lgc.c:171:46: style:inconclusive: Function 'luaC_barrierback_' argument 2 names different: declaration 'o' definition 't'. [funcArgNamesDifferent]
void luaC_barrierback_ (lua_State *L, Table *t) {
                                             ^
src/third_party/lua-5.3.6/src/lgc.h:141:56: note: Function 'luaC_barrierback_' argument 2 names different: declaration 'o' definition 't'.
LUAI_FUNC void luaC_barrierback_ (lua_State *L, Table *o);
                                                       ^
src/third_party/lua-5.3.6/src/lgc.c:171:46: note: Function 'luaC_barrierback_' argument 2 names different: declaration 'o' definition 't'.
void luaC_barrierback_ (lua_State *L, Table *t) {
                                             ^
src/third_party/lua-5.3.6/src/linit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/liolib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/liolib.c:667:0: information: Skipping configuration 'LUA_USE_WINDOWS;_CRTIMP_TYPEINFO;_MSC_VER;l_fseek' since the value of 'l_fseek' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  op = l_fseek(f, offset, mode[op]);
^
src/third_party/lua-5.3.6/src/liolib.c:282:0: information: Skipping configuration 'LUA_USE_WINDOWS;l_popen' since the value of 'l_popen' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  p->f = l_popen(L, filename, mode);
^
src/third_party/lua-5.3.6/src/llex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 58 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/llex.c:61:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (luaZ_sizebuffer(b) >= MAX_SIZE/2)
^
src/third_party/lua-5.3.6/src/llex.c:117:53: style:inconclusive: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'. [funcArgNamesDifferent]
l_noret luaX_syntaxerror (LexState *ls, const char *msg) {
                                                    ^
src/third_party/lua-5.3.6/src/llex.h:81:63: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
LUAI_FUNC l_noret luaX_syntaxerror (LexState *ls, const char *s);
                                                              ^
src/third_party/lua-5.3.6/src/llex.c:117:53: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
l_noret luaX_syntaxerror (LexState *ls, const char *msg) {
                                                    ^
src/third_party/lua-5.3.6/src/lmathlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lmathlib.c:269:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  luaL_argcheck(L, low >= 0 || up <= LUA_MAXINTEGER + low, 1,
^
src/third_party/lua-5.3.6/src/lmathlib.c:404:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lua_pushinteger(L, LUA_MAXINTEGER);
^
src/third_party/lua-5.3.6/src/lmem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 54 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lmem.c:48:67: style:inconclusive: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'. [funcArgNamesDifferent]
void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,
                                                                  ^
src/third_party/lua-5.3.6/src/lmem.h:65:39: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'.
                               size_t size_elem, int limit,
                                      ^
src/third_party/lua-5.3.6/src/lmem.c:48:67: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size_elem' definition 'size_elems'.
void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,
                                                                  ^
src/third_party/lua-5.3.6/src/lmem.c:77:56: style:inconclusive: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.3.6/src/lmem.h:62:66: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
LUAI_FUNC void *luaM_realloc_ (lua_State *L, void *block, size_t oldsize,
                                                                 ^
src/third_party/lua-5.3.6/src/lmem.c:77:56: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.3.6/src/lmem.c:77:70: style:inconclusive: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.3.6/src/lmem.h:63:66: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
                                                          size_t size);
                                                                 ^
src/third_party/lua-5.3.6/src/lmem.c:77:70: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.3.6/src/loadlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lobject.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 62 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lobject.c:316:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (a >= MAXBY10 && (a > MAXBY10 || d > MAXLASTD + neg))  /* overflow? */
^
src/third_party/lua-5.3.6/src/lobject.c:487:58: style:inconclusive: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'. [funcArgNamesDifferent]
void luaO_chunkid (char *out, const char *source, size_t bufflen) {
                                                         ^
src/third_party/lua-5.3.6/src/lobject.h:545:68: note: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'.
LUAI_FUNC void luaO_chunkid (char *out, const char *source, size_t len);
                                                                   ^
src/third_party/lua-5.3.6/src/lobject.c:487:58: note: Function 'luaO_chunkid' argument 3 names different: declaration 'len' definition 'bufflen'.
void luaO_chunkid (char *out, const char *source, size_t bufflen) {
                                                         ^
src/third_party/lua-5.3.6/src/lopcodes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 53 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/loslib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/loslib.c:288:13: style: Variable 'tmr' is not assigned a value. [unassignedVariable]
  struct tm tmr, *stm;
            ^
src/third_party/lua-5.3.6/src/loslib.c:262:0: information: Skipping configuration 'LUA_STRFTIMEOPTIONS;LUA_USE_C89' since the value of 'LUA_STRFTIMEOPTIONS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *option = LUA_STRFTIMEOPTIONS;
^
src/third_party/lua-5.3.6/src/loslib.c:262:0: information: Skipping configuration 'LUA_STRFTIMEOPTIONS;LUA_USE_WINDOWS' since the value of 'LUA_STRFTIMEOPTIONS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *option = LUA_STRFTIMEOPTIONS;
^
src/third_party/lua-5.3.6/src/lparser.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 57 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lstate.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 59 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lstate.c:154:15: warning:inconclusive: Found calculation inside sizeof(). [sizeofCalculation]
  L1->stack = luaM_newvector(L, BASIC_STACK_SIZE, TValue);
              ^
src/third_party/lua-5.3.6/src/lstring.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 55 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lstring.c:204:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (l >= (MAX_SIZE - sizeof(TString))/sizeof(char))
^
src/third_party/lua-5.3.6/src/lstring.c:239:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (s > MAX_SIZE - sizeof(Udata))
^
src/third_party/lua-5.3.6/src/lstrlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 32 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lstrlib.c:1125:7: style: union member 'Anonymous1::dummy' is never used. [unusedStructMember]
  int dummy;
      ^
src/third_party/lua-5.3.6/src/lstrlib.c:1132:8: style: struct member 'cD::c' is never used. [unusedStructMember]
  char c;
       ^
src/third_party/lua-5.3.6/src/lstrlib.c:1133:42: style: union member 'Anonymous2::i' is never used. [unusedStructMember]
  union { double d; void *p; lua_Integer i; lua_Number n; } u;
                                         ^
src/third_party/lua-5.3.6/src/ltable.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 59 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/ltable.c:638:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (j > l_castS2U(LUA_MAXINTEGER) / 2) {  /* overflow? */
^
src/third_party/lua-5.3.6/src/ltable.c:166:9: style: The scope of the variable 'nx' can be reduced. [variableScope]
    int nx;
        ^
src/third_party/lua-5.3.6/src/ltable.c:349:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
src/third_party/lua-5.3.6/src/ltablib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/ltablib.c:137:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    luaL_argcheck(L, f > 0 || e < LUA_MAXINTEGER + f, 3,
^
src/third_party/lua-5.3.6/src/ltablib.c:140:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    luaL_argcheck(L, t <= LUA_MAXINTEGER - n + 1, 4,
^
src/third_party/lua-5.3.6/src/ltablib.c:263:20: warning: Division by result of sizeof(). memcpy() expects a size in bytes, did you intend to multiply instead? [sizeofDivisionMemfunc]
  memcpy(buff, &c, sof(c) * sizeof(unsigned int));
                   ^
src/third_party/lua-5.3.6/src/ltablib.c:264:29: warning: Division by result of sizeof(). memcpy() expects a size in bytes, did you intend to multiply instead? [sizeofDivisionMemfunc]
  memcpy(buff + sof(c), &t, sof(t) * sizeof(unsigned int));
                            ^
src/third_party/lua-5.3.6/src/ltm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 58 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lua.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lua.c:585:0: information: Skipping configuration 'LUA_USE_WINDOWS;lua_stdin_is_tty' since the value of 'lua_stdin_is_tty' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (lua_stdin_is_tty()) {  /* running in interactive mode? */
^
src/third_party/lua-5.3.6/src/luac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 58 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lundump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 55 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lundump.c:62:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:62:3: note: Address of variable taken here.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:62:3: note: The address of local variable 'x' might be accessed at non-zero index.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:69:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:69:3: note: Address of variable taken here.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:69:3: note: The address of local variable 'x' might be accessed at non-zero index.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:76:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:76:3: note: Address of variable taken here.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:76:3: note: The address of local variable 'x' might be accessed at non-zero index.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:83:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:83:3: note: Address of variable taken here.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:83:3: note: The address of local variable 'x' might be accessed at non-zero index.
  LoadVar(S, x);
  ^
src/third_party/lua-5.3.6/src/lundump.c:93:5: warning: The address of local variable 'size' might be accessed at non-zero index. [objectIndex]
    LoadVar(S, size);
    ^
src/third_party/lua-5.3.6/src/lundump.c:93:5: note: Address of variable taken here.
    LoadVar(S, size);
    ^
src/third_party/lua-5.3.6/src/lundump.c:93:5: note: The address of local variable 'size' might be accessed at non-zero index.
    LoadVar(S, size);
    ^
src/third_party/lua-5.3.6/src/lutf8lib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lvm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.3.6/src/lvm.c:143:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      *p = LUA_MAXINTEGER;
^
src/third_party/lua-5.3.6/src/lvm.c:493:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (l >= (MAX_SIZE/sizeof(char)) - tl)
^
src/third_party/lua-5.3.6/src/lvm.c:1077:16: style: Variable 'L->top' is reassigned a value before the old one has been used. [redundantAssignment]
        L->top = ci->top;  /* restore top */
               ^
src/third_party/lua-5.3.6/src/lvm.c:1076:9: note: L->top is assigned
        checkGC(L, (ra >= rb ? ra + 1 : rb));
        ^
src/third_party/lua-5.3.6/src/lvm.c:1077:16: note: L->top is overwritten
        L->top = ci->top;  /* restore top */
               ^
src/third_party/lua-5.3.6/src/lvm.c:552:49: style:inconclusive: Function 'luaV_div' argument 2 names different: declaration 'x' definition 'm'. [funcArgNamesDifferent]
lua_Integer luaV_div (lua_State *L, lua_Integer m, lua_Integer n) {
                                                ^
src/third_party/lua-5.3.6/src/lvm.h:108:59: note: Function 'luaV_div' argument 2 names different: declaration 'x' definition 'm'.
LUAI_FUNC lua_Integer luaV_div (lua_State *L, lua_Integer x, lua_Integer y);
                                                          ^
src/third_party/lua-5.3.6/src/lvm.c:552:49: note: Function 'luaV_div' argument 2 names different: declaration 'x' definition 'm'.
lua_Integer luaV_div (lua_State *L, lua_Integer m, lua_Integer n) {
                                                ^
src/third_party/lua-5.3.6/src/lvm.c:552:64: style:inconclusive: Function 'luaV_div' argument 3 names different: declaration 'y' definition 'n'. [funcArgNamesDifferent]
lua_Integer luaV_div (lua_State *L, lua_Integer m, lua_Integer n) {
                                                               ^
src/third_party/lua-5.3.6/src/lvm.h:108:74: note: Function 'luaV_div' argument 3 names different: declaration 'y' definition 'n'.
LUAI_FUNC lua_Integer luaV_div (lua_State *L, lua_Integer x, lua_Integer y);
                                                                         ^
src/third_party/lua-5.3.6/src/lvm.c:552:64: note: Function 'luaV_div' argument 3 names different: declaration 'y' definition 'n'.
lua_Integer luaV_div (lua_State *L, lua_Integer m, lua_Integer n) {
                                                               ^
src/third_party/lua-5.3.6/src/lvm.c:572:49: style:inconclusive: Function 'luaV_mod' argument 2 names different: declaration 'x' definition 'm'. [funcArgNamesDifferent]
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                ^
src/third_party/lua-5.3.6/src/lvm.h:109:59: note: Function 'luaV_mod' argument 2 names different: declaration 'x' definition 'm'.
LUAI_FUNC lua_Integer luaV_mod (lua_State *L, lua_Integer x, lua_Integer y);
                                                          ^
src/third_party/lua-5.3.6/src/lvm.c:572:49: note: Function 'luaV_mod' argument 2 names different: declaration 'x' definition 'm'.
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                ^
src/third_party/lua-5.3.6/src/lvm.c:572:64: style:inconclusive: Function 'luaV_mod' argument 3 names different: declaration 'y' definition 'n'. [funcArgNamesDifferent]
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                               ^
src/third_party/lua-5.3.6/src/lvm.h:109:74: note: Function 'luaV_mod' argument 3 names different: declaration 'y' definition 'n'.
LUAI_FUNC lua_Integer luaV_mod (lua_State *L, lua_Integer x, lua_Integer y);
                                                                         ^
src/third_party/lua-5.3.6/src/lvm.c:572:64: note: Function 'luaV_mod' argument 3 names different: declaration 'y' definition 'n'.
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                               ^
src/third_party/lua-5.3.6/src/lzio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 53 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 65 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lapi.c:284:53: style:inconclusive: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'. [funcArgNamesDifferent]
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.4.3/src/lua.h:188:59: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char     *(lua_typename) (lua_State *L, int tp);
                                                          ^
src/third_party/lua-5.4.3/src/lapi.c:284:53: note: Function 'lua_typename' argument 2 names different: declaration 'tp' definition 't'.
LUA_API const char *lua_typename (lua_State *L, int t) {
                                                    ^
src/third_party/lua-5.4.3/src/lapi.c:1335:55: style:inconclusive: Function 'lua_newuserdatauv' argument 2 names different: declaration 'sz' definition 'size'. [funcArgNamesDifferent]
LUA_API void *lua_newuserdatauv (lua_State *L, size_t size, int nuvalue) {
                                                      ^
src/third_party/lua-5.4.3/src/lua.h:259:57: note: Function 'lua_newuserdatauv' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *(lua_newuserdatauv) (lua_State *L, size_t sz, int nuvalue);
                                                        ^
src/third_party/lua-5.4.3/src/lapi.c:1335:55: note: Function 'lua_newuserdatauv' argument 2 names different: declaration 'sz' definition 'size'.
LUA_API void *lua_newuserdatauv (lua_State *L, size_t size, int nuvalue) {
                                                      ^
src/third_party/lua-5.4.3/src/lauxlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lauxlib.c:744:7: style: The scope of the variable 'c' can be reduced. [variableScope]
  int c;
      ^
src/third_party/lua-5.4.3/src/lauxlib.c:402:74: style:inconclusive: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {
                                                                         ^
src/third_party/lua-5.4.3/src/lauxlib.h:56:67: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
                                                          size_t *l);
                                                                  ^
src/third_party/lua-5.4.3/src/lauxlib.c:402:74: note: Function 'luaL_checklstring' argument 3 names different: declaration 'l' definition 'len'.
LUALIB_API const char *luaL_checklstring (lua_State *L, int arg, size_t *len) {
                                                                         ^
src/third_party/lua-5.4.3/src/lauxlib.c:410:66: style:inconclusive: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'. [funcArgNamesDifferent]
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.4.3/src/lauxlib.h:58:68: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                          const char *def, size_t *l);
                                                                   ^
src/third_party/lua-5.4.3/src/lauxlib.c:410:66: note: Function 'luaL_optlstring' argument 4 names different: declaration 'l' definition 'len'.
                                        const char *def, size_t *len) {
                                                                 ^
src/third_party/lua-5.4.3/src/lbaselib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lcode.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 67 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lcode.c:396:49: style:inconclusive: Function 'luaK_codeABCk' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {
                                                ^
src/third_party/lua-5.4.3/src/lcode.h:65:59: note: Function 'luaK_codeABCk' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABCk (FuncState *fs, OpCode o, int A,
                                                          ^
src/third_party/lua-5.4.3/src/lcode.c:396:49: note: Function 'luaK_codeABCk' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {
                                                ^
src/third_party/lua-5.4.3/src/lcode.c:396:56: style:inconclusive: Function 'luaK_codeABCk' argument 4 names different: declaration 'B' definition 'b'. [funcArgNamesDifferent]
int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {
                                                       ^
src/third_party/lua-5.4.3/src/lcode.h:66:49: note: Function 'luaK_codeABCk' argument 4 names different: declaration 'B' definition 'b'.
                                            int B, int C, int k);
                                                ^
src/third_party/lua-5.4.3/src/lcode.c:396:56: note: Function 'luaK_codeABCk' argument 4 names different: declaration 'B' definition 'b'.
int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {
                                                       ^
src/third_party/lua-5.4.3/src/lcode.c:396:63: style:inconclusive: Function 'luaK_codeABCk' argument 5 names different: declaration 'C' definition 'c'. [funcArgNamesDifferent]
int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {
                                                              ^
src/third_party/lua-5.4.3/src/lcode.h:66:56: note: Function 'luaK_codeABCk' argument 5 names different: declaration 'C' definition 'c'.
                                            int B, int C, int k);
                                                       ^
src/third_party/lua-5.4.3/src/lcode.c:396:63: note: Function 'luaK_codeABCk' argument 5 names different: declaration 'C' definition 'c'.
int luaK_codeABCk (FuncState *fs, OpCode o, int a, int b, int c, int k) {
                                                              ^
src/third_party/lua-5.4.3/src/lcode.c:407:48: style:inconclusive: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.4.3/src/lcode.h:63:58: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                         ^
src/third_party/lua-5.4.3/src/lcode.c:407:48: note: Function 'luaK_codeABx' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                               ^
src/third_party/lua-5.4.3/src/lcode.c:407:64: style:inconclusive: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'. [funcArgNamesDifferent]
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.4.3/src/lcode.h:63:74: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
LUAI_FUNC int luaK_codeABx (FuncState *fs, OpCode o, int A, unsigned int Bx);
                                                                         ^
src/third_party/lua-5.4.3/src/lcode.c:407:64: note: Function 'luaK_codeABx' argument 4 names different: declaration 'Bx' definition 'bc'.
int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {
                                                               ^
src/third_party/lua-5.4.3/src/lcode.c:417:49: style:inconclusive: Function 'luaK_codeAsBx' argument 3 names different: declaration 'A' definition 'a'. [funcArgNamesDifferent]
int luaK_codeAsBx (FuncState *fs, OpCode o, int a, int bc) {
                                                ^
src/third_party/lua-5.4.3/src/lcode.h:64:59: note: Function 'luaK_codeAsBx' argument 3 names different: declaration 'A' definition 'a'.
LUAI_FUNC int luaK_codeAsBx (FuncState *fs, OpCode o, int A, int Bx);
                                                          ^
src/third_party/lua-5.4.3/src/lcode.c:417:49: note: Function 'luaK_codeAsBx' argument 3 names different: declaration 'A' definition 'a'.
int luaK_codeAsBx (FuncState *fs, OpCode o, int a, int bc) {
                                                ^
src/third_party/lua-5.4.3/src/lcode.c:417:56: style:inconclusive: Function 'luaK_codeAsBx' argument 4 names different: declaration 'Bx' definition 'bc'. [funcArgNamesDifferent]
int luaK_codeAsBx (FuncState *fs, OpCode o, int a, int bc) {
                                                       ^
src/third_party/lua-5.4.3/src/lcode.h:64:66: note: Function 'luaK_codeAsBx' argument 4 names different: declaration 'Bx' definition 'bc'.
LUAI_FUNC int luaK_codeAsBx (FuncState *fs, OpCode o, int A, int Bx);
                                                                 ^
src/third_party/lua-5.4.3/src/lcode.c:417:56: note: Function 'luaK_codeAsBx' argument 4 names different: declaration 'Bx' definition 'bc'.
int luaK_codeAsBx (FuncState *fs, OpCode o, int a, int bc) {
                                                       ^
src/third_party/lua-5.4.3/src/lcode.c:654:52: style:inconclusive: Function 'luaK_int' argument 3 names different: declaration 'n' definition 'i'. [funcArgNamesDifferent]
void luaK_int (FuncState *fs, int reg, lua_Integer i) {
                                                   ^
src/third_party/lua-5.4.3/src/lcode.h:73:62: note: Function 'luaK_int' argument 3 names different: declaration 'n' definition 'i'.
LUAI_FUNC void luaK_int (FuncState *fs, int reg, lua_Integer n);
                                                             ^
src/third_party/lua-5.4.3/src/lcode.c:654:52: note: Function 'luaK_int' argument 3 names different: declaration 'n' definition 'i'.
void luaK_int (FuncState *fs, int reg, lua_Integer i) {
                                                   ^
src/third_party/lua-5.4.3/src/lcode.c:1030:59: style:inconclusive: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'. [funcArgNamesDifferent]
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.4.3/src/lcode.h:84:69: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
LUAI_FUNC void luaK_storevar (FuncState *fs, expdesc *var, expdesc *e);
                                                                    ^
src/third_party/lua-5.4.3/src/lcode.c:1030:59: note: Function 'luaK_storevar' argument 3 names different: declaration 'e' definition 'ex'.
void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {
                                                          ^
src/third_party/lua-5.4.3/src/lcode.c:1553:53: style:inconclusive: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'. [funcArgNamesDifferent]
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {
                                                    ^
src/third_party/lua-5.4.3/src/lcode.h:93:63: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
LUAI_FUNC void luaK_prefix (FuncState *fs, UnOpr op, expdesc *v, int line);
                                                              ^
src/third_party/lua-5.4.3/src/lcode.c:1553:53: note: Function 'luaK_prefix' argument 3 names different: declaration 'v' definition 'e'.
void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e, int line) {
                                                    ^
src/third_party/lua-5.4.3/src/lcode.c:1642:41: style:inconclusive: Function 'luaK_posfix' argument 2 names different: declaration 'op' definition 'opr'. [funcArgNamesDifferent]
void luaK_posfix (FuncState *fs, BinOpr opr,
                                        ^
src/third_party/lua-5.4.3/src/lcode.h:95:51: note: Function 'luaK_posfix' argument 2 names different: declaration 'op' definition 'opr'.
LUAI_FUNC void luaK_posfix (FuncState *fs, BinOpr op, expdesc *v1,
                                                  ^
src/third_party/lua-5.4.3/src/lcode.c:1642:41: note: Function 'luaK_posfix' argument 2 names different: declaration 'op' definition 'opr'.
void luaK_posfix (FuncState *fs, BinOpr opr,
                                        ^
src/third_party/lua-5.4.3/src/lcode.c:1643:28: style:inconclusive: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'. [funcArgNamesDifferent]
                  expdesc *e1, expdesc *e2, int line) {
                           ^
src/third_party/lua-5.4.3/src/lcode.h:95:64: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
LUAI_FUNC void luaK_posfix (FuncState *fs, BinOpr op, expdesc *v1,
                                                               ^
src/third_party/lua-5.4.3/src/lcode.c:1643:28: note: Function 'luaK_posfix' argument 3 names different: declaration 'v1' definition 'e1'.
                  expdesc *e1, expdesc *e2, int line) {
                           ^
src/third_party/lua-5.4.3/src/lcode.c:1643:41: style:inconclusive: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'. [funcArgNamesDifferent]
                  expdesc *e1, expdesc *e2, int line) {
                                        ^
src/third_party/lua-5.4.3/src/lcode.h:96:38: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
                            expdesc *v2, int line);
                                     ^
src/third_party/lua-5.4.3/src/lcode.c:1643:41: note: Function 'luaK_posfix' argument 4 names different: declaration 'v2' definition 'e2'.
                  expdesc *e1, expdesc *e2, int line) {
                                        ^
src/third_party/lua-5.4.3/src/lcorolib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lctype.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 61 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ldblib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ldebug.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 67 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ldebug.c:692:68: style:inconclusive: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'. [funcArgNamesDifferent]
l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                   ^
src/third_party/lua-5.4.3/src/ldebug.h:43:61: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
                                                const char *opname);
                                                            ^
src/third_party/lua-5.4.3/src/ldebug.c:692:68: note: Function 'luaG_typeerror' argument 3 names different: declaration 'opname' definition 'op'.
l_noret luaG_typeerror (lua_State *L, const TValue *o, const char *op) {
                                                                   ^
src/third_party/lua-5.4.3/src/ldo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ldo.c:335:13: style: Variable 'ci->top' is reassigned a value before the old one has been used. [redundantAssignment]
    ci->top = restorestack(L, ci_top);
            ^
src/third_party/lua-5.4.3/src/ldo.c:327:15: note: ci->top is assigned
      ci->top = L->top + LUA_MINSTACK;
              ^
src/third_party/lua-5.4.3/src/ldo.c:335:13: note: ci->top is overwritten
    ci->top = restorestack(L, ci_top);
            ^
src/third_party/lua-5.4.3/src/ldo.c:307:35: style:inconclusive: Function 'luaD_hook' argument 4 names different: declaration 'fTransfer' definition 'ftransfer'. [funcArgNamesDifferent]
                              int ftransfer, int ntransfer) {
                                  ^
src/third_party/lua-5.4.3/src/ldo.h:59:45: note: Function 'luaD_hook' argument 4 names different: declaration 'fTransfer' definition 'ftransfer'.
                                        int fTransfer, int nTransfer);
                                            ^
src/third_party/lua-5.4.3/src/ldo.c:307:35: note: Function 'luaD_hook' argument 4 names different: declaration 'fTransfer' definition 'ftransfer'.
                              int ftransfer, int ntransfer) {
                                  ^
src/third_party/lua-5.4.3/src/ldo.c:307:50: style:inconclusive: Function 'luaD_hook' argument 5 names different: declaration 'nTransfer' definition 'ntransfer'. [funcArgNamesDifferent]
                              int ftransfer, int ntransfer) {
                                                 ^
src/third_party/lua-5.4.3/src/ldo.h:59:60: note: Function 'luaD_hook' argument 5 names different: declaration 'nTransfer' definition 'ntransfer'.
                                        int fTransfer, int nTransfer);
                                                           ^
src/third_party/lua-5.4.3/src/ldo.c:307:50: note: Function 'luaD_hook' argument 5 names different: declaration 'nTransfer' definition 'ntransfer'.
                              int ftransfer, int ntransfer) {
                                                 ^
src/third_party/lua-5.4.3/src/ldo.c:481:68: style:inconclusive: Function 'luaD_pretailcall' argument 4 names different: declaration 'n' definition 'narg1'. [funcArgNamesDifferent]
void luaD_pretailcall (lua_State *L, CallInfo *ci, StkId func, int narg1) {
                                                                   ^
src/third_party/lua-5.4.3/src/ldo.h:61:78: note: Function 'luaD_pretailcall' argument 4 names different: declaration 'n' definition 'narg1'.
LUAI_FUNC void luaD_pretailcall (lua_State *L, CallInfo *ci, StkId func, int n);
                                                                             ^
src/third_party/lua-5.4.3/src/ldo.c:481:68: note: Function 'luaD_pretailcall' argument 4 names different: declaration 'n' definition 'narg1'.
void luaD_pretailcall (lua_State *L, CallInfo *ci, StkId func, int narg1) {
                                                                   ^
src/third_party/lua-5.4.3/src/ldo.c:508:55: style:inconclusive: Function 'luaD_precall' argument 3 names different: declaration 'nResults' definition 'nresults'. [funcArgNamesDifferent]
CallInfo *luaD_precall (lua_State *L, StkId func, int nresults) {
                                                      ^
src/third_party/lua-5.4.3/src/ldo.h:62:65: note: Function 'luaD_precall' argument 3 names different: declaration 'nResults' definition 'nresults'.
LUAI_FUNC CallInfo *luaD_precall (lua_State *L, StkId func, int nResults);
                                                                ^
src/third_party/lua-5.4.3/src/ldo.c:508:55: note: Function 'luaD_precall' argument 3 names different: declaration 'nResults' definition 'nresults'.
CallInfo *luaD_precall (lua_State *L, StkId func, int nresults) {
                                                      ^
src/third_party/lua-5.4.3/src/ldo.c:886:27: style:inconclusive: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'. [funcArgNamesDifferent]
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.4.3/src/ldo.h:68:51: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                                        ptrdiff_t oldtop, ptrdiff_t ef);
                                                  ^
src/third_party/lua-5.4.3/src/ldo.c:886:27: note: Function 'luaD_pcall' argument 4 names different: declaration 'oldtop' definition 'old_top'.
                ptrdiff_t old_top, ptrdiff_t ef) {
                          ^
src/third_party/lua-5.4.3/src/ldump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ldump.c:54:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:54:3: note: Address of variable taken here.
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:54:3: note: The address of local variable 'x' might be accessed at non-zero index.
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:79:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:79:3: note: Address of variable taken here.
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:79:3: note: The address of local variable 'x' might be accessed at non-zero index.
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:84:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:84:3: note: Address of variable taken here.
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/ldump.c:84:3: note: The address of local variable 'x' might be accessed at non-zero index.
  dumpVar(D, x);
  ^
src/third_party/lua-5.4.3/src/lfunc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 61 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lfunc.c:283:45: style:inconclusive: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'. [funcArgNamesDifferent]
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.4.3/src/lfunc.h:60:55: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
LUAI_FUNC const char *luaF_getlocalname (const Proto *func, int local_number,
                                                      ^
src/third_party/lua-5.4.3/src/lfunc.c:283:45: note: Function 'luaF_getlocalname' argument 1 names different: declaration 'func' definition 'f'.
const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {
                                            ^
src/third_party/lua-5.4.3/src/lgc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 62 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/linit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/liolib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/liolib.c:706:0: information: Skipping configuration 'LUA_USE_WINDOWS;_CRTIMP_TYPEINFO;_MSC_VER;l_fseek' since the value of 'l_fseek' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  op = l_fseek(f, offset, mode[op]);
^
src/third_party/lua-5.4.3/src/liolib.c:294:0: information: Skipping configuration 'LUA_USE_WINDOWS;l_checkmodep;l_popen' since the value of 'l_checkmodep' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  luaL_argcheck(L, l_checkmodep(mode), 2, "invalid mode");
^
src/third_party/lua-5.4.3/src/liolib.c:295:0: information: Skipping configuration 'LUA_USE_WINDOWS;l_checkmodep;l_popen' since the value of 'l_popen' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  p->f = l_popen(L, filename, mode);
^
src/third_party/lua-5.4.3/src/liolib.c:295:0: information: Skipping configuration 'LUA_USE_WINDOWS;l_popen' since the value of 'l_popen' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  p->f = l_popen(L, filename, mode);
^
src/third_party/lua-5.4.3/src/llex.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 65 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/llex.c:61:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (luaZ_sizebuffer(b) >= MAX_SIZE/2)
^
src/third_party/lua-5.4.3/src/llex.c:119:53: style:inconclusive: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'. [funcArgNamesDifferent]
l_noret luaX_syntaxerror (LexState *ls, const char *msg) {
                                                    ^
src/third_party/lua-5.4.3/src/llex.h:87:63: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
LUAI_FUNC l_noret luaX_syntaxerror (LexState *ls, const char *s);
                                                              ^
src/third_party/lua-5.4.3/src/llex.c:119:53: note: Function 'luaX_syntaxerror' argument 2 names different: declaration 's' definition 'msg'.
l_noret luaX_syntaxerror (LexState *ls, const char *msg) {
                                                    ^
src/third_party/lua-5.4.3/src/lmathlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lmathlib.c:757:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lua_pushinteger(L, LUA_MAXINTEGER);
^
src/third_party/lua-5.4.3/src/lmathlib.c:304:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Rand64 rotl (Rand64 x, int n) {
^
src/third_party/lua-5.4.3/src/lmathlib.c:308:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static Rand64 nextrand (Rand64 *state) {
^
src/third_party/lua-5.4.3/src/lmathlib.c:309:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  Rand64 state0 = state[0];
^
src/third_party/lua-5.4.3/src/lmathlib.c:310:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  Rand64 state1 = state[1];
^
src/third_party/lua-5.4.3/src/lmathlib.c:311:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  Rand64 state2 = state[2] ^ state0;
^
src/third_party/lua-5.4.3/src/lmathlib.c:312:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  Rand64 state3 = state[3] ^ state1;
^
src/third_party/lua-5.4.3/src/lmathlib.c:313:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  Rand64 res = rotl(state1 * 5, 7) * 9;
^
src/third_party/lua-5.4.3/src/lmathlib.c:337:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static lua_Number I2d (Rand64 x) {
^
src/third_party/lua-5.4.3/src/lmathlib.c:338:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  return (lua_Number)(trim64(x) >> shift64_FIG) * scaleFIG;
^
src/third_party/lua-5.4.3/src/lmathlib.c:518:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  Rand64 s[4];
^
src/third_party/lua-5.4.3/src/lmathlib.c:561:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  Rand64 rv = nextrand(state->s);  /* next pseudo-random value */
^
src/third_party/lua-5.4.3/src/lmathlib.c:592:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static void setseed (lua_State *L, Rand64 *state,
^
src/third_party/lua-5.4.3/src/lmathlib.c:595:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  state[0] = Int2I(n1);
^
src/third_party/lua-5.4.3/src/lmathlib.c:596:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  state[1] = Int2I(0xff);  /* avoid a zero state */
^
src/third_party/lua-5.4.3/src/lmathlib.c:597:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  state[2] = Int2I(n2);
^
src/third_party/lua-5.4.3/src/lmathlib.c:598:0: information: Skipping configuration 'LLONG_MAX;LUA_USE_C89;LUA_RAND32;Rand64' since the value of 'Rand64' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  state[3] = Int2I(0);
^
src/third_party/lua-5.4.3/src/lmem.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 62 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lmem.c:79:66: style:inconclusive: Function 'luaM_growaux_' argument 4 names different: declaration 'size' definition 'psize'. [funcArgNamesDifferent]
void *luaM_growaux_ (lua_State *L, void *block, int nelems, int *psize,
                                                                 ^
src/third_party/lua-5.4.3/src/lmem.h:86:37: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size' definition 'psize'.
                               int *size, int size_elem, int limit,
                                    ^
src/third_party/lua-5.4.3/src/lmem.c:79:66: note: Function 'luaM_growaux_' argument 4 names different: declaration 'size' definition 'psize'.
void *luaM_growaux_ (lua_State *L, void *block, int nelems, int *psize,
                                                                 ^
src/third_party/lua-5.4.3/src/lmem.c:80:26: style:inconclusive: Function 'luaM_growaux_' argument 5 names different: declaration 'size_elem' definition 'size_elems'. [funcArgNamesDifferent]
                     int size_elems, int limit, const char *what) {
                         ^
src/third_party/lua-5.4.3/src/lmem.h:86:47: note: Function 'luaM_growaux_' argument 5 names different: declaration 'size_elem' definition 'size_elems'.
                               int *size, int size_elem, int limit,
                                              ^
src/third_party/lua-5.4.3/src/lmem.c:80:26: note: Function 'luaM_growaux_' argument 5 names different: declaration 'size_elem' definition 'size_elems'.
                     int size_elems, int limit, const char *what) {
                         ^
src/third_party/lua-5.4.3/src/lmem.c:110:59: style:inconclusive: Function 'luaM_shrinkvector_' argument 3 names different: declaration 'nelem' definition 'size'. [funcArgNamesDifferent]
void *luaM_shrinkvector_ (lua_State *L, void *block, int *size,
                                                          ^
src/third_party/lua-5.4.3/src/lmem.h:88:69: note: Function 'luaM_shrinkvector_' argument 3 names different: declaration 'nelem' definition 'size'.
LUAI_FUNC void *luaM_shrinkvector_ (lua_State *L, void *block, int *nelem,
                                                                    ^
src/third_party/lua-5.4.3/src/lmem.c:110:59: note: Function 'luaM_shrinkvector_' argument 3 names different: declaration 'nelem' definition 'size'.
void *luaM_shrinkvector_ (lua_State *L, void *block, int *size,
                                                          ^
src/third_party/lua-5.4.3/src/lmem.c:162:56: style:inconclusive: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.4.3/src/lmem.h:80:66: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
LUAI_FUNC void *luaM_realloc_ (lua_State *L, void *block, size_t oldsize,
                                                                 ^
src/third_party/lua-5.4.3/src/lmem.c:162:56: note: Function 'luaM_realloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                       ^
src/third_party/lua-5.4.3/src/lmem.c:162:70: style:inconclusive: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'. [funcArgNamesDifferent]
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.4.3/src/lmem.h:81:66: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
                                                          size_t size);
                                                                 ^
src/third_party/lua-5.4.3/src/lmem.c:162:70: note: Function 'luaM_realloc_' argument 4 names different: declaration 'size' definition 'nsize'.
void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {
                                                                     ^
src/third_party/lua-5.4.3/src/lmem.c:178:60: style:inconclusive: Function 'luaM_saferealloc_' argument 3 names different: declaration 'oldsize' definition 'osize'. [funcArgNamesDifferent]
void *luaM_saferealloc_ (lua_State *L, void *block, size_t osize,
                                                           ^
src/third_party/lua-5.4.3/src/lmem.h:82:70: note: Function 'luaM_saferealloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
LUAI_FUNC void *luaM_saferealloc_ (lua_State *L, void *block, size_t oldsize,
                                                                     ^
src/third_party/lua-5.4.3/src/lmem.c:178:60: note: Function 'luaM_saferealloc_' argument 3 names different: declaration 'oldsize' definition 'osize'.
void *luaM_saferealloc_ (lua_State *L, void *block, size_t osize,
                                                           ^
src/third_party/lua-5.4.3/src/lmem.c:179:60: style:inconclusive: Function 'luaM_saferealloc_' argument 4 names different: declaration 'size' definition 'nsize'. [funcArgNamesDifferent]
                                                    size_t nsize) {
                                                           ^
src/third_party/lua-5.4.3/src/lmem.h:83:70: note: Function 'luaM_saferealloc_' argument 4 names different: declaration 'size' definition 'nsize'.
                                                              size_t size);
                                                                     ^
src/third_party/lua-5.4.3/src/lmem.c:179:60: note: Function 'luaM_saferealloc_' argument 4 names different: declaration 'size' definition 'nsize'.
                                                    size_t nsize) {
                                                           ^
src/third_party/lua-5.4.3/src/loadlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/loadlib.c:745:0: information: Skipping configuration 'LUA_CPATH_DEFAULT;_WIN32' since the value of 'LUA_CPATH_DEFAULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  setpath(L, "cpath", LUA_CPATH_VAR, LUA_CPATH_DEFAULT);
^
src/third_party/lua-5.4.3/src/loadlib.c:512:0: information: Skipping configuration 'LUA_DIRSEP;_WIN32' since the value of 'LUA_DIRSEP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                                luaL_optstring(L, 4, LUA_DIRSEP));
^
src/third_party/lua-5.4.3/src/loadlib.c:548:0: information: Skipping configuration 'LUA_DIRSEP;_WIN32' since the value of 'LUA_DIRSEP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  filename = findfile(L, name, "path", LUA_LSUBSEP);
^
src/third_party/lua-5.4.3/src/loadlib.c:582:0: information: Skipping configuration 'LUA_DIRSEP;_WIN32' since the value of 'LUA_DIRSEP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *filename = findfile(L, name, "cpath", LUA_CSUBSEP);
^
src/third_party/lua-5.4.3/src/loadlib.c:595:0: information: Skipping configuration 'LUA_DIRSEP;_WIN32' since the value of 'LUA_DIRSEP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  filename = findfile(L, lua_tostring(L, -1), "cpath", LUA_CSUBSEP);
^
src/third_party/lua-5.4.3/src/loadlib.c:747:0: information: Skipping configuration 'LUA_DIRSEP;_WIN32' since the value of 'LUA_DIRSEP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lua_pushliteral(L, LUA_DIRSEP "\n" LUA_PATH_SEP "\n" LUA_PATH_MARK "\n"
^
src/third_party/lua-5.4.3/src/loadlib.c:744:0: information: Skipping configuration 'LUA_PATH_DEFAULT;_WIN32' since the value of 'LUA_PATH_DEFAULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  setpath(L, "path", LUA_PATH_VAR, LUA_PATH_DEFAULT);
^
src/third_party/lua-5.4.3/src/lobject.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 68 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lobject.c:293:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if (a >= MAXBY10 && (a > MAXBY10 || d > MAXLASTD + neg))  /* overflow? */
^
src/third_party/lua-5.4.3/src/lopcodes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 59 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/loslib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/loslib.c:309:13: style: Variable 'tmr' is not assigned a value. [unassignedVariable]
  struct tm tmr, *stm;
            ^
src/third_party/lua-5.4.3/src/loslib.c:276:0: information: Skipping configuration 'LUA_STRFTIMEOPTIONS;LUA_USE_C89' since the value of 'LUA_STRFTIMEOPTIONS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *option = LUA_STRFTIMEOPTIONS;
^
src/third_party/lua-5.4.3/src/loslib.c:276:0: information: Skipping configuration 'LUA_STRFTIMEOPTIONS;LUA_USE_WINDOWS' since the value of 'LUA_STRFTIMEOPTIONS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  const char *option = LUA_STRFTIMEOPTIONS;
^
src/third_party/lua-5.4.3/src/lparser.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 64 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lparser.c:1721:13: style: The scope of the variable 'kind' can be reduced. [variableScope]
  int vidx, kind;  /* index and kind of last variable */
            ^
src/third_party/lua-5.4.3/src/lparser.c:313:7: style: Local variable 'reglevel' shadows outer function [shadowFunction]
  int reglevel = luaY_nvarstack(fs);
      ^
src/third_party/lua-5.4.3/src/lparser.c:229:12: note: Shadowed declaration
static int reglevel (FuncState *fs, int nvar) {
           ^
src/third_party/lua-5.4.3/src/lparser.c:313:7: note: Shadow variable
  int reglevel = luaY_nvarstack(fs);
      ^
src/third_party/lua-5.4.3/src/lstate.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 64 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lstring.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 61 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lstring.c:226:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (l_unlikely(l >= (MAX_SIZE - sizeof(TString))/sizeof(char)))
^
src/third_party/lua-5.4.3/src/lstring.c:262:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (l_unlikely(s > MAX_SIZE - udatamemoffset(nuvalue)))
^
src/third_party/lua-5.4.3/src/lstring.c:85:37: style:inconclusive: Function 'luaS_resize' argument 2 names different: declaration 'newsize' definition 'nsize'. [funcArgNamesDifferent]
void luaS_resize (lua_State *L, int nsize) {
                                    ^
src/third_party/lua-5.4.3/src/lstring.h:47:47: note: Function 'luaS_resize' argument 2 names different: declaration 'newsize' definition 'nsize'.
LUAI_FUNC void luaS_resize (lua_State *L, int newsize);
                                              ^
src/third_party/lua-5.4.3/src/lstring.c:85:37: note: Function 'luaS_resize' argument 2 names different: declaration 'newsize' definition 'nsize'.
void luaS_resize (lua_State *L, int nsize) {
                                    ^
src/third_party/lua-5.4.3/src/lstrlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lstrlib.c:1582:30: portability:inconclusive: Casting from float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        copywithendian(buff, (char *)&f, sizeof(f), h.islittle);
                             ^
src/third_party/lua-5.4.3/src/lstrlib.c:1590:30: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        copywithendian(buff, (char *)&f, sizeof(f), h.islittle);
                             ^
src/third_party/lua-5.4.3/src/lstrlib.c:1598:30: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        copywithendian(buff, (char *)&f, sizeof(f), h.islittle);
                             ^
src/third_party/lua-5.4.3/src/lstrlib.c:1725:24: portability:inconclusive: Casting from float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        copywithendian((char *)&f, data + pos, sizeof(f), h.islittle);
                       ^
src/third_party/lua-5.4.3/src/lstrlib.c:1731:24: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        copywithendian((char *)&f, data + pos, sizeof(f), h.islittle);
                       ^
src/third_party/lua-5.4.3/src/lstrlib.c:1737:24: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        copywithendian((char *)&f, data + pos, sizeof(f), h.islittle);
                       ^
src/third_party/lua-5.4.3/src/lstrlib.c:1350:7: style: union member 'Anonymous2::dummy' is never used. [unusedStructMember]
  int dummy;
      ^
src/third_party/lua-5.4.3/src/lstrlib.c:1357:8: style: struct member 'cD::c' is never used. [unusedStructMember]
  char c;
       ^
src/third_party/lua-5.4.3/src/lstrlib.c:1358:18: style: union member 'Anonymous3::d' is never used. [unusedStructMember]
  union { double d; void *p; lua_Integer i; lua_Number n; } u;
                 ^
src/third_party/lua-5.4.3/src/lstrlib.c:1358:42: style: union member 'Anonymous3::i' is never used. [unusedStructMember]
  union { double d; void *p; lua_Integer i; lua_Number n; } u;
                                         ^
src/third_party/lua-5.4.3/src/ltable.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 66 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ltable.c:849:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (j <= l_castS2U(LUA_MAXINTEGER) / 2)
^
src/third_party/lua-5.4.3/src/ltable.c:852:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      j = LUA_MAXINTEGER;
^
src/third_party/lua-5.4.3/src/ltable.c:542:56: style:inconclusive: Function 'luaH_resize' argument 3 names different: declaration 'nasize' definition 'newasize'. [funcArgNamesDifferent]
void luaH_resize (lua_State *L, Table *t, unsigned int newasize,
                                                       ^
src/third_party/lua-5.4.3/src/ltable.h:51:66: note: Function 'luaH_resize' argument 3 names different: declaration 'nasize' definition 'newasize'.
LUAI_FUNC void luaH_resize (lua_State *L, Table *t, unsigned int nasize,
                                                                 ^
src/third_party/lua-5.4.3/src/ltable.c:542:56: note: Function 'luaH_resize' argument 3 names different: declaration 'nasize' definition 'newasize'.
void luaH_resize (lua_State *L, Table *t, unsigned int newasize,
                                                       ^
src/third_party/lua-5.4.3/src/ltablib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ltablib.c:123:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    luaL_argcheck(L, f > 0 || e < LUA_MAXINTEGER + f, 3,
^
src/third_party/lua-5.4.3/src/ltablib.c:126:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    luaL_argcheck(L, t <= LUA_MAXINTEGER - n + 1, 4,
^
src/third_party/lua-5.4.3/src/ltablib.c:250:20: warning: Division by result of sizeof(). memcpy() expects a size in bytes, did you intend to multiply instead? [sizeofDivisionMemfunc]
  memcpy(buff, &c, sof(c) * sizeof(unsigned int));
                   ^
src/third_party/lua-5.4.3/src/ltablib.c:251:29: warning: Division by result of sizeof(). memcpy() expects a size in bytes, did you intend to multiply instead? [sizeofDivisionMemfunc]
  memcpy(buff + sof(c), &t, sof(t) * sizeof(unsigned int));
                            ^
src/third_party/lua-5.4.3/src/ltm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 65 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/ltm.c:120:46: style:inconclusive: Function 'luaT_callTMres' argument 5 names different: declaration 'p3' definition 'res'. [funcArgNamesDifferent]
                     const TValue *p2, StkId res) {
                                             ^
src/third_party/lua-5.4.3/src/ltm.h:84:71: note: Function 'luaT_callTMres' argument 5 names different: declaration 'p3' definition 'res'.
                            const TValue *p1, const TValue *p2, StkId p3);
                                                                      ^
src/third_party/lua-5.4.3/src/ltm.c:120:46: note: Function 'luaT_callTMres' argument 5 names different: declaration 'p3' definition 'res'.
                     const TValue *p2, StkId res) {
                                             ^
src/third_party/lua-5.4.3/src/ltm.c:176:44: style:inconclusive: Function 'luaT_trybinassocTM' argument 4 names different: declaration 'inv' definition 'flip'. [funcArgNamesDifferent]
                                       int flip, StkId res, TMS event) {
                                           ^
src/third_party/lua-5.4.3/src/ltm.h:89:30: note: Function 'luaT_trybinassocTM' argument 4 names different: declaration 'inv' definition 'flip'.
       const TValue *p2, int inv, StkId res, TMS event);
                             ^
src/third_party/lua-5.4.3/src/ltm.c:176:44: note: Function 'luaT_trybinassocTM' argument 4 names different: declaration 'inv' definition 'flip'.
                                       int flip, StkId res, TMS event) {
                                           ^
src/third_party/lua-5.4.3/src/ltm.c:185:40: style:inconclusive: Function 'luaT_trybiniTM' argument 4 names different: declaration 'inv' definition 'flip'. [funcArgNamesDifferent]
                                   int flip, StkId res, TMS event) {
                                       ^
src/third_party/lua-5.4.3/src/ltm.h:91:36: note: Function 'luaT_trybiniTM' argument 4 names different: declaration 'inv' definition 'flip'.
                               int inv, StkId res, TMS event);
                                   ^
src/third_party/lua-5.4.3/src/ltm.c:185:40: note: Function 'luaT_trybiniTM' argument 4 names different: declaration 'inv' definition 'flip'.
                                   int flip, StkId res, TMS event) {
                                       ^
src/third_party/lua-5.4.3/src/ltm.c:222:28: style:inconclusive: Function 'luaT_callorderiTM' argument 4 names different: declaration 'inv' definition 'flip'. [funcArgNamesDifferent]
                       int flip, int isfloat, TMS event) {
                           ^
src/third_party/lua-5.4.3/src/ltm.h:95:38: note: Function 'luaT_callorderiTM' argument 4 names different: declaration 'inv' definition 'flip'.
                                 int inv, int isfloat, TMS event);
                                     ^
src/third_party/lua-5.4.3/src/ltm.c:222:28: note: Function 'luaT_callorderiTM' argument 4 names different: declaration 'inv' definition 'flip'.
                       int flip, int isfloat, TMS event) {
                           ^
src/third_party/lua-5.4.3/src/lua.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lua.c:632:0: information: Skipping configuration 'LUA_USE_WINDOWS;lua_stdin_is_tty' since the value of 'lua_stdin_is_tty' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (lua_stdin_is_tty()) {  /* running in interactive mode? */
^
src/third_party/lua-5.4.3/src/luac.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 67 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lundump.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 62 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lundump.c:95:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  loadVar(S, x);
  ^
src/third_party/lua-5.4.3/src/lundump.c:95:3: note: Address of variable taken here.
  loadVar(S, x);
  ^
src/third_party/lua-5.4.3/src/lundump.c:95:3: note: The address of local variable 'x' might be accessed at non-zero index.
  loadVar(S, x);
  ^
src/third_party/lua-5.4.3/src/lundump.c:102:3: warning: The address of local variable 'x' might be accessed at non-zero index. [objectIndex]
  loadVar(S, x);
  ^
src/third_party/lua-5.4.3/src/lundump.c:102:3: note: Address of variable taken here.
  loadVar(S, x);
  ^
src/third_party/lua-5.4.3/src/lundump.c:102:3: note: The address of local variable 'x' might be accessed at non-zero index.
  loadVar(S, x);
  ^
src/third_party/lua-5.4.3/src/lutf8lib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lvm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 68 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua-5.4.3/src/lvm.c:186:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      *p = LUA_MAXINTEGER;  /* truncate */
^
src/third_party/lua-5.4.3/src/lvm.c:659:0: information: Skipping configuration 'LLONG_MAX' since the value of 'LLONG_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (l_unlikely(l >= (MAX_SIZE/sizeof(char)) - tl))
^
src/third_party/lua-5.4.3/src/lvm.c:229:15: warning: Either the condition 'step>0' is redundant or there is division by zero at line 229. [zerodivcond]
        count /= l_castS2U(-(step + 1)) + 1u;
              ^
src/third_party/lua-5.4.3/src/lvm.c:221:16: note: Assuming that condition 'step>0' is not redundant
      if (step > 0) {  /* ascending loop? */
               ^
src/third_party/lua-5.4.3/src/lvm.c:229:15: note: Division by zero
        count /= l_castS2U(-(step + 1)) + 1u;
              ^
src/third_party/lua-5.4.3/src/lvm.c:718:50: style:inconclusive: Function 'luaV_idiv' argument 2 names different: declaration 'x' definition 'm'. [funcArgNamesDifferent]
lua_Integer luaV_idiv (lua_State *L, lua_Integer m, lua_Integer n) {
                                                 ^
src/third_party/lua-5.4.3/src/lvm.h:130:60: note: Function 'luaV_idiv' argument 2 names different: declaration 'x' definition 'm'.
LUAI_FUNC lua_Integer luaV_idiv (lua_State *L, lua_Integer x, lua_Integer y);
                                                           ^
src/third_party/lua-5.4.3/src/lvm.c:718:50: note: Function 'luaV_idiv' argument 2 names different: declaration 'x' definition 'm'.
lua_Integer luaV_idiv (lua_State *L, lua_Integer m, lua_Integer n) {
                                                 ^
src/third_party/lua-5.4.3/src/lvm.c:718:65: style:inconclusive: Function 'luaV_idiv' argument 3 names different: declaration 'y' definition 'n'. [funcArgNamesDifferent]
lua_Integer luaV_idiv (lua_State *L, lua_Integer m, lua_Integer n) {
                                                                ^
src/third_party/lua-5.4.3/src/lvm.h:130:75: note: Function 'luaV_idiv' argument 3 names different: declaration 'y' definition 'n'.
LUAI_FUNC lua_Integer luaV_idiv (lua_State *L, lua_Integer x, lua_Integer y);
                                                                          ^
src/third_party/lua-5.4.3/src/lvm.c:718:65: note: Function 'luaV_idiv' argument 3 names different: declaration 'y' definition 'n'.
lua_Integer luaV_idiv (lua_State *L, lua_Integer m, lua_Integer n) {
                                                                ^
src/third_party/lua-5.4.3/src/lvm.c:738:49: style:inconclusive: Function 'luaV_mod' argument 2 names different: declaration 'x' definition 'm'. [funcArgNamesDifferent]
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                ^
src/third_party/lua-5.4.3/src/lvm.h:131:59: note: Function 'luaV_mod' argument 2 names different: declaration 'x' definition 'm'.
LUAI_FUNC lua_Integer luaV_mod (lua_State *L, lua_Integer x, lua_Integer y);
                                                          ^
src/third_party/lua-5.4.3/src/lvm.c:738:49: note: Function 'luaV_mod' argument 2 names different: declaration 'x' definition 'm'.
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                ^
src/third_party/lua-5.4.3/src/lvm.c:738:64: style:inconclusive: Function 'luaV_mod' argument 3 names different: declaration 'y' definition 'n'. [funcArgNamesDifferent]
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                               ^
src/third_party/lua-5.4.3/src/lvm.h:131:74: note: Function 'luaV_mod' argument 3 names different: declaration 'y' definition 'n'.
LUAI_FUNC lua_Integer luaV_mod (lua_State *L, lua_Integer x, lua_Integer y);
                                                                         ^
src/third_party/lua-5.4.3/src/lvm.c:738:64: note: Function 'luaV_mod' argument 3 names different: declaration 'y' definition 'n'.
lua_Integer luaV_mod (lua_State *L, lua_Integer m, lua_Integer n) {
                                                               ^
src/third_party/lua-5.4.3/src/lvm.c:756:48: style:inconclusive: Function 'luaV_modf' argument 2 names different: declaration 'x' definition 'm'. [funcArgNamesDifferent]
lua_Number luaV_modf (lua_State *L, lua_Number m, lua_Number n) {
                                               ^
src/third_party/lua-5.4.3/src/lvm.h:132:58: note: Function 'luaV_modf' argument 2 names different: declaration 'x' definition 'm'.
LUAI_FUNC lua_Number luaV_modf (lua_State *L, lua_Number x, lua_Number y);
                                                         ^
src/third_party/lua-5.4.3/src/lvm.c:756:48: note: Function 'luaV_modf' argument 2 names different: declaration 'x' definition 'm'.
lua_Number luaV_modf (lua_State *L, lua_Number m, lua_Number n) {
                                               ^
src/third_party/lua-5.4.3/src/lvm.c:756:62: style:inconclusive: Function 'luaV_modf' argument 3 names different: declaration 'y' definition 'n'. [funcArgNamesDifferent]
lua_Number luaV_modf (lua_State *L, lua_Number m, lua_Number n) {
                                                             ^
src/third_party/lua-5.4.3/src/lvm.h:132:72: note: Function 'luaV_modf' argument 3 names different: declaration 'y' definition 'n'.
LUAI_FUNC lua_Number luaV_modf (lua_State *L, lua_Number x, lua_Number y);
                                                                       ^
src/third_party/lua-5.4.3/src/lvm.c:756:62: note: Function 'luaV_modf' argument 3 names different: declaration 'y' definition 'n'.
lua_Number luaV_modf (lua_State *L, lua_Number m, lua_Number n) {
                                                             ^
src/third_party/lua-5.4.3/src/lzio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/lua_struct.c:197:20: warning: The address of local variable 'f' might be accessed at non-zero index. [objectIndex]
      char temp = b[i];
                   ^
src/third_party/lua_struct.c:232:30: note: Address of variable taken here.
        correctbytes((char *)&f, size, h.endian);
                             ^
src/third_party/lua_struct.c:232:22: note: Calling function 'correctbytes', 1st argument '(char*)&f' value is lifetime=f
        correctbytes((char *)&f, size, h.endian);
                     ^
src/third_party/lua_struct.c:197:20: note: The address of local variable 'f' might be accessed at non-zero index.
      char temp = b[i];
                   ^
src/third_party/lua_struct.c:197:20: warning: The address of local variable 'd' might be accessed at non-zero index. [objectIndex]
      char temp = b[i];
                   ^
src/third_party/lua_struct.c:238:30: note: Address of variable taken here.
        correctbytes((char *)&d, size, h.endian);
                             ^
src/third_party/lua_struct.c:238:22: note: Calling function 'correctbytes', 1st argument '(char*)&d' value is lifetime=d
        correctbytes((char *)&d, size, h.endian);
                     ^
src/third_party/lua_struct.c:197:20: note: The address of local variable 'd' might be accessed at non-zero index.
      char temp = b[i];
                   ^
src/third_party/lua_struct.c:198:8: warning: The address of local variable 'f' might be accessed at non-zero index. [objectIndex]
      b[i++] = b[size];
       ^
src/third_party/lua_struct.c:232:30: note: Address of variable taken here.
        correctbytes((char *)&f, size, h.endian);
                             ^
src/third_party/lua_struct.c:232:22: note: Calling function 'correctbytes', 1st argument '(char*)&f' value is lifetime=f
        correctbytes((char *)&f, size, h.endian);
                     ^
src/third_party/lua_struct.c:198:8: note: The address of local variable 'f' might be accessed at non-zero index.
      b[i++] = b[size];
       ^
src/third_party/lua_struct.c:198:8: warning: The address of local variable 'd' might be accessed at non-zero index. [objectIndex]
      b[i++] = b[size];
       ^
src/third_party/lua_struct.c:238:30: note: Address of variable taken here.
        correctbytes((char *)&d, size, h.endian);
                             ^
src/third_party/lua_struct.c:238:22: note: Calling function 'correctbytes', 1st argument '(char*)&d' value is lifetime=d
        correctbytes((char *)&d, size, h.endian);
                     ^
src/third_party/lua_struct.c:198:8: note: The address of local variable 'd' might be accessed at non-zero index.
      b[i++] = b[size];
       ^
src/third_party/lua_struct.c:199:8: warning: The address of local variable 'f' might be accessed at non-zero index. [objectIndex]
      b[size] = temp;
       ^
src/third_party/lua_struct.c:232:30: note: Address of variable taken here.
        correctbytes((char *)&f, size, h.endian);
                             ^
src/third_party/lua_struct.c:232:22: note: Calling function 'correctbytes', 1st argument '(char*)&f' value is lifetime=f
        correctbytes((char *)&f, size, h.endian);
                     ^
src/third_party/lua_struct.c:199:8: note: The address of local variable 'f' might be accessed at non-zero index.
      b[size] = temp;
       ^
src/third_party/lua_struct.c:199:8: warning: The address of local variable 'd' might be accessed at non-zero index. [objectIndex]
      b[size] = temp;
       ^
src/third_party/lua_struct.c:238:30: note: Address of variable taken here.
        correctbytes((char *)&d, size, h.endian);
                             ^
src/third_party/lua_struct.c:238:22: note: Calling function 'correctbytes', 1st argument '(char*)&d' value is lifetime=d
        correctbytes((char *)&d, size, h.endian);
                     ^
src/third_party/lua_struct.c:199:8: note: The address of local variable 'd' might be accessed at non-zero index.
      b[size] = temp;
       ^
src/third_party/lua_struct.c:232:22: portability:inconclusive: Casting from float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        correctbytes((char *)&f, size, h.endian);
                     ^
src/third_party/lua_struct.c:233:29: portability:inconclusive: Casting from float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        luaL_addlstring(&b, (char *)&f, size);
                            ^
src/third_party/lua_struct.c:238:22: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        correctbytes((char *)&d, size, h.endian);
                     ^
src/third_party/lua_struct.c:239:29: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        luaL_addlstring(&b, (char *)&d, size);
                            ^
src/third_party/lua_struct.c:320:22: portability:inconclusive: Casting from float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        correctbytes((char *)&f, sizeof(f), h.endian);
                     ^
src/third_party/lua_struct.c:327:22: portability:inconclusive: Casting from double * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        correctbytes((char *)&d, sizeof(d), h.endian);
                     ^
src/third_party/lua_struct.c:80:7: style: union member 'Anonymous0::dummy' is never used. [unusedStructMember]
  int dummy;
      ^
src/third_party/lua_struct.c:51:0: information: Skipping configuration 'STRUCT_INT' since the value of 'STRUCT_INT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef STRUCT_INT Inttype;
^
src/third_party/lua_struct.c:54:0: information: Skipping configuration 'STRUCT_INT' since the value of 'STRUCT_INT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
typedef unsigned STRUCT_INT Uinttype;
^
src/third_party/sqlite3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 520 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/third_party/sqlite3.c:23220:3: portability: Returning an integer in a function with pointer return type is not portable. [CastIntegerToAddressAtReturn]
  return pVfs->xDlSym(pVfs, pHdle, zSym);
  ^
src/third_party/sqlite3.c:98946:11: warning: Assert statement calls a function which may have desired side effects: 'sqlite3ExprIsInteger'. [assertWithSideEffect]
  assert( sqlite3ExprIsInteger(pE, &i)==0 );
          ^
src/third_party/sqlite3.c:101956:15: warning: Assert statement calls a function which may have desired side effects: 'sqlite3GetInt32'. [assertWithSideEffect]
           || sqlite3GetInt32(p->u.zToken, &rc)==0 );
              ^
src/third_party/sqlite3.c:118109:22: warning: Assert statement calls a function which may have desired side effects: 'sqlite3_value_blob'. [assertWithSideEffect]
      assert( zBlob==sqlite3_value_blob(argv[0]) ); /* No encoding change */
                     ^
src/third_party/sqlite3.c:118229:18: warning: Assert statement calls a function which may have desired side effects: 'sqlite3_value_blob'. [assertWithSideEffect]
  assert( pBlob==sqlite3_value_blob(argv[0]) );  /* No encoding change */
                 ^
src/third_party/sqlite3.c:164984:38: warning: Assert statement modifies 'x'. [assignmentInAssert]
      assert( /*side-effects-ok*/ (x = va_arg(ap,int))!=0 );
                                     ^
src/third_party/sqlite3.c:130296:7: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
      pSort->pDeferredRowLoad = &sRowLoadInfo;
      ^
src/third_party/sqlite3.c:136365:3: error: Address of local auto-variable assigned to a function parameter. [autoVariables]
  *pazResult = &res.azResult[1];
  ^
src/third_party/sqlite3.c:62956:45: style:inconclusive: Boolean expression '*(char*)(&sqlite3one)==0' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
    sqlite3Put4byte(&aWalHdr[0], (WAL_MAGIC | SQLITE_BIGENDIAN));
                                            ^
src/third_party/sqlite3.c:21422:39: warning: Either the condition 'op>=0' is redundant or the array 'statMutex[10]' is accessed at index -1, which is out of bounds. [negativeIndex]
  assert( sqlite3_mutex_held(statMutex[op] ? sqlite3Pcache1Mutex()
                                      ^
src/third_party/sqlite3.c:21424:13: note: Assuming that condition 'op>=0' is not redundant
  assert( op>=0 && op<ArraySize(wsdStat.nowValue) );
            ^
src/third_party/sqlite3.c:21422:39: note: Negative array index
  assert( sqlite3_mutex_held(statMutex[op] ? sqlite3Pcache1Mutex()
                                      ^
src/third_party/sqlite3.c:29004:25: warning: Either the condition 'k>=0' is redundant or the array 'pSrc->a[1]' is accessed at index -1, which is out of bounds. [negativeIndex]
        pItem = &pSrc->a[k];
                        ^
src/third_party/sqlite3.c:29006:18: note: Assuming that condition 'k>=0' is not redundant
        assert( k>=0 && k<pSrc->nSrc );
                 ^
src/third_party/sqlite3.c:29004:25: note: Negative array index
        pItem = &pSrc->a[k];
                        ^
src/third_party/sqlite3.c:71447:27: error: Array 'pCArray->apEnd[6]' accessed at index 6, which is out of bounds. [arrayIndexOutOfBounds]
  pSrcEnd = pCArray->apEnd[k];
                          ^
src/third_party/sqlite3.c:71446:3: note: After for loop, k has value 6
  for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}
  ^
src/third_party/sqlite3.c:71447:27: note: Array index out of bounds
  pSrcEnd = pCArray->apEnd[k];
                          ^
src/third_party/sqlite3.c:71531:24: error: Array 'pCArray->apEnd[6]' accessed at index 6, which is out of bounds. [arrayIndexOutOfBounds]
  pEnd = pCArray->apEnd[k];
                       ^
src/third_party/sqlite3.c:71530:3: note: After for loop, k has value 6
  for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}
  ^
src/third_party/sqlite3.c:71531:24: note: Array index out of bounds
  pEnd = pCArray->apEnd[k];
                       ^
src/third_party/sqlite3.c:32005:14: style: Array index 'i' is used before limits check. [arrayIndexThenCheck]
    for(i=0; sqlite3Isxdigit(zNum[i]) && i<8; i++){
             ^
src/third_party/sqlite3.c:71446:25: style: Array index 'k' is used before limits check. [arrayIndexThenCheck]
  for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}
                        ^
src/third_party/sqlite3.c:71530:25: style: Array index 'k' is used before limits check. [arrayIndexThenCheck]
  for(k=0; pCArray->ixNx[k]<=i && ALWAYS(k<NB*2); k++){}
                        ^
src/third_party/sqlite3.c:31999:17: error: The address of local variable 'z' is accessed at non-zero index. [objectIndex]
        && (zNum[1]=='x' || zNum[1]=='X')
                ^
src/third_party/sqlite3.c:158268:50: note: Address of variable taken here.
      if( yymsp[0].minor.yy202 ) sqlite3GetInt32(&t.z[1], &yymsp[0].minor.yy202->iTable);
                                                 ^
src/third_party/sqlite3.c:158268:50: note: Calling function 'sqlite3GetInt32', 1st argument '&t.z[1]' value is lifetime=z
      if( yymsp[0].minor.yy202 ) sqlite3GetInt32(&t.z[1], &yymsp[0].minor.yy202->iTable);
                                                 ^
src/third_party/sqlite3.c:31999:17: note: The address of local variable 'z' is accessed at non-zero index.
        && (zNum[1]=='x' || zNum[1]=='X')
                ^
src/third_party/sqlite3.c:32000:12: error: The address of local variable 'z' is accessed at non-zero index. [objectIndex]
        && sqlite3Isxdigit(zNum[2])
           ^
src/third_party/sqlite3.c:158268:50: note: Address of variable taken here.
      if( yymsp[0].minor.yy202 ) sqlite3GetInt32(&t.z[1], &yymsp[0].minor.yy202->iTable);
                                                 ^
src/third_party/sqlite3.c:158268:50: note: Calling function 'sqlite3GetInt32', 1st argument '&t.z[1]' value is lifetime=z
      if( yymsp[0].minor.yy202 ) sqlite3GetInt32(&t.z[1], &yymsp[0].minor.yy202->iTable);
                                                 ^
src/third_party/sqlite3.c:32000:12: note: The address of local variable 'z' is accessed at non-zero index.
        && sqlite3Isxdigit(zNum[2])
           ^
src/third_party/sqlite3.c:60067:24: warning: The address of local variable 'h1' might be accessed at non-zero index. [objectIndex]
  u32 *aEnd = (u32 *)&a[nByte];
                       ^
src/third_party/sqlite3.c:61655:28: note: Address of variable taken here.
  walChecksumBytes(1, (u8*)&h1, sizeof(h1)-sizeof(h1.aCksum), 0, aCksum);
                           ^
src/third_party/sqlite3.c:61655:23: note: Calling function 'walChecksumBytes', 2nd argument '(unsigned char*)&h1' value is lifetime=h1
  walChecksumBytes(1, (u8*)&h1, sizeof(h1)-sizeof(h1.aCksum), 0, aCksum);
                      ^
src/third_party/sqlite3.c:60067:24: note: The address of local variable 'h1' might be accessed at non-zero index.
  u32 *aEnd = (u32 *)&a[nByte];
                       ^
src/third_party/sqlite3.c:60967:23: warning: The address of local variable 'aMerge' might be accessed at non-zero index. [objectIndex]
      logpage = aRight[iRight++];
                      ^
src/third_party/sqlite3.c:61031:46: note: Address of variable taken here.
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:61031:46: note: Calling function 'walMerge', 4th argument '&aMerge' value is lifetime=aMerge
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:60967:23: note: The address of local variable 'aMerge' might be accessed at non-zero index.
      logpage = aRight[iRight++];
                      ^
src/third_party/sqlite3.c:60967:23: warning: The address of local variable 'aMerge' might be accessed at non-zero index. [objectIndex]
      logpage = aRight[iRight++];
                      ^
src/third_party/sqlite3.c:61044:46: note: Address of variable taken here.
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:61044:46: note: Calling function 'walMerge', 4th argument '&aMerge' value is lifetime=aMerge
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:60967:23: note: The address of local variable 'aMerge' might be accessed at non-zero index.
      logpage = aRight[iRight++];
                      ^
src/third_party/sqlite3.c:60975:46: warning: The address of local variable 'aMerge' might be accessed at non-zero index. [objectIndex]
    assert( iRight>=nRight || aContent[aRight[iRight]]>dbpage );
                                             ^
src/third_party/sqlite3.c:61031:46: note: Address of variable taken here.
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:61031:46: note: Calling function 'walMerge', 4th argument '&aMerge' value is lifetime=aMerge
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:60975:46: note: The address of local variable 'aMerge' might be accessed at non-zero index.
    assert( iRight>=nRight || aContent[aRight[iRight]]>dbpage );
                                             ^
src/third_party/sqlite3.c:60975:46: warning: The address of local variable 'aMerge' might be accessed at non-zero index. [objectIndex]
    assert( iRight>=nRight || aContent[aRight[iRight]]>dbpage );
                                             ^
src/third_party/sqlite3.c:61044:46: note: Address of variable taken here.
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:61044:46: note: Calling function 'walMerge', 4th argument '&aMerge' value is lifetime=aMerge
      walMerge(aContent, p->aList, p->nList, &aMerge, &nMerge, aBuffer);
                                             ^
src/third_party/sqlite3.c:60975:46: note: The address of local variable 'aMerge' might be accessed at non-zero index.
    assert( iRight>=nRight || aContent[aRight[iRight]]>dbpage );
                                             ^
src/third_party/sqlite3.c:77418:17: warning: The address of local variable 'zToken' might be accessed at non-zero index. [objectIndex]
    assert( zVal[nVal]=='\'' );
                ^
src/third_party/sqlite3.c:77416:12: note: Address of variable taken here.
    zVal = &pExpr->u.zToken[2];
           ^
src/third_party/sqlite3.c:77418:17: note: The address of local variable 'zToken' might be accessed at non-zero index.
    assert( zVal[nVal]=='\'' );
                ^
src/third_party/sqlite3.c:103677:16: warning: The address of local variable 'zToken' might be accessed at non-zero index. [objectIndex]
      assert( z[n]=='\'' );
               ^
src/third_party/sqlite3.c:103675:11: note: Address of variable taken here.
      z = &pExpr->u.zToken[2];
          ^
src/third_party/sqlite3.c:103677:16: note: The address of local variable 'zToken' might be accessed at non-zero index.
      assert( z[n]=='\'' );
               ^
src/third_party/sqlite3.c:118937:33: error: The address of local variable 'likeInfoAlt' is accessed at non-zero index. [objectIndex]
  assert( &((char*)&likeInfoAlt)[1] == (char*)&likeInfoAlt.matchOne );
                                ^
src/third_party/sqlite3.c:118937:20: note: Address of variable taken here.
  assert( &((char*)&likeInfoAlt)[1] == (char*)&likeInfoAlt.matchOne );
                   ^
src/third_party/sqlite3.c:118937:33: note: The address of local variable 'likeInfoAlt' is accessed at non-zero index.
  assert( &((char*)&likeInfoAlt)[1] == (char*)&likeInfoAlt.matchOne );
                                ^
src/third_party/sqlite3.c:118938:33: error: The address of local variable 'likeInfoAlt' is accessed at non-zero index. [objectIndex]
  assert( &((char*)&likeInfoAlt)[2] == (char*)&likeInfoAlt.matchSet );
                                ^
src/third_party/sqlite3.c:118938:20: note: Address of variable taken here.
  assert( &((char*)&likeInfoAlt)[2] == (char*)&likeInfoAlt.matchSet );
                   ^
src/third_party/sqlite3.c:118938:33: note: The address of local variable 'likeInfoAlt' is accessed at non-zero index.
  assert( &((char*)&likeInfoAlt)[2] == (char*)&likeInfoAlt.matchSet );
                                ^
src/third_party/sqlite3.c:120054:16: warning: The address of local variable 'iCol' might be accessed at non-zero index. [objectIndex]
      if( aiCol[i]==pTab->iPKey ){
               ^
src/third_party/sqlite3.c:120051:15: note: Address of variable taken here.
      aiCol = &iCol;
              ^
src/third_party/sqlite3.c:120054:16: note: The address of local variable 'iCol' might be accessed at non-zero index.
      if( aiCol[i]==pTab->iPKey ){
               ^
src/third_party/sqlite3.c:120055:14: warning: The address of local variable 'iCol' might be accessed at non-zero index. [objectIndex]
        aiCol[i] = -1;
             ^
src/third_party/sqlite3.c:120051:15: note: Address of variable taken here.
      aiCol = &iCol;
              ^
src/third_party/sqlite3.c:120055:14: note: The address of local variable 'iCol' might be accessed at non-zero index.
        aiCol[i] = -1;
             ^
src/third_party/sqlite3.c:62216:10: warning: Identical condition and return expression 'rc', return value is always 0 [identicalConditionAfterEarlyExit]
  return rc;
         ^
src/third_party/sqlite3.c:62168:7: note: If condition 'rc' is true, the function will return/exit
  if( rc ){
      ^
src/third_party/sqlite3.c:62216:10: note: Returning identical expression 'rc'
  return rc;
         ^
src/third_party/sqlite3.c:39721:7: style: The if condition is the same as the previous if condition [duplicateCondition]
  if( isDelete )                ctrlFlags |= UNIXFILE_DELETE;
      ^
src/third_party/sqlite3.c:39687:7: note: First condition
  if( isDelete ){
      ^
src/third_party/sqlite3.c:39721:7: note: Second condition
  if( isDelete )                ctrlFlags |= UNIXFILE_DELETE;
      ^
src/third_party/sqlite3.c:56529:16: style: The if condition is the same as the previous if condition [duplicateCondition]
  if( nPathname>0 ){
               ^
src/third_party/sqlite3.c:56518:16: note: First condition
  if( nPathname>0 ){
               ^
src/third_party/sqlite3.c:56529:16: note: Second condition
  if( nPathname>0 ){
               ^
src/third_party/sqlite3.c:63120:9: style: The if condition is the same as the previous if condition [duplicateCondition]
    if( isCommit ){
        ^
src/third_party/sqlite3.c:63115:9: note: First condition
    if( isCommit ){
        ^
src/third_party/sqlite3.c:63120:9: note: Second condition
    if( isCommit ){
        ^
src/third_party/sqlite3.c:31041:7: style: Condition 'bom' is always false [knownConditionTrueFalse]
  if( bom ){
      ^
src/third_party/sqlite3.c:31027:12: note: Assignment 'bom=0', assigned value is 0
  u8 bom = 0;
           ^
src/third_party/sqlite3.c:31041:7: note: Condition 'bom' is always false
  if( bom ){
      ^
src/third_party/sqlite3.c:132731:8: style: Condition 'p->pPrior' is always false [knownConditionTrueFalse]
  if( p->pPrior ){
       ^
src/third_party/sqlite3.c:132575:15: note: Assignment 'p->pPrior=0', assigned value is 0
  p->pPrior = 0;
              ^
src/third_party/sqlite3.c:132731:8: note: Condition 'p->pPrior' is always false
  if( p->pPrior ){
       ^
src/third_party/sqlite3.c:143378:15: style: Condition 'bStopAtNull' is always false [knownConditionTrueFalse]
    }else if( bStopAtNull ){
              ^
src/third_party/sqlite3.c:143172:22: note: Assignment 'bStopAtNull=0', assigned value is 0
    u8 bStopAtNull = 0;          /* Add condition to terminate at NULLs */
                     ^
src/third_party/sqlite3.c:143378:15: note: Condition 'bStopAtNull' is always false
    }else if( bStopAtNull ){
              ^
src/third_party/sqlite3.c:149161:19: style: Condition 'sCur.n==0' is always true [knownConditionTrueFalse]
        if( sCur.n==0 ){
                  ^
src/third_party/sqlite3.c:149140:18: note: Assignment 'sCur.n=0', assigned value is 0
        sCur.n = 0;
                 ^
src/third_party/sqlite3.c:149161:19: note: Condition 'sCur.n==0' is always true
        if( sCur.n==0 ){
                  ^
src/third_party/sqlite3.c:53546:41: style: Expression '(X & 0x4) != 0x1' is always true. [comparisonError]
    assert( (PAGER_JOURNALMODE_MEMORY   & 5)!=1 );
                                        ^
src/third_party/sqlite3.c:53547:41: style: Expression '(X & 0x2) != 0x1' is always true. [comparisonError]
    assert( (PAGER_JOURNALMODE_OFF      & 5)!=1 );
                                        ^
src/third_party/sqlite3.c:53549:41: style: Expression '(X & 0x0) != 0x1' is always true. [comparisonError]
    assert( (PAGER_JOURNALMODE_DELETE   & 5)!=1 );
                                        ^
src/third_party/sqlite3.c:23767:3: error: Common realloc mistake: 'p' nulled but not freed upon failure [memleakOnRealloc]
  p = SQLITE_REALLOC(p, nByte+8 );
  ^
src/third_party/sqlite3.c:38166:3: warning: Either the condition 'pShmNode==0' is redundant or there is possible null pointer dereference: pShmNode. [nullPointerRedundantCheck]
  pShmNode->nRef++;
  ^
src/third_party/sqlite3.c:38089:15: note: Assuming that condition 'pShmNode==0' is not redundant
  if( pShmNode==0 ){
              ^
src/third_party/sqlite3.c:38166:3: note: Null pointer dereference
  pShmNode->nRef++;
  ^
src/third_party/sqlite3.c:38177:23: warning: Either the condition 'pShmNode==0' is redundant or there is possible null pointer dereference: pShmNode. [nullPointerRedundantCheck]
  sqlite3_mutex_enter(pShmNode->pShmMutex);
                      ^
src/third_party/sqlite3.c:38089:15: note: Assuming that condition 'pShmNode==0' is not redundant
  if( pShmNode==0 ){
              ^
src/third_party/sqlite3.c:38177:23: note: Null pointer dereference
  sqlite3_mutex_enter(pShmNode->pShmMutex);
                      ^
src/third_party/sqlite3.c:38178:14: warning: Either the condition 'pShmNode==0' is redundant or there is possible null pointer dereference: pShmNode. [nullPointerRedundantCheck]
  p->pNext = pShmNode->pFirst;
             ^
src/third_party/sqlite3.c:38089:15: note: Assuming that condition 'pShmNode==0' is not redundant
  if( pShmNode==0 ){
              ^
src/third_party/sqlite3.c:38178:14: note: Null pointer dereference
  p->pNext = pShmNode->pFirst;
             ^
src/third_party/sqlite3.c:38179:3: warning: Either the condition 'pShmNode==0' is redundant or there is possible null pointer dereference: pShmNode. [nullPointerRedundantCheck]
  pShmNode->pFirst = p;
  ^
src/third_party/sqlite3.c:38089:15: note: Assuming that condition 'pShmNode==0' is not redundant
  if( pShmNode==0 ){
              ^
src/third_party/sqlite3.c:38179:3: note: Null pointer dereference
  pShmNode->pFirst = p;
  ^
src/third_party/sqlite3.c:38180:23: warning: Either the condition 'pShmNode==0' is redundant or there is possible null pointer dereference: pShmNode. [nullPointerRedundantCheck]
  sqlite3_mutex_leave(pShmNode->pShmMutex);
                      ^
src/third_party/sqlite3.c:38089:15: note: Assuming that condition 'pShmNode==0' is not redundant
  if( pShmNode==0 ){
              ^
src/third_party/sqlite3.c:38180:23: note: Null pointer dereference
  sqlite3_mutex_leave(pShmNode->pShmMutex);
                      ^
src/third_party/sqlite3.c:38231:14: warning: Either the condition 'pDbFd->pShm==0' is redundant or there is possible null pointer dereference: p. [nullPointerRedundantCheck]
  pShmNode = p->pShmNode;
             ^
src/third_party/sqlite3.c:38225:18: note: Assuming that condition 'pDbFd->pShm==0' is not redundant
  if( pDbFd->pShm==0 ){
                 ^
src/third_party/sqlite3.c:38230:12: note: Assignment 'p=pDbFd->pShm', assigned value is 0
  p = pDbFd->pShm;
           ^
src/third_party/sqlite3.c:38231:14: note: Null pointer dereference
  pShmNode = p->pShmNode;
             ^
src/third_party/sqlite3.c:48758:10: warning: Either the condition '!pBt->pHasContent' is redundant or there is possible null pointer dereference: p. [nullPointerRedundantCheck]
  return p->iSize;
         ^
src/third_party/sqlite3.c:65080:9: note: Assuming that condition '!pBt->pHasContent' is not redundant
    if( !pBt->pHasContent ){
        ^
src/third_party/sqlite3.c:65084:51: note: Calling function 'sqlite3BitvecSize', 1st argument 'pBt->pHasContent' value is 0
  if( rc==SQLITE_OK && pgno<=sqlite3BitvecSize(pBt->pHasContent) ){
                                                  ^
src/third_party/sqlite3.c:48758:10: note: Null pointer dereference
  return p->iSize;
         ^
src/third_party/sqlite3.c:129071:4: warning: Either the condition 'ppStmt==0' is redundant or there is possible null pointer dereference: ppStmt. [nullPointerRedundantCheck]
  *ppStmt = 0;
   ^
src/third_party/sqlite3.c:129149:34: note: Assuming that condition 'ppStmt==0' is not redundant
  assert( rc==SQLITE_OK || ppStmt==0 || *ppStmt==0 );  /* VERIFY: F13021 */
                                 ^
src/third_party/sqlite3.c:129148:49: note: Calling function 'sqlite3LockAndPrepare', 6th argument 'ppStmt' value is 0
  rc = sqlite3LockAndPrepare(db,zSql,nBytes,0,0,ppStmt,pzTail);
                                                ^
src/third_party/sqlite3.c:129071:4: note: Null pointer dereference
  *ppStmt = 0;
   ^
src/third_party/sqlite3.c:129217:4: warning: Either the condition 'ppStmt==0' is redundant or there is possible null pointer dereference: ppStmt. [nullPointerRedundantCheck]
  *ppStmt = 0;
   ^
src/third_party/sqlite3.c:129265:34: note: Assuming that condition 'ppStmt==0' is not redundant
  assert( rc==SQLITE_OK || ppStmt==0 || *ppStmt==0 );  /* VERIFY: F13021 */
                                 ^
src/third_party/sqlite3.c:129264:42: note: Calling function 'sqlite3Prepare16', 5th argument 'ppStmt' value is 0
  rc = sqlite3Prepare16(db,zSql,nBytes,0,ppStmt,pzTail);
                                         ^
src/third_party/sqlite3.c:129217:4: note: Null pointer dereference
  *ppStmt = 0;
   ^
src/third_party/sqlite3.c:132498:11: warning: Either the condition 'p->pPrior' is redundant or there is possible null pointer dereference: pPrior. [nullPointerRedundantCheck]
  assert( pPrior->pOrderBy==0 );
          ^
src/third_party/sqlite3.c:132731:8: note: Assuming that condition 'p->pPrior' is not redundant
  if( p->pPrior ){
       ^
src/third_party/sqlite3.c:132497:3: note: Assignment from 'pPrior=p->pPrior'
  pPrior = p->pPrior;
  ^
src/third_party/sqlite3.c:132498:11: note: Null pointer dereference
  assert( pPrior->pOrderBy==0 );
          ^
src/third_party/sqlite3.c:132549:3: warning: Either the condition 'p->pPrior' is redundant or there is possible null pointer dereference: pPrior. [nullPointerRedundantCheck]
  pPrior->pOrderBy = sqlite3ExprListDup(pParse->db, pOrderBy, 0);
  ^
src/third_party/sqlite3.c:132731:8: note: Assuming that condition 'p->pPrior' is not redundant
  if( p->pPrior ){
       ^
src/third_party/sqlite3.c:132497:3: note: Assignment from 'pPrior=p->pPrior'
  pPrior = p->pPrior;
  ^
src/third_party/sqlite3.c:132549:3: note: Null pointer dereference
  pPrior->pOrderBy = sqlite3ExprListDup(pParse->db, pOrderBy, 0);
  ^
src/third_party/sqlite3.c:132576:3: warning: Either the condition 'p->pPrior' is redundant or there is possible null pointer dereference: pPrior. [nullPointerRedundantCheck]
  pPrior->pNext = 0;
  ^
src/third_party/sqlite3.c:132731:8: note: Assuming that condition 'p->pPrior' is not redundant
  if( p->pPrior ){
       ^
src/third_party/sqlite3.c:132497:3: note: Assignment from 'pPrior=p->pPrior'
  pPrior = p->pPrior;
  ^
src/third_party/sqlite3.c:132576:3: note: Null pointer dereference
  pPrior->pNext = 0;
  ^
src/third_party/sqlite3.c:132578:7: warning: Either the condition 'p->pPrior' is redundant or there is possible null pointer dereference: pPrior. [nullPointerRedundantCheck]
  if( pPrior->pPrior==0 ){
      ^
src/third_party/sqlite3.c:132731:8: note: Assuming that condition 'p->pPrior' is not redundant
  if( p->pPrior ){
       ^
src/third_party/sqlite3.c:132497:3: note: Assignment from 'pPrior=p->pPrior'
  pPrior = p->pPrior;
  ^
src/third_party/sqlite3.c:132578:7: note: Null pointer dereference
  if( pPrior->pPrior==0 ){
      ^
src/third_party/sqlite3.c:132795:27: warning: Either the condition 'pSubst->pEList!=0' is redundant or there is possible null pointer dereference: pSubst->pEList. [nullPointerRedundantCheck]
      Expr *pCopy = pSubst->pEList->a[pExpr->iColumn].pExpr;
                          ^
src/third_party/sqlite3.c:132797:29: note: Assuming that condition 'pSubst->pEList!=0' is not redundant
      assert( pSubst->pEList!=0 && pExpr->iColumn<pSubst->pEList->nExpr );
                            ^
src/third_party/sqlite3.c:132795:27: note: Null pointer dereference
      Expr *pCopy = pSubst->pEList->a[pExpr->iColumn].pExpr;
                          ^
src/third_party/sqlite3.c:27611:11: error: Overflow in pointer arithmetic, NULL pointer is subtracted. [nullPointerArithmetic]
  assert( EIGHT_BYTE_ALIGNMENT(p) );  /* IMP: R-11148-40995 */
          ^
src/third_party/sqlite3.c:27603:9: note: Assignment 'p=0', assigned value is 0
    p = 0;
        ^
src/third_party/sqlite3.c:27611:11: note: Null pointer subtraction
  assert( EIGHT_BYTE_ALIGNMENT(p) );  /* IMP: R-11148-40995 */
          ^
src/third_party/sqlite3.c:27816:11: warning: Either the condition 'pNew' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
  assert( EIGHT_BYTE_ALIGNMENT(pNew) ); /* IMP: R-11148-40995 */
          ^
src/third_party/sqlite3.c:27808:9: note: Assuming that condition 'pNew' is not redundant
    if( pNew ){
        ^
src/third_party/sqlite3.c:27816:11: note: Null pointer subtraction
  assert( EIGHT_BYTE_ALIGNMENT(pNew) ); /* IMP: R-11148-40995 */
          ^
src/third_party/sqlite3.c:80020:11: error: Overflow in pointer arithmetic, NULL pointer is subtracted. [nullPointerArithmetic]
  assert( EIGHT_BYTE_ALIGNMENT(pBuf) );
          ^
src/third_party/sqlite3.c:80161:28: note: Calling function 'allocSpace', 2nd argument '0' value is 0
  p->aMem = allocSpace(&x, 0, nMem*sizeof(Mem));
                           ^
src/third_party/sqlite3.c:80013:15: note: Assuming condition is Assuming condition is false
    if( nByte <= p->nFree ){
              ^
src/third_party/sqlite3.c:80020:11: note: Null pointer subtraction
  assert( EIGHT_BYTE_ALIGNMENT(pBuf) );
          ^
src/third_party/sqlite3.c:103149:51: portability:inconclusive: Casting from double * to unsigned char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    sqlite3VdbeAddOp4Dup8(v, OP_Real, 0, iMem, 0, (u8*)&value, P4_REAL);
                                                  ^
src/third_party/sqlite3.c:107985:6: style: Redundant initialization for 'db'. The initialized value is overwritten before it is read. [redundantInitialization]
  db = sqlite3_context_db_handle(context);
     ^
src/third_party/sqlite3.c:107959:15: note: db is initialized
  sqlite3 *db = sqlite3_context_db_handle(context);   /* Database connection */
              ^
src/third_party/sqlite3.c:107985:6: note: db is overwritten
  db = sqlite3_context_db_handle(context);
     ^
src/third_party/sqlite3.c:114432:15: style: Redundant initialization for 'ppFrom'. The initialized value is overwritten before it is read. [redundantInitialization]
    for(ppFrom=&pTab->pIndex; (pThis = *ppFrom)!=0; ppFrom=&pThis->pNext){
              ^
src/third_party/sqlite3.c:114430:20: note: ppFrom is initialized
    Index **ppFrom = &pTab->pIndex;
                   ^
src/third_party/sqlite3.c:114432:15: note: ppFrom is overwritten
    for(ppFrom=&pTab->pIndex; (pThis = *ppFrom)!=0; ppFrom=&pThis->pNext){
              ^
src/third_party/sqlite3.c:31707:34: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    result = sign<0 ? -(double)0 : (double)0;
                                 ^
src/third_party/sqlite3.c:98052:21: style: The comparison 'cnt == 0' is always true. [knownConditionTrueFalse]
  assert( pNC && cnt==0 );
                    ^
src/third_party/sqlite3.c:98001:13: note: 'cnt' is assigned value '0' here.
  int cnt = 0;                      /* Number of matching column names */
            ^
src/third_party/sqlite3.c:98052:21: note: The comparison 'cnt == 0' is always true.
  assert( pNC && cnt==0 );
                    ^
src/third_party/sqlite3.c:132486:18: style: The comparison 'pKeyDup == 0' is always true. [knownConditionTrueFalse]
  assert( pKeyDup==0 ); /* "Managed" code needs this.  Ticket #3382. */
                 ^
src/third_party/sqlite3.c:132478:22: note: 'pKeyDup' is assigned value '0' here.
  KeyInfo *pKeyDup = 0; /* Comparison information for duplicate removal */
                     ^
src/third_party/sqlite3.c:132486:18: note: The comparison 'pKeyDup == 0' is always true.
  assert( pKeyDup==0 ); /* "Managed" code needs this.  Ticket #3382. */
                 ^
src/third_party/sqlite3.c:158502:23: warning: Redundant assignment of 'yymsp[0].minor.yy202' to itself. [selfAssignment]
{yymsp[0].minor.yy202 = yymsp[0].minor.yy202; /*A-overwrites-X*/}
                      ^
src/third_party/sqlite3.c:160404:15: style: The comparison 'nErr == 0' is always true. [knownConditionTrueFalse]
  assert( nErr==0 );
              ^
src/third_party/sqlite3.c:160301:14: note: 'nErr' is assigned value '0' here.
  int nErr = 0;                   /* Number of errors encountered */
             ^
src/third_party/sqlite3.c:160404:15: note: The comparison 'nErr == 0' is always true.
  assert( nErr==0 );
              ^
src/third_party/sqlite3.c:22593:10: style: The scope of the variable 'n' can be reduced. [variableScope]
  int i, n;
         ^
src/third_party/sqlite3.c:29406:11: style: The scope of the variable 'ap' can be reduced. [variableScope]
  va_list ap;                             /* Vararg list */
          ^
src/third_party/sqlite3.c:31139:7: style: The scope of the variable 'c' can be reduced. [variableScope]
  int c;
      ^
src/third_party/sqlite3.c:31476:10: style: The scope of the variable 'x' can be reduced. [variableScope]
  int c, x;
         ^
src/third_party/sqlite3.c:32508:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:33070:15: style: The scope of the variable 'pEntry' can be reduced. [variableScope]
  struct _ht *pEntry;
              ^
src/third_party/sqlite3.c:37429:11: style: The scope of the variable 'nWrite' can be reduced. [variableScope]
      int nWrite = 0;             /* Number of bytes written by seekAndWrite */
          ^
src/third_party/sqlite3.c:40057:13: style: The scope of the variable 'got' can be reduced. [variableScope]
    int fd, got;
            ^
src/third_party/sqlite3.c:48676:18: style: The scope of the variable 'j' can be reduced. [variableScope]
    unsigned int j;
                 ^
src/third_party/sqlite3.c:48677:9: style: The scope of the variable 'rc' can be reduced. [variableScope]
    int rc;
        ^
src/third_party/sqlite3.c:50307:16: style: The scope of the variable 'i' can be reduced. [variableScope]
  unsigned int i;
               ^
src/third_party/sqlite3.c:52775:19: style: The scope of the variable 'p' can be reduced. [variableScope]
  PagerSavepoint *p;
                  ^
src/third_party/sqlite3.c:53268:17: style: The scope of the variable 'aMagic' can be reduced. [variableScope]
  unsigned char aMagic[8];     /* A buffer to hold the magic header */
                ^
src/third_party/sqlite3.c:55043:7: style: The scope of the variable 'iHdrOff' can be reduced. [variableScope]
  i64 iHdrOff;             /* End of first segment of main-journal records */
      ^
src/third_party/sqlite3.c:60159:7: style: The scope of the variable 'nativeCksum' can be reduced. [variableScope]
  int nativeCksum;                /* True for native byte-order checksums */
      ^
src/third_party/sqlite3.c:62741:7: style: The scope of the variable 'cnt' can be reduced. [variableScope]
  int cnt;
      ^
src/third_party/sqlite3.c:64361:10: style: The scope of the variable 'p' can be reduced. [variableScope]
  Btree *p;
         ^
src/third_party/sqlite3.c:64377:10: style: The scope of the variable 'p' can be reduced. [variableScope]
  Btree *p;
         ^
src/third_party/sqlite3.c:65115:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:66032:7: style: The scope of the variable 'x' can be reduced. [variableScope]
  int x;                                     /* Excess size of the slot */
      ^
src/third_party/sqlite3.c:66034:7: style: The scope of the variable 'size' can be reduced. [variableScope]
  int size;                                  /* Size of the free slot */
      ^
src/third_party/sqlite3.c:66195:6: style: The scope of the variable 'nFrag' can be reduced. [variableScope]
  u8 nFrag = 0;                         /* Reduction in fragmentation */
     ^
src/third_party/sqlite3.c:66437:7: style: The scope of the variable 'sz' can be reduced. [variableScope]
  int sz;            /* Size of a cell */
      ^
src/third_party/sqlite3.c:66438:7: style: The scope of the variable 'pc' can be reduced. [variableScope]
  int pc;            /* Address of a freeblock within pPage->aData[] */
      ^
src/third_party/sqlite3.c:68237:8: style: The scope of the variable 'nFreeList' can be reduced. [variableScope]
  Pgno nFreeList;           /* Number of pages still on the free-list */
       ^
src/third_party/sqlite3.c:68238:7: style: The scope of the variable 'rc' can be reduced. [variableScope]
  int rc;
      ^
src/third_party/sqlite3.c:69755:8: style: The scope of the variable 'pgno' can be reduced. [variableScope]
  Pgno pgno;
       ^
src/third_party/sqlite3.c:69780:8: style: The scope of the variable 'pgno' can be reduced. [variableScope]
  Pgno pgno;
       ^
src/third_party/sqlite3.c:69781:7: style: The scope of the variable 'rc' can be reduced. [variableScope]
  int rc = SQLITE_OK;
      ^
src/third_party/sqlite3.c:75632:20: style: The scope of the variable 'pp' can be reduced. [variableScope]
  sqlite3_backup **pp;                 /* Ptr to head of pagers backup list */
                   ^
src/third_party/sqlite3.c:79078:11: style: The scope of the variable 'pOp' can be reduced. [variableScope]
  VdbeOp *pOp;
          ^
src/third_party/sqlite3.c:80680:9: style: The scope of the variable 'rc2' can be reduced. [variableScope]
    int rc2 = SQLITE_OK;
        ^
src/third_party/sqlite3.c:80762:7: style: The scope of the variable 'rc' can be reduced. [variableScope]
  int rc;                         /* Used to store transient return codes */
      ^
src/third_party/sqlite3.c:84369:8: style: The scope of the variable 'pVar' can be reduced. [variableScope]
  Mem *pVar;
       ^
src/third_party/sqlite3.c:85073:7: style: The scope of the variable 'n' can be reduced. [variableScope]
  int n;
      ^
src/third_party/sqlite3.c:93728:12: style: The scope of the variable 'db' can be reduced. [variableScope]
  sqlite3 *db;
           ^
src/third_party/sqlite3.c:94465:7: style: The scope of the variable 'iBuf' can be reduced. [variableScope]
  int iBuf;
      ^
src/third_party/sqlite3.c:94475:18: style: The scope of the variable 'rc' can be reduced. [variableScope]
      int i = 0, rc;
                 ^
src/third_party/sqlite3.c:95080:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:95653:7: style: The scope of the variable 'bFlush' can be reduced. [variableScope]
  int bFlush;                     /* True to flush contents of memory to PMA */
      ^
src/third_party/sqlite3.c:96396:11: style: The scope of the variable 'iTask' can be reduced. [variableScope]
      int iTask;
          ^
src/third_party/sqlite3.c:97615:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:97616:25: style: The scope of the variable 'pItem' can be reduced. [variableScope]
  struct ExprList_item *pItem;
                        ^
src/third_party/sqlite3.c:97661:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:97662:24: style: The scope of the variable 'pItem' can be reduced. [variableScope]
  struct SrcList_item *pItem;
                       ^
src/third_party/sqlite3.c:97698:7: style: The scope of the variable 'rc' can be reduced. [variableScope]
  int rc;
      ^
src/third_party/sqlite3.c:98899:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;             /* Loop counter */
      ^
src/third_party/sqlite3.c:99013:13: style: The scope of the variable 'pEList' can be reduced. [variableScope]
  ExprList *pEList;
            ^
src/third_party/sqlite3.c:99039:18: style: The scope of the variable 'pDup' can be reduced. [variableScope]
      Expr *pE, *pDup;
                 ^
src/third_party/sqlite3.c:104150:11: style: The scope of the variable 'nextCase' can be reduced. [variableScope]
      int nextCase;                     /* GOTO label for next WHEN clause */
          ^
src/third_party/sqlite3.c:104897:7: style: The scope of the variable 'iVar' can be reduced. [variableScope]
  int iVar;
      ^
src/third_party/sqlite3.c:104898:18: style: The scope of the variable 'pL' can be reduced. [variableScope]
  sqlite3_value *pL, *pR = 0;
                 ^
src/third_party/sqlite3.c:105564:31: style: The scope of the variable 'pCol' can be reduced. [variableScope]
          struct AggInfo_col *pCol;
                              ^
src/third_party/sqlite3.c:105701:25: style: The scope of the variable 'pItem' can be reduced. [variableScope]
  struct ExprList_item *pItem;
                        ^
src/third_party/sqlite3.c:105702:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:108964:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:110267:7: style: The scope of the variable 'iSrc' can be reduced. [variableScope]
  int iSrc;             /* Index in pTabList->a[] of table being read */
      ^
src/third_party/sqlite3.c:110972:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:111028:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:114841:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:114842:24: style: The scope of the variable 'pItem' can be reduced. [variableScope]
  struct SrcList_item *pItem;
                       ^
src/third_party/sqlite3.c:115031:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:115246:7: style: The scope of the variable 'j' can be reduced. [variableScope]
  int j;
      ^
src/third_party/sqlite3.c:115433:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:115595:12: style: The scope of the variable 'pColl2' can be reduced. [variableScope]
  CollSeq *pColl2;
           ^
src/third_party/sqlite3.c:115947:7: style: The scope of the variable 'h' can be reduced. [variableScope]
  int h;              /* Hash value */
      ^
src/third_party/sqlite3.c:117321:7: style: The scope of the variable 'n' can be reduced. [variableScope]
  int n;
      ^
src/third_party/sqlite3.c:117507:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  char *z1;
        ^
src/third_party/sqlite3.c:117509:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, n;
      ^
src/third_party/sqlite3.c:117526:9: style: The scope of the variable 'z1' can be reduced. [variableScope]
  char *z1;
        ^
src/third_party/sqlite3.c:117528:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, n;
      ^
src/third_party/sqlite3.c:117782:13: style: The scope of the variable 'bMatch' can be reduced. [variableScope]
        int bMatch;
            ^
src/third_party/sqlite3.c:118127:13: style: The scope of the variable 'j' can be reduced. [variableScope]
      int i,j;
            ^
src/third_party/sqlite3.c:118222:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i, n;
      ^
src/third_party/sqlite3.c:118369:7: style: The scope of the variable 'flags' can be reduced. [variableScope]
  int flags;                        /* 1: trimleft  2: trimright  3: trim */
      ^
src/third_party/sqlite3.c:118370:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;                            /* Loop counter */
      ^
src/third_party/sqlite3.c:118772:15: style: The scope of the variable 'zVal' can be reduced. [variableScope]
  const char *zVal;
              ^
src/third_party/sqlite3.c:118774:15: style: The scope of the variable 'zSep' can be reduced. [variableScope]
  const char *zSep;
              ^
src/third_party/sqlite3.c:118775:7: style: The scope of the variable 'nVal' can be reduced. [variableScope]
  int nVal, nSep;
      ^
src/third_party/sqlite3.c:118775:13: style: The scope of the variable 'nSep' can be reduced. [variableScope]
  int nVal, nSep;
            ^
src/third_party/sqlite3.c:118805:7: style: The scope of the variable 'n' can be reduced. [variableScope]
  int n;
      ^
src/third_party/sqlite3.c:119580:15: style: The scope of the variable 'zColl' can be reduced. [variableScope]
  const char *zColl;
              ^
src/third_party/sqlite3.c:119665:14: style: The scope of the variable 'pWInfo' can be reduced. [variableScope]
  WhereInfo *pWInfo;              /* Context used by sqlite3WhereXXX() */
             ^
src/third_party/sqlite3.c:119727:13: style: The scope of the variable 'pEq' can be reduced. [variableScope]
      Expr *pEq, *pAll = 0;
            ^
src/third_party/sqlite3.c:120685:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;
         ^
src/third_party/sqlite3.c:120946:7: style: The scope of the variable 'pDb' can be reduced. [variableScope]
  Db *pDb;                   /* Database only autoinc table */
      ^
src/third_party/sqlite3.c:120947:7: style: The scope of the variable 'memId' can be reduced. [variableScope]
  int memId;                 /* Register holding max rowid */
      ^
src/third_party/sqlite3.c:126027:26: style: The scope of the variable 'rc' can be reduced. [variableScope]
  int upr, lwr, mid = 0, rc;
                         ^
src/third_party/sqlite3.c:126260:13: style: The scope of the variable 'aOp' can be reduced. [variableScope]
    VdbeOp *aOp;
            ^
src/third_party/sqlite3.c:127012:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/third_party/sqlite3.c:129506:10: style: The scope of the variable 'p' can be reduced. [variableScope]
  Token *p;
         ^
src/third_party/sqlite3.c:129592:7: style: The scope of the variable 'iCol' can be reduced. [variableScope]
  int iCol;            /* Index of column matching zCol */
      ^
src/third_party/sqlite3.c:130668:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:131374:12: style: The scope of the variable 'pColl' can be reduced. [variableScope]
  CollSeq *pColl;
           ^
src/third_party/sqlite3.c:131376:9: style: The scope of the variable 'p' can be reduced. [variableScope]
  Expr *p;
        ^
src/third_party/sqlite3.c:131388:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n, m;
        ^
src/third_party/sqlite3.c:131388:12: style: The scope of the variable 'm' can be reduced. [variableScope]
    int n, m;
           ^
src/third_party/sqlite3.c:131485:9: style: The scope of the variable 'v' can be reduced. [variableScope]
  Vdbe *v = 0;
        ^
src/third_party/sqlite3.c:131486:7: style: The scope of the variable 'iLimit' can be reduced. [variableScope]
  int iLimit = 0;
      ^
src/third_party/sqlite3.c:131487:7: style: The scope of the variable 'iOffset' can be reduced. [variableScope]
  int iOffset;
      ^
src/third_party/sqlite3.c:132450:10: style: The scope of the variable 'j' can be reduced. [variableScope]
  int i, j;             /* Loop counters */
         ^
src/third_party/sqlite3.c:134447:15: style: The scope of the variable 'iDb' can be reduced. [variableScope]
          int iDb;
              ^
src/third_party/sqlite3.c:136764:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:140499:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:142575:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/third_party/sqlite3.c:142931:17: style: The scope of the variable 'pOp' can be reduced. [variableScope]
        VdbeOp *pOp;     /* Opcode to access the value of the IN constraint */
                ^
src/third_party/sqlite3.c:143679:13: style: The scope of the variable 'jmp1' can be reduced. [variableScope]
        int jmp1 = 0;                   /* Address of jump operation */
            ^
src/third_party/sqlite3.c:144672:20: style: The scope of the variable 'pAndTerm' can be reduced. [variableScope]
        WhereTerm *pAndTerm;
                   ^
src/third_party/sqlite3.c:144673:13: style: The scope of the variable 'j' can be reduced. [variableScope]
        int j;
            ^
src/third_party/sqlite3.c:145289:11: style: The scope of the variable 'idxNew' can be reduced. [variableScope]
      int idxNew;
          ^
src/third_party/sqlite3.c:145290:18: style: The scope of the variable 'pNewTerm' can be reduced. [variableScope]
      WhereTerm *pNewTerm;
                 ^
src/third_party/sqlite3.c:145536:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
src/third_party/sqlite3.c:145580:9: style: The scope of the variable 'pColRef' can be reduced. [variableScope]
  Expr *pColRef;
        ^
src/third_party/sqlite3.c:145581:9: style: The scope of the variable 'pTerm' can be reduced. [variableScope]
  Expr *pTerm;
        ^
src/third_party/sqlite3.c:145855:7: style: The scope of the variable 'iCur' can be reduced. [variableScope]
  int iCur;            /* The cursor on the LHS of the term */
      ^
src/third_party/sqlite3.c:145856:7: style: The scope of the variable 'iColumn' can be reduced. [variableScope]
  i16 iColumn;         /* The column on the LHS of the term.  -1 for IPK */
      ^
src/third_party/sqlite3.c:152978:9: style: The scope of the variable 'addr' can be reduced. [variableScope]
    int addr;
        ^
src/third_party/sqlite3.c:154111:9: style: The scope of the variable 'addr' can be reduced. [variableScope]
    int addr = 0;
        ^
src/third_party/sqlite3.c:75953:43: style: Checking if unsigned expression 'acc.mxAlloc' is less than zero. [unsignedLessThanZero]
    assert( acc.zText==zBuf && acc.mxAlloc<=0 );
                                          ^
src/third_party/sqlite3.c:79403:25: style: Unsigned expression 'pColl->enc' can't be negative so it is unnecessary to test it. [unsignedPositive]
      assert( pColl->enc>=0 && pColl->enc<4 );
                        ^
src/third_party/sqlite3.c:88029:29: style: Unsigned expression 'p2' can't be negative so it is unnecessary to test it. [unsignedPositive]
      assert( pC->nHdrParsed<=p2 );         /* Conditional skipped */
                            ^
src/third_party/sqlite3.c:87991:22: note: Assignment 'pC->nHdrParsed=0', assigned value is 0
    pC->nHdrParsed = 0;
                     ^
src/third_party/sqlite3.c:88029:29: note: Unsigned positive
      assert( pC->nHdrParsed<=p2 );         /* Conditional skipped */
                            ^
src/third_party/sqlite3.c:143186:19: style: Checking if unsigned expression 'pLoop->u.btree.nBtm' is less than zero. [unsignedLessThanZero]
      nExtraReg = MAX(nExtraReg, pLoop->u.btree.nBtm);
                  ^
src/third_party/sqlite3.c:143167:21: note: Assignment 'nExtraReg=0', assigned value is 0
    int nExtraReg = 0;           /* Number of extra registers needed */
                    ^
src/third_party/sqlite3.c:143186:19: note: Unsigned less than zero
      nExtraReg = MAX(nExtraReg, pLoop->u.btree.nBtm);
                  ^
src/third_party/sqlite3.c:21523:8: style:inconclusive: Function 'sqlite3_db_status' argument 3 names different: declaration 'pCur' definition 'pCurrent'. [funcArgNamesDifferent]
  int *pCurrent,        /* Write current value here */
       ^
src/third_party/sqlite3.c:9084:57: note: Function 'sqlite3_db_status' argument 3 names different: declaration 'pCur' definition 'pCurrent'.
SQLITE_API int sqlite3_db_status(sqlite3*, int op, int *pCur, int *pHiwtr, int resetFlg);
                                                        ^
src/third_party/sqlite3.c:21523:8: note: Function 'sqlite3_db_status' argument 3 names different: declaration 'pCur' definition 'pCurrent'.
  int *pCurrent,        /* Write current value here */
       ^
src/third_party/sqlite3.c:21524:8: style:inconclusive: Function 'sqlite3_db_status' argument 4 names different: declaration 'pHiwtr' definition 'pHighwater'. [funcArgNamesDifferent]
  int *pHighwater,      /* Write high-water mark here */
       ^
src/third_party/sqlite3.c:9084:68: note: Function 'sqlite3_db_status' argument 4 names different: declaration 'pHiwtr' definition 'pHighwater'.
SQLITE_API int sqlite3_db_status(sqlite3*, int op, int *pCur, int *pHiwtr, int resetFlg);
                                                                   ^
src/third_party/sqlite3.c:21524:8: note: Function 'sqlite3_db_status' argument 4 names different: declaration 'pHiwtr' definition 'pHighwater'.
  int *pHighwater,      /* Write high-water mark here */
       ^
src/third_party/sqlite3.c:21525:7: style:inconclusive: Function 'sqlite3_db_status' argument 5 names different: declaration 'resetFlg' definition 'resetFlag'. [funcArgNamesDifferent]
  int resetFlag         /* Reset high-water mark if true */
      ^
src/third_party/sqlite3.c:9084:80: note: Function 'sqlite3_db_status' argument 5 names different: declaration 'resetFlg' definition 'resetFlag'.
SQLITE_API int sqlite3_db_status(sqlite3*, int op, int *pCur, int *pHiwtr, int resetFlg);
                                                                               ^
src/third_party/sqlite3.c:21525:7: note: Function 'sqlite3_db_status' argument 5 names different: declaration 'resetFlg' definition 'resetFlag'.
  int resetFlag         /* Reset high-water mark if true */
      ^
src/third_party/sqlite3.c:23312:54: style:inconclusive: Function 'sqlite3_vfs_find' argument 1 names different: declaration 'zVfsName' definition 'zVfs'. [funcArgNamesDifferent]
SQLITE_API sqlite3_vfs *sqlite3_vfs_find(const char *zVfs){
                                                     ^
src/third_party/sqlite3.c:8383:54: note: Function 'sqlite3_vfs_find' argument 1 names different: declaration 'zVfsName' definition 'zVfs'.
SQLITE_API sqlite3_vfs *sqlite3_vfs_find(const char *zVfsName);
                                                     ^
src/third_party/sqlite3.c:23312:54: note: Function 'sqlite3_vfs_find' argument 1 names different: declaration 'zVfsName' definition 'zVfs'.
SQLITE_API sqlite3_vfs *sqlite3_vfs_find(const char *zVfs){
                                                     ^
src/third_party/sqlite3.c:27412:66: style:inconclusive: Function 'sqlite3_soft_heap_limit64' argument 1 names different: declaration 'N' definition 'n'. [funcArgNamesDifferent]
SQLITE_API sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 n){
                                                                 ^
src/third_party/sqlite3.c:7493:66: note: Function 'sqlite3_soft_heap_limit64' argument 1 names different: declaration 'N' definition 'n'.
SQLITE_API sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 N);
                                                                 ^
src/third_party/sqlite3.c:27412:66: note: Function 'sqlite3_soft_heap_limit64' argument 1 names different: declaration 'N' definition 'n'.
SQLITE_API sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 n){
                                                                 ^
src/third_party/sqlite3.c:27437:45: style:inconclusive: Function 'sqlite3_soft_heap_limit' argument 1 names different: declaration 'N' definition 'n'. [funcArgNamesDifferent]
SQLITE_API void sqlite3_soft_heap_limit(int n){
                                            ^
src/third_party/sqlite3.c:7505:63: note: Function 'sqlite3_soft_heap_limit' argument 1 names different: declaration 'N' definition 'n'.
SQLITE_API SQLITE_DEPRECATED void sqlite3_soft_heap_limit(int N);
                                                              ^
src/third_party/sqlite3.c:27437:45: note: Function 'sqlite3_soft_heap_limit' argument 1 names different: declaration 'N' definition 'n'.
SQLITE_API void sqlite3_soft_heap_limit(int n){
                                            ^
src/third_party/sqlite3.c:27454:66: style:inconclusive: Function 'sqlite3_hard_heap_limit64' argument 1 names different: declaration 'N' definition 'n'. [funcArgNamesDifferent]
SQLITE_API sqlite3_int64 sqlite3_hard_heap_limit64(sqlite3_int64 n){
                                                                 ^
src/third_party/sqlite3.c:7494:66: note: Function 'sqlite3_hard_heap_limit64' argument 1 names different: declaration 'N' definition 'n'.
SQLITE_API sqlite3_int64 sqlite3_hard_heap_limit64(sqlite3_int64 N);
                                                                 ^
src/third_party/sqlite3.c:27454:66: note: Function 'sqlite3_hard_heap_limit64' argument 1 names different: declaration 'N' definition 'n'.
SQLITE_API sqlite3_int64 sqlite3_hard_heap_limit64(sqlite3_int64 n){
                                                                 ^
src/third_party/sqlite3.c:28349:15: style:inconclusive: Function 'sqlite3_str_vappendf' argument 2 names different: declaration 'zFormat' definition 'fmt'. [funcArgNamesDifferent]
  const char *fmt,           /* Format string */
              ^
src/third_party/sqlite3.c:8909:64: note: Function 'sqlite3_str_vappendf' argument 2 names different: declaration 'zFormat' definition 'fmt'.
SQLITE_API void sqlite3_str_vappendf(sqlite3_str*, const char *zFormat, va_list);
                                                               ^
src/third_party/sqlite3.c:28349:15: note: Function 'sqlite3_str_vappendf' argument 2 names different: declaration 'zFormat' definition 'fmt'.
  const char *fmt,           /* Format string */
              ^
src/third_party/sqlite3.c:29101:68: style:inconclusive: Function 'sqlite3_str_appendchar' argument 3 names different: declaration 'C' definition 'c'. [funcArgNamesDifferent]
SQLITE_API void sqlite3_str_appendchar(sqlite3_str *p, int N, char c){
                                                                   ^
src/third_party/sqlite3.c:8912:66: note: Function 'sqlite3_str_appendchar' argument 3 names different: declaration 'C' definition 'c'.
SQLITE_API void sqlite3_str_appendchar(sqlite3_str*, int N, char C);
                                                                 ^
src/third_party/sqlite3.c:29101:68: note: Function 'sqlite3_str_appendchar' argument 3 names different: declaration 'C' definition 'c'.
SQLITE_API void sqlite3_str_appendchar(sqlite3_str *p, int N, char c){
                                                                   ^
src/third_party/sqlite3.c:29129:64: style:inconclusive: Function 'sqlite3_str_append' argument 2 names different: declaration 'zIn' definition 'z'. [funcArgNamesDifferent]
SQLITE_API void sqlite3_str_append(sqlite3_str *p, const char *z, int N){
                                                               ^
src/third_party/sqlite3.c:8910:62: note: Function 'sqlite3_str_append' argument 2 names different: declaration 'zIn' definition 'z'.
SQLITE_API void sqlite3_str_append(sqlite3_str*, const char *zIn, int N);
                                                             ^
src/third_party/sqlite3.c:29129:64: note: Function 'sqlite3_str_append' argument 2 names different: declaration 'zIn' definition 'z'.
SQLITE_API void sqlite3_str_append(sqlite3_str *p, const char *z, int N){
                                                               ^
src/third_party/sqlite3.c:29146:67: style:inconclusive: Function 'sqlite3_str_appendall' argument 2 names different: declaration 'zIn' definition 'z'. [funcArgNamesDifferent]
SQLITE_API void sqlite3_str_appendall(sqlite3_str *p, const char *z){
                                                                  ^
src/third_party/sqlite3.c:8911:65: note: Function 'sqlite3_str_appendall' argument 2 names different: declaration 'zIn' definition 'z'.
SQLITE_API void sqlite3_str_appendall(sqlite3_str*, const char *zIn);
                                                                ^
src/third_party/sqlite3.c:29146:67: note: Function 'sqlite3_str_appendall' argument 2 names different: declaration 'zIn' definition 'z'.
SQLITE_API void sqlite3_str_appendall(sqlite3_str *p, const char *z){
                                                                  ^
src/third_party/sqlite3.c:30267:49: style:inconclusive: Function 'sqlite3_randomness' argument 2 names different: declaration 'P' definition 'pBuf'. [funcArgNamesDifferent]
SQLITE_API void sqlite3_randomness(int N, void *pBuf){
                                                ^
src/third_party/sqlite3.c:3988:49: note: Function 'sqlite3_randomness' argument 2 names different: declaration 'P' definition 'pBuf'.
SQLITE_API void sqlite3_randomness(int N, void *P);
                                                ^
src/third_party/sqlite3.c:30267:49: note: Function 'sqlite3_randomness' argument 2 names different: declaration 'P' definition 'pBuf'.
SQLITE_API void sqlite3_randomness(int N, void *pBuf){
                                                ^
src/third_party/sqlite3.c:31063:51: style:inconclusive: Function 'sqlite3Utf8CharLen' argument 1 names different: declaration 'pData' definition 'zIn'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *zIn, int nByte){
                                                  ^
src/third_party/sqlite3.c:19842:51: note: Function 'sqlite3Utf8CharLen' argument 1 names different: declaration 'pData' definition 'zIn'.
SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *pData, int nByte);
                                                  ^
src/third_party/sqlite3.c:31063:51: note: Function 'sqlite3Utf8CharLen' argument 1 names different: declaration 'pData' definition 'zIn'.
SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *zIn, int nByte){
                                                  ^
src/third_party/sqlite3.c:31138:52: style:inconclusive: Function 'sqlite3Utf16ByteLen' argument 1 names different: declaration 'pData' definition 'zIn'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *zIn, int nChar){
                                                   ^
src/third_party/sqlite3.c:19840:52: note: Function 'sqlite3Utf16ByteLen' argument 1 names different: declaration 'pData' definition 'zIn'.
SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *pData, int nChar);
                                                   ^
src/third_party/sqlite3.c:31138:52: note: Function 'sqlite3Utf16ByteLen' argument 1 names different: declaration 'pData' definition 'zIn'.
SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *zIn, int nChar){
                                                   ^
src/third_party/sqlite3.c:33120:74: style:inconclusive: Function 'sqlite3HashInsert' argument 3 names different: declaration 'pData' definition 'data'. [funcArgNamesDifferent]
SQLITE_PRIVATE void *sqlite3HashInsert(Hash *pH, const char *pKey, void *data){
                                                                         ^
src/third_party/sqlite3.c:13910:71: note: Function 'sqlite3HashInsert' argument 3 names different: declaration 'pData' definition 'data'.
SQLITE_PRIVATE void *sqlite3HashInsert(Hash*, const char *pKey, void *pData);
                                                                      ^
src/third_party/sqlite3.c:33120:74: note: Function 'sqlite3HashInsert' argument 3 names different: declaration 'pData' definition 'data'.
SQLITE_PRIVATE void *sqlite3HashInsert(Hash *pH, const char *pKey, void *data){
                                                                         ^
src/third_party/sqlite3.c:49178:11: style:inconclusive: Function 'sqlite3PcacheOpen' argument 6 names different: declaration 'pToInit' definition 'p'. [funcArgNamesDifferent]
  PCache *p                    /* Preallocated space for the PCache */
          ^
src/third_party/sqlite3.c:16099:11: note: Function 'sqlite3PcacheOpen' argument 6 names different: declaration 'pToInit' definition 'p'.
  PCache *pToInit                /* Preallocated space for the PCache */
          ^
src/third_party/sqlite3.c:49178:11: note: Function 'sqlite3PcacheOpen' argument 6 names different: declaration 'pToInit' definition 'p'.
  PCache *p                    /* Preallocated space for the PCache */
          ^
src/third_party/sqlite3.c:49521:64: style:inconclusive: Function 'sqlite3PcacheTruncate' argument 2 names different: declaration 'x' definition 'pgno'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){
                                                               ^
src/third_party/sqlite3.c:16128:57: note: Function 'sqlite3PcacheTruncate' argument 2 names different: declaration 'x' definition 'pgno'.
SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache*, Pgno x);
                                                        ^
src/third_party/sqlite3.c:49521:64: note: Function 'sqlite3PcacheTruncate' argument 2 names different: declaration 'x' definition 'pgno'.
SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){
                                                               ^
src/third_party/sqlite3.c:57352:7: style:inconclusive: Function 'sqlite3PagerGet' argument 4 names different: declaration 'clrFlag' definition 'flags'. [funcArgNamesDifferent]
  int flags           /* PAGER_GET_XXX flags */
      ^
src/third_party/sqlite3.c:14896:83: note: Function 'sqlite3PagerGet' argument 4 names different: declaration 'clrFlag' definition 'flags'.
SQLITE_PRIVATE int sqlite3PagerGet(Pager *pPager, Pgno pgno, DbPage **ppPage, int clrFlag);
                                                                                  ^
src/third_party/sqlite3.c:57352:7: note: Function 'sqlite3PagerGet' argument 4 names different: declaration 'clrFlag' definition 'flags'.
  int flags           /* PAGER_GET_XXX flags */
      ^
src/third_party/sqlite3.c:58562:65: style:inconclusive: Function 'sqlite3PagerOpenSavepoint' argument 2 names different: declaration 'n' definition 'nSavepoint'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){
                                                                ^
src/third_party/sqlite3.c:14919:65: note: Function 'sqlite3PagerOpenSavepoint' argument 2 names different: declaration 'n' definition 'nSavepoint'.
SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int n);
                                                                ^
src/third_party/sqlite3.c:58562:65: note: Function 'sqlite3PagerOpenSavepoint' argument 2 names different: declaration 'n' definition 'nSavepoint'.
SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){
                                                                ^
src/third_party/sqlite3.c:59206:8: style:inconclusive: Function 'sqlite3PagerOpenWal' argument 2 names different: declaration 'pisOpen' definition 'pbOpen'. [funcArgNamesDifferent]
  int *pbOpen                     /* OUT: Set to true if call is a no-op */
       ^
src/third_party/sqlite3.c:14927:62: note: Function 'sqlite3PagerOpenWal' argument 2 names different: declaration 'pisOpen' definition 'pbOpen'.
SQLITE_PRIVATE   int sqlite3PagerOpenWal(Pager *pPager, int *pisOpen);
                                                             ^
src/third_party/sqlite3.c:59206:8: note: Function 'sqlite3PagerOpenWal' argument 2 names different: declaration 'pisOpen' definition 'pbOpen'.
  int *pbOpen                     /* OUT: Set to true if call is a no-op */
       ^
src/third_party/sqlite3.c:67340:58: style:inconclusive: Function 'sqlite3BtreeSetPageSize' argument 2 names different: declaration 'nPagesize' definition 'pageSize'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){
                                                         ^
src/third_party/sqlite3.c:15069:58: note: Function 'sqlite3BtreeSetPageSize' argument 2 names different: declaration 'nPagesize' definition 'pageSize'.
SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int nPagesize, int nReserve, int eFix);
                                                         ^
src/third_party/sqlite3.c:67340:58: note: Function 'sqlite3BtreeSetPageSize' argument 2 names different: declaration 'nPagesize' definition 'pageSize'.
SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){
                                                         ^
src/third_party/sqlite3.c:67340:86: style:inconclusive: Function 'sqlite3BtreeSetPageSize' argument 4 names different: declaration 'eFix' definition 'iFix'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){
                                                                                     ^
src/third_party/sqlite3.c:15069:87: note: Function 'sqlite3BtreeSetPageSize' argument 4 names different: declaration 'eFix' definition 'iFix'.
SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int nPagesize, int nReserve, int eFix);
                                                                                      ^
src/third_party/sqlite3.c:67340:86: note: Function 'sqlite3BtreeSetPageSize' argument 4 names different: declaration 'eFix' definition 'iFix'.
SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){
                                                                                     ^
src/third_party/sqlite3.c:68938:13: style:inconclusive: Function 'sqlite3BtreeCursor' argument 5 names different: declaration 'pCursor' definition 'pCur'. [funcArgNamesDifferent]
  BtCursor *pCur                              /* Write new cursor here */
            ^
src/third_party/sqlite3.c:15228:13: note: Function 'sqlite3BtreeCursor' argument 5 names different: declaration 'pCursor' definition 'pCur'.
  BtCursor *pCursor                    /* Space to write cursor structure */
            ^
src/third_party/sqlite3.c:68938:13: note: Function 'sqlite3BtreeCursor' argument 5 names different: declaration 'pCursor' definition 'pCur'.
  BtCursor *pCur                              /* Write new cursor here */
            ^
src/third_party/sqlite3.c:69896:19: style:inconclusive: Function 'sqlite3BtreeMovetoUnpacked' argument 2 names different: declaration 'pUnKey' definition 'pIdxKey'. [funcArgNamesDifferent]
  UnpackedRecord *pIdxKey, /* Unpacked index key */
                  ^
src/third_party/sqlite3.c:15241:19: note: Function 'sqlite3BtreeMovetoUnpacked' argument 2 names different: declaration 'pUnKey' definition 'pIdxKey'.
  UnpackedRecord *pUnKey,
                  ^
src/third_party/sqlite3.c:69896:19: note: Function 'sqlite3BtreeMovetoUnpacked' argument 2 names different: declaration 'pUnKey' definition 'pIdxKey'.
  UnpackedRecord *pIdxKey, /* Unpacked index key */
                  ^
src/third_party/sqlite3.c:69898:7: style:inconclusive: Function 'sqlite3BtreeMovetoUnpacked' argument 4 names different: declaration 'bias' definition 'biasRight'. [funcArgNamesDifferent]
  int biasRight,           /* If true, bias the search to the high end */
      ^
src/third_party/sqlite3.c:15243:7: note: Function 'sqlite3BtreeMovetoUnpacked' argument 4 names different: declaration 'bias' definition 'biasRight'.
  int bias,
      ^
src/third_party/sqlite3.c:69898:7: note: Function 'sqlite3BtreeMovetoUnpacked' argument 4 names different: declaration 'bias' definition 'biasRight'.
  int biasRight,           /* If true, bias the search to the high end */
      ^
src/third_party/sqlite3.c:73117:23: style:inconclusive: Function 'sqlite3BtreeInsert' argument 2 names different: declaration 'pPayload' definition 'pX'. [funcArgNamesDifferent]
  const BtreePayload *pX,        /* Content of the row to be inserted */
                      ^
src/third_party/sqlite3.c:15298:70: note: Function 'sqlite3BtreeInsert' argument 2 names different: declaration 'pPayload' definition 'pX'.
SQLITE_PRIVATE int sqlite3BtreeInsert(BtCursor*, const BtreePayload *pPayload,
                                                                     ^
src/third_party/sqlite3.c:73117:23: note: Function 'sqlite3BtreeInsert' argument 2 names different: declaration 'pPayload' definition 'pX'.
  const BtreePayload *pX,        /* Content of the row to be inserted */
                      ^
src/third_party/sqlite3.c:73970:48: style:inconclusive: Function 'sqlite3BtreeGetMeta' argument 1 names different: declaration 'pBtree' definition 'p'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){
                                               ^
src/third_party/sqlite3.c:15119:48: note: Function 'sqlite3BtreeGetMeta' argument 1 names different: declaration 'pBtree' definition 'p'.
SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *pBtree, int idx, u32 *pValue);
                                               ^
src/third_party/sqlite3.c:73970:48: note: Function 'sqlite3BtreeGetMeta' argument 1 names different: declaration 'pBtree' definition 'p'.
SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){
                                               ^
src/third_party/sqlite3.c:73970:65: style:inconclusive: Function 'sqlite3BtreeGetMeta' argument 3 names different: declaration 'pValue' definition 'pMeta'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){
                                                                ^
src/third_party/sqlite3.c:15119:70: note: Function 'sqlite3BtreeGetMeta' argument 3 names different: declaration 'pValue' definition 'pMeta'.
SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *pBtree, int idx, u32 *pValue);
                                                                     ^
src/third_party/sqlite3.c:73970:65: note: Function 'sqlite3BtreeGetMeta' argument 3 names different: declaration 'pValue' definition 'pMeta'.
SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){
                                                                ^
src/third_party/sqlite3.c:74000:66: style:inconclusive: Function 'sqlite3BtreeUpdateMeta' argument 3 names different: declaration 'value' definition 'iMeta'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){
                                                                 ^
src/third_party/sqlite3.c:15120:64: note: Function 'sqlite3BtreeUpdateMeta' argument 3 names different: declaration 'value' definition 'iMeta'.
SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree*, int idx, u32 value);
                                                               ^
src/third_party/sqlite3.c:74000:66: note: Function 'sqlite3BtreeUpdateMeta' argument 3 names different: declaration 'value' definition 'iMeta'.
SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){
                                                                 ^
src/third_party/sqlite3.c:74879:52: style:inconclusive: Function 'sqlite3BtreeSchemaLocked' argument 1 names different: declaration 'pBtree' definition 'p'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *p){
                                                   ^
src/third_party/sqlite3.c:15089:52: note: Function 'sqlite3BtreeSchemaLocked' argument 1 names different: declaration 'pBtree' definition 'p'.
SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *pBtree);
                                                   ^
src/third_party/sqlite3.c:74879:52: note: Function 'sqlite3BtreeSchemaLocked' argument 1 names different: declaration 'pBtree' definition 'p'.
SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *p){
                                                   ^
src/third_party/sqlite3.c:74896:49: style:inconclusive: Function 'sqlite3BtreeLockTable' argument 1 names different: declaration 'pBtree' definition 'p'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){
                                                ^
src/third_party/sqlite3.c:15091:49: note: Function 'sqlite3BtreeLockTable' argument 1 names different: declaration 'pBtree' definition 'p'.
SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *pBtree, int iTab, u8 isWriteLock);
                                                ^
src/third_party/sqlite3.c:74896:49: note: Function 'sqlite3BtreeLockTable' argument 1 names different: declaration 'pBtree' definition 'p'.
SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){
                                                ^
src/third_party/sqlite3.c:74985:50: style:inconclusive: Function 'sqlite3BtreeSetVersion' argument 1 names different: declaration 'pBt' definition 'pBtree'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){
                                                 ^
src/third_party/sqlite3.c:15326:50: note: Function 'sqlite3BtreeSetVersion' argument 1 names different: declaration 'pBt' definition 'pBtree'.
SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBt, int iVersion);
                                                 ^
src/third_party/sqlite3.c:74985:50: note: Function 'sqlite3BtreeSetVersion' argument 1 names different: declaration 'pBt' definition 'pBtree'.
SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){
                                                 ^
src/third_party/sqlite3.c:75027:50: style:inconclusive: Function 'sqlite3BtreeIsReadonly' argument 1 names different: declaration 'pBt' definition 'p'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3BtreeIsReadonly(Btree *p){
                                                 ^
src/third_party/sqlite3.c:15328:50: note: Function 'sqlite3BtreeIsReadonly' argument 1 names different: declaration 'pBt' definition 'p'.
SQLITE_PRIVATE int sqlite3BtreeIsReadonly(Btree *pBt);
                                                 ^
src/third_party/sqlite3.c:75027:50: note: Function 'sqlite3BtreeIsReadonly' argument 1 names different: declaration 'pBt' definition 'p'.
SQLITE_PRIVATE int sqlite3BtreeIsReadonly(Btree *p){
                                                 ^
src/third_party/sqlite3.c:75198:12: style:inconclusive: Function 'sqlite3_backup_init' argument 1 names different: declaration 'pDest' definition 'pDestDb'. [funcArgNamesDifferent]
  sqlite3* pDestDb,                     /* Database to write to */
           ^
src/third_party/sqlite3.c:9728:12: note: Function 'sqlite3_backup_init' argument 1 names different: declaration 'pDest' definition 'pDestDb'.
  sqlite3 *pDest,                        /* Destination database handle */
           ^
src/third_party/sqlite3.c:75198:12: note: Function 'sqlite3_backup_init' argument 1 names different: declaration 'pDest' definition 'pDestDb'.
  sqlite3* pDestDb,                     /* Database to write to */
           ^
src/third_party/sqlite3.c:75199:15: style:inconclusive: Function 'sqlite3_backup_init' argument 2 names different: declaration 'zDestName' definition 'zDestDb'. [funcArgNamesDifferent]
  const char *zDestDb,                  /* Name of database within pDestDb */
              ^
src/third_party/sqlite3.c:9729:15: note: Function 'sqlite3_backup_init' argument 2 names different: declaration 'zDestName' definition 'zDestDb'.
  const char *zDestName,                 /* Destination database name */
              ^
src/third_party/sqlite3.c:75199:15: note: Function 'sqlite3_backup_init' argument 2 names different: declaration 'zDestName' definition 'zDestDb'.
  const char *zDestDb,                  /* Name of database within pDestDb */
              ^
src/third_party/sqlite3.c:75200:12: style:inconclusive: Function 'sqlite3_backup_init' argument 3 names different: declaration 'pSource' definition 'pSrcDb'. [funcArgNamesDifferent]
  sqlite3* pSrcDb,                      /* Database connection to read from */
           ^
src/third_party/sqlite3.c:9730:12: note: Function 'sqlite3_backup_init' argument 3 names different: declaration 'pSource' definition 'pSrcDb'.
  sqlite3 *pSource,                      /* Source database handle */
           ^
src/third_party/sqlite3.c:75200:12: note: Function 'sqlite3_backup_init' argument 3 names different: declaration 'pSource' definition 'pSrcDb'.
  sqlite3* pSrcDb,                      /* Database connection to read from */
           ^
src/third_party/sqlite3.c:75201:15: style:inconclusive: Function 'sqlite3_backup_init' argument 4 names different: declaration 'zSourceName' definition 'zSrcDb'. [funcArgNamesDifferent]
  const char *zSrcDb                    /* Name of database within pSrcDb */
              ^
src/third_party/sqlite3.c:9731:15: note: Function 'sqlite3_backup_init' argument 4 names different: declaration 'zSourceName' definition 'zSrcDb'.
  const char *zSourceName                /* Source database name */
              ^
src/third_party/sqlite3.c:75201:15: note: Function 'sqlite3_backup_init' argument 4 names different: declaration 'zSourceName' definition 'zSrcDb'.
  const char *zSrcDb                    /* Name of database within pSrcDb */
              ^
src/third_party/sqlite3.c:76061:77: style:inconclusive: Function 'sqlite3VdbeMemGrow' argument 3 names different: declaration 'preserve' definition 'bPreserve'. [funcArgNamesDifferent]
SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemGrow(Mem *pMem, int n, int bPreserve){
                                                                            ^
src/third_party/sqlite3.c:21261:61: note: Function 'sqlite3VdbeMemGrow' argument 3 names different: declaration 'preserve' definition 'bPreserve'.
SQLITE_PRIVATE int sqlite3VdbeMemGrow(Mem *pMem, int n, int preserve);
                                                            ^
src/third_party/sqlite3.c:76061:77: note: Function 'sqlite3VdbeMemGrow' argument 3 names different: declaration 'preserve' definition 'bPreserve'.
SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemGrow(Mem *pMem, int n, int bPreserve){
                                                                            ^
src/third_party/sqlite3.c:76122:64: style:inconclusive: Function 'sqlite3VdbeMemClearAndResize' argument 2 names different: declaration 'n' definition 'szNew'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){
                                                               ^
src/third_party/sqlite3.c:21262:64: note: Function 'sqlite3VdbeMemClearAndResize' argument 2 names different: declaration 'n' definition 'szNew'.
SQLITE_PRIVATE int sqlite3VdbeMemClearAndResize(Mem *pMem, int n);
                                                               ^
src/third_party/sqlite3.c:76122:64: note: Function 'sqlite3VdbeMemClearAndResize' argument 2 names different: declaration 'n' definition 'szNew'.
SQLITE_PRIVATE int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){
                                                               ^
src/third_party/sqlite3.c:78785:64: style:inconclusive: Function 'sqlite3VdbeChangeP1' argument 3 names different: declaration 'P1' definition 'val'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe *p, int addr, int val){
                                                               ^
src/third_party/sqlite3.c:15846:62: note: Function 'sqlite3VdbeChangeP1' argument 3 names different: declaration 'P1' definition 'val'.
SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe*, int addr, int P1);
                                                             ^
src/third_party/sqlite3.c:78785:64: note: Function 'sqlite3VdbeChangeP1' argument 3 names different: declaration 'P1' definition 'val'.
SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe *p, int addr, int val){
                                                               ^
src/third_party/sqlite3.c:78788:64: style:inconclusive: Function 'sqlite3VdbeChangeP2' argument 3 names different: declaration 'P2' definition 'val'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe *p, int addr, int val){
                                                               ^
src/third_party/sqlite3.c:15847:62: note: Function 'sqlite3VdbeChangeP2' argument 3 names different: declaration 'P2' definition 'val'.
SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe*, int addr, int P2);
                                                             ^
src/third_party/sqlite3.c:78788:64: note: Function 'sqlite3VdbeChangeP2' argument 3 names different: declaration 'P2' definition 'val'.
SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe *p, int addr, int val){
                                                               ^
src/third_party/sqlite3.c:78791:64: style:inconclusive: Function 'sqlite3VdbeChangeP3' argument 3 names different: declaration 'P3' definition 'val'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe *p, int addr, int val){
                                                               ^
src/third_party/sqlite3.c:15848:62: note: Function 'sqlite3VdbeChangeP3' argument 3 names different: declaration 'P3' definition 'val'.
SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe*, int addr, int P3);
                                                             ^
src/third_party/sqlite3.c:78791:64: note: Function 'sqlite3VdbeChangeP3' argument 3 names different: declaration 'P3' definition 'val'.
SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe *p, int addr, int val){
                                                               ^
src/third_party/sqlite3.c:78794:54: style:inconclusive: Function 'sqlite3VdbeChangeP5' argument 2 names different: declaration 'P5' definition 'p5'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe *p, u16 p5){
                                                     ^
src/third_party/sqlite3.c:15849:52: note: Function 'sqlite3VdbeChangeP5' argument 2 names different: declaration 'P5' definition 'p5'.
SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe*, u16 P5);
                                                   ^
src/third_party/sqlite3.c:78794:54: note: Function 'sqlite3VdbeChangeP5' argument 2 names different: declaration 'P5' definition 'p5'.
SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe *p, u16 p5){
                                                     ^
src/third_party/sqlite3.c:79034:81: style:inconclusive: Function 'sqlite3VdbeChangeP4' argument 4 names different: declaration 'N' definition 'n'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){
                                                                                ^
src/third_party/sqlite3.c:15859:79: note: Function 'sqlite3VdbeChangeP4' argument 4 names different: declaration 'N' definition 'n'.
SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe*, int addr, const char *zP4, int N);
                                                                              ^
src/third_party/sqlite3.c:79034:81: note: Function 'sqlite3VdbeChangeP4' argument 4 names different: declaration 'N' definition 'n'.
SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){
                                                                                ^
src/third_party/sqlite3.c:79077:65: style:inconclusive: Function 'sqlite3VdbeAppendP4' argument 3 names different: declaration 'p4type' definition 'n'. [funcArgNamesDifferent]
SQLITE_PRIVATE void sqlite3VdbeAppendP4(Vdbe *p, void *pP4, int n){
                                                                ^
src/third_party/sqlite3.c:15860:63: note: Function 'sqlite3VdbeAppendP4' argument 3 names different: declaration 'p4type' definition 'n'.
SQLITE_PRIVATE void sqlite3VdbeAppendP4(Vdbe*, void *pP4, int p4type);
                                                              ^
src/third_party/sqlite3.c:79077:65: note: Function 'sqlite3VdbeAppendP4' argument 3 names different: declaration 'p4type' definition 'n'.
SQLITE_PRIVATE void sqlite3VdbeAppendP4(Vdbe *p, void *pP4, int n){
                                                                ^
src/third_party/sqlite3.c:83469:17: style:inconclusive: Function 'sqlite3_result_text64' argument 5 names different: declaration 'encoding' definition 'enc'. [funcArgNamesDifferent]
  unsigned char enc
                ^
src/third_party/sqlite3.c:6833:58: note: Function 'sqlite3_result_text64' argument 5 names different: declaration 'encoding' definition 'enc'.
                           void(*)(void*), unsigned char encoding);
                                                         ^
src/third_party/sqlite3.c:83469:17: note: Function 'sqlite3_result_text64' argument 5 names different: declaration 'encoding' definition 'enc'.
  unsigned char enc
                ^
src/third_party/sqlite3.c:83873:68: style:inconclusive: Function 'sqlite3_aggregate_context' argument 2 names different: declaration 'nBytes' definition 'nByte'. [funcArgNamesDifferent]
SQLITE_API void *sqlite3_aggregate_context(sqlite3_context *p, int nByte){
                                                                   ^
src/third_party/sqlite3.c:6565:66: note: Function 'sqlite3_aggregate_context' argument 2 names different: declaration 'nBytes' definition 'nByte'.
SQLITE_API void *sqlite3_aggregate_context(sqlite3_context*, int nBytes);
                                                                 ^
src/third_party/sqlite3.c:83873:68: note: Function 'sqlite3_aggregate_context' argument 2 names different: declaration 'nBytes' definition 'nByte'.
SQLITE_API void *sqlite3_aggregate_context(sqlite3_context *p, int nByte){
                                                                   ^
src/third_party/sqlite3.c:83894:65: style:inconclusive: Function 'sqlite3_get_auxdata' argument 2 names different: declaration 'N' definition 'iArg'. [funcArgNamesDifferent]
SQLITE_API void *sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){
                                                                ^
src/third_party/sqlite3.c:6651:60: note: Function 'sqlite3_get_auxdata' argument 2 names different: declaration 'N' definition 'iArg'.
SQLITE_API void *sqlite3_get_auxdata(sqlite3_context*, int N);
                                                           ^
src/third_party/sqlite3.c:83894:65: note: Function 'sqlite3_get_auxdata' argument 2 names different: declaration 'N' definition 'iArg'.
SQLITE_API void *sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){
                                                                ^
src/third_party/sqlite3.c:83924:7: style:inconclusive: Function 'sqlite3_set_auxdata' argument 2 names different: declaration 'N' definition 'iArg'. [funcArgNamesDifferent]
  int iArg,
      ^
src/third_party/sqlite3.c:6652:59: note: Function 'sqlite3_set_auxdata' argument 2 names different: declaration 'N' definition 'iArg'.
SQLITE_API void sqlite3_set_auxdata(sqlite3_context*, int N, void*, void (*)(void*));
                                                          ^
src/third_party/sqlite3.c:83924:7: note: Function 'sqlite3_set_auxdata' argument 2 names different: declaration 'N' definition 'iArg'.
  int iArg,
      ^
src/third_party/sqlite3.c:84097:69: style:inconclusive: Function 'sqlite3_column_blob' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API const void *sqlite3_column_blob(sqlite3_stmt *pStmt, int i){
                                                                    ^
src/third_party/sqlite3.c:6011:63: note: Function 'sqlite3_column_blob' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API const void *sqlite3_column_blob(sqlite3_stmt*, int iCol);
                                                              ^
src/third_party/sqlite3.c:84097:69: note: Function 'sqlite3_column_blob' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API const void *sqlite3_column_blob(sqlite3_stmt *pStmt, int i){
                                                                    ^
src/third_party/sqlite3.c:84107:62: style:inconclusive: Function 'sqlite3_column_bytes' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){
                                                             ^
src/third_party/sqlite3.c:6018:56: note: Function 'sqlite3_column_bytes' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_bytes(sqlite3_stmt*, int iCol);
                                                       ^
src/third_party/sqlite3.c:84107:62: note: Function 'sqlite3_column_bytes' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){
                                                             ^
src/third_party/sqlite3.c:84112:64: style:inconclusive: Function 'sqlite3_column_bytes16' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){
                                                               ^
src/third_party/sqlite3.c:6019:58: note: Function 'sqlite3_column_bytes16' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_bytes16(sqlite3_stmt*, int iCol);
                                                         ^
src/third_party/sqlite3.c:84112:64: note: Function 'sqlite3_column_bytes16' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){
                                                               ^
src/third_party/sqlite3.c:84117:66: style:inconclusive: Function 'sqlite3_column_double' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API double sqlite3_column_double(sqlite3_stmt *pStmt, int i){
                                                                 ^
src/third_party/sqlite3.c:6012:60: note: Function 'sqlite3_column_double' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API double sqlite3_column_double(sqlite3_stmt*, int iCol);
                                                           ^
src/third_party/sqlite3.c:84117:66: note: Function 'sqlite3_column_double' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API double sqlite3_column_double(sqlite3_stmt *pStmt, int i){
                                                                 ^
src/third_party/sqlite3.c:84122:60: style:inconclusive: Function 'sqlite3_column_int' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_column_int(sqlite3_stmt *pStmt, int i){
                                                           ^
src/third_party/sqlite3.c:6013:54: note: Function 'sqlite3_column_int' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_int(sqlite3_stmt*, int iCol);
                                                     ^
src/third_party/sqlite3.c:84122:60: note: Function 'sqlite3_column_int' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_int(sqlite3_stmt *pStmt, int i){
                                                           ^
src/third_party/sqlite3.c:84127:71: style:inconclusive: Function 'sqlite3_column_int64' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API sqlite_int64 sqlite3_column_int64(sqlite3_stmt *pStmt, int i){
                                                                      ^
src/third_party/sqlite3.c:6014:66: note: Function 'sqlite3_column_int64' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API sqlite3_int64 sqlite3_column_int64(sqlite3_stmt*, int iCol);
                                                                 ^
src/third_party/sqlite3.c:84127:71: note: Function 'sqlite3_column_int64' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API sqlite_int64 sqlite3_column_int64(sqlite3_stmt *pStmt, int i){
                                                                      ^
src/third_party/sqlite3.c:84132:78: style:inconclusive: Function 'sqlite3_column_text' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API const unsigned char *sqlite3_column_text(sqlite3_stmt *pStmt, int i){
                                                                             ^
src/third_party/sqlite3.c:6015:72: note: Function 'sqlite3_column_text' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API const unsigned char *sqlite3_column_text(sqlite3_stmt*, int iCol);
                                                                       ^
src/third_party/sqlite3.c:84132:78: note: Function 'sqlite3_column_text' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API const unsigned char *sqlite3_column_text(sqlite3_stmt *pStmt, int i){
                                                                             ^
src/third_party/sqlite3.c:84137:73: style:inconclusive: Function 'sqlite3_column_value' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API sqlite3_value *sqlite3_column_value(sqlite3_stmt *pStmt, int i){
                                                                        ^
src/third_party/sqlite3.c:6017:67: note: Function 'sqlite3_column_value' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API sqlite3_value *sqlite3_column_value(sqlite3_stmt*, int iCol);
                                                                  ^
src/third_party/sqlite3.c:84137:73: note: Function 'sqlite3_column_value' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API sqlite3_value *sqlite3_column_value(sqlite3_stmt *pStmt, int i){
                                                                        ^
src/third_party/sqlite3.c:84147:71: style:inconclusive: Function 'sqlite3_column_text16' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API const void *sqlite3_column_text16(sqlite3_stmt *pStmt, int i){
                                                                      ^
src/third_party/sqlite3.c:6016:65: note: Function 'sqlite3_column_text16' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API const void *sqlite3_column_text16(sqlite3_stmt*, int iCol);
                                                                ^
src/third_party/sqlite3.c:84147:71: note: Function 'sqlite3_column_text16' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API const void *sqlite3_column_text16(sqlite3_stmt *pStmt, int i){
                                                                      ^
src/third_party/sqlite3.c:84153:61: style:inconclusive: Function 'sqlite3_column_type' argument 2 names different: declaration 'iCol' definition 'i'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_column_type(sqlite3_stmt *pStmt, int i){
                                                            ^
src/third_party/sqlite3.c:6020:55: note: Function 'sqlite3_column_type' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_type(sqlite3_stmt*, int iCol);
                                                      ^
src/third_party/sqlite3.c:84153:61: note: Function 'sqlite3_column_type' argument 2 names different: declaration 'iCol' definition 'i'.
SQLITE_API int sqlite3_column_type(sqlite3_stmt *pStmt, int i){
                                                            ^
src/third_party/sqlite3.c:84400:7: style:inconclusive: Function 'sqlite3_bind_blob' argument 4 names different: declaration 'n' definition 'nData'. [funcArgNamesDifferent]
  int nData,
      ^
src/third_party/sqlite3.c:5444:71: note: Function 'sqlite3_bind_blob' argument 4 names different: declaration 'n' definition 'nData'.
SQLITE_API int sqlite3_bind_blob(sqlite3_stmt*, int, const void*, int n, void(*)(void*));
                                                                      ^
src/third_party/sqlite3.c:84400:7: note: Function 'sqlite3_bind_blob' argument 4 names different: declaration 'n' definition 'nData'.
  int nData,
      ^
src/third_party/sqlite3.c:84487:17: style:inconclusive: Function 'sqlite3_bind_text64' argument 6 names different: declaration 'encoding' definition 'enc'. [funcArgNamesDifferent]
  unsigned char enc
                ^
src/third_party/sqlite3.c:5454:56: note: Function 'sqlite3_bind_text64' argument 6 names different: declaration 'encoding' definition 'enc'.
                         void(*)(void*), unsigned char encoding);
                                                       ^
src/third_party/sqlite3.c:84487:17: note: Function 'sqlite3_bind_text64' argument 6 names different: declaration 'encoding' definition 'enc'.
  unsigned char enc
                ^
src/third_party/sqlite3.c:84707:69: style:inconclusive: Function 'sqlite3_stmt_status' argument 3 names different: declaration 'resetFlg' definition 'resetFlag'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){
                                                                    ^
src/third_party/sqlite3.c:9237:62: note: Function 'sqlite3_stmt_status' argument 3 names different: declaration 'resetFlg' definition 'resetFlag'.
SQLITE_API int sqlite3_stmt_status(sqlite3_stmt*, int op,int resetFlg);
                                                             ^
src/third_party/sqlite3.c:84707:69: note: Function 'sqlite3_stmt_status' argument 3 names different: declaration 'resetFlg' definition 'resetFlag'.
SQLITE_API int sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){
                                                                    ^
src/third_party/sqlite3.c:93498:7: style:inconclusive: Function 'sqlite3_blob_open' argument 6 names different: declaration 'flags' definition 'wrFlag'. [funcArgNamesDifferent]
  int wrFlag,             /* True -> read/write access, false -> read-only */
      ^
src/third_party/sqlite3.c:8215:7: note: Function 'sqlite3_blob_open' argument 6 names different: declaration 'flags' definition 'wrFlag'.
  int flags,
      ^
src/third_party/sqlite3.c:93498:7: note: Function 'sqlite3_blob_open' argument 6 names different: declaration 'flags' definition 'wrFlag'.
  int wrFlag,             /* True -> read/write access, false -> read-only */
      ^
src/third_party/sqlite3.c:93819:61: style:inconclusive: Function 'sqlite3_blob_read' argument 2 names different: declaration 'Z' definition 'z'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){
                                                            ^
src/third_party/sqlite3.c:8310:56: note: Function 'sqlite3_blob_read' argument 2 names different: declaration 'Z' definition 'z'.
SQLITE_API int sqlite3_blob_read(sqlite3_blob *, void *Z, int N, int iOffset);
                                                       ^
src/third_party/sqlite3.c:93819:61: note: Function 'sqlite3_blob_read' argument 2 names different: declaration 'Z' definition 'z'.
SQLITE_API int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){
                                                            ^
src/third_party/sqlite3.c:93819:68: style:inconclusive: Function 'sqlite3_blob_read' argument 3 names different: declaration 'N' definition 'n'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){
                                                                   ^
src/third_party/sqlite3.c:8310:63: note: Function 'sqlite3_blob_read' argument 3 names different: declaration 'N' definition 'n'.
SQLITE_API int sqlite3_blob_read(sqlite3_blob *, void *Z, int N, int iOffset);
                                                              ^
src/third_party/sqlite3.c:93819:68: note: Function 'sqlite3_blob_read' argument 3 names different: declaration 'N' definition 'n'.
SQLITE_API int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){
                                                                   ^
src/third_party/sqlite3.c:103353:56: style:inconclusive: Function 'exprCodeVector' argument 3 names different: declaration 'piToFree' definition 'piFreeable'. [funcArgNamesDifferent]
static int exprCodeVector(Parse *pParse, Expr *p, int *piFreeable){
                                                       ^
src/third_party/sqlite3.c:99733:56: note: Function 'exprCodeVector' argument 3 names different: declaration 'piToFree' definition 'piFreeable'.
static int exprCodeVector(Parse *pParse, Expr *p, int *piToFree);
                                                       ^
src/third_party/sqlite3.c:103353:56: note: Function 'exprCodeVector' argument 3 names different: declaration 'piToFree' definition 'piFreeable'.
static int exprCodeVector(Parse *pParse, Expr *p, int *piFreeable){
                                                       ^
src/third_party/sqlite3.c:109424:57: style:inconclusive: Function 'sqlite3AnalysisLoad' argument 2 names different: declaration 'iDB' definition 'iDb'. [funcArgNamesDifferent]
SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3 *db, int iDb){
                                                        ^
src/third_party/sqlite3.c:20003:53: note: Function 'sqlite3AnalysisLoad' argument 2 names different: declaration 'iDB' definition 'iDb'.
SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3*,int iDB);
                                                    ^
src/third_party/sqlite3.c:109424:57: note: Function 'sqlite3AnalysisLoad' argument 2 names different: declaration 'iDB' definition 'iDb'.
SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3 *db, int iDb){
                                                        ^
src/third_party/sqlite3.c:110191:9: style:inconclusive: Function 'sqlite3_set_authorizer' argument 3 names different: declaration 'pUserData' definition 'pArg'. [funcArgNamesDifferent]
  void *pArg
        ^
src/third_party/sqlite3.c:4082:9: note: Function 'sqlite3_set_authorizer' argument 3 names different: declaration 'pUserData' definition 'pArg'.
  void *pUserData
        ^
src/third_party/sqlite3.c:110191:9: note: Function 'sqlite3_set_authorizer' argument 3 names different: declaration 'pUserData' definition 'pArg'.
  void *pArg
        ^
src/third_party/sqlite3.c:117862:44: style:inconclusive: Function 'sqlite3_strglob' argument 1 names different: declaration 'zGlob' definition 'zGlobPattern'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_strglob(const char *zGlobPattern, const char *zString){
                                           ^
src/third_party/sqlite3.c:9886:44: note: Function 'sqlite3_strglob' argument 1 names different: declaration 'zGlob' definition 'zGlobPattern'.
SQLITE_API int sqlite3_strglob(const char *zGlob, const char *zStr);
                                           ^
src/third_party/sqlite3.c:117862:44: note: Function 'sqlite3_strglob' argument 1 names different: declaration 'zGlob' definition 'zGlobPattern'.
SQLITE_API int sqlite3_strglob(const char *zGlobPattern, const char *zString){
                                           ^
src/third_party/sqlite3.c:117862:70: style:inconclusive: Function 'sqlite3_strglob' argument 2 names different: declaration 'zStr' definition 'zString'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_strglob(const char *zGlobPattern, const char *zString){
                                                                     ^
src/third_party/sqlite3.c:9886:63: note: Function 'sqlite3_strglob' argument 2 names different: declaration 'zStr' definition 'zString'.
SQLITE_API int sqlite3_strglob(const char *zGlob, const char *zStr);
                                                              ^
src/third_party/sqlite3.c:117862:70: note: Function 'sqlite3_strglob' argument 2 names different: declaration 'zStr' definition 'zString'.
SQLITE_API int sqlite3_strglob(const char *zGlobPattern, const char *zString){
                                                                     ^
src/third_party/sqlite3.c:117870:44: style:inconclusive: Function 'sqlite3_strlike' argument 1 names different: declaration 'zGlob' definition 'zPattern'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){
                                           ^
src/third_party/sqlite3.c:9909:44: note: Function 'sqlite3_strlike' argument 1 names different: declaration 'zGlob' definition 'zPattern'.
SQLITE_API int sqlite3_strlike(const char *zGlob, const char *zStr, unsigned int cEsc);
                                           ^
src/third_party/sqlite3.c:117870:44: note: Function 'sqlite3_strlike' argument 1 names different: declaration 'zGlob' definition 'zPattern'.
SQLITE_API int sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){
                                           ^
src/third_party/sqlite3.c:117870:85: style:inconclusive: Function 'sqlite3_strlike' argument 3 names different: declaration 'cEsc' definition 'esc'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){
                                                                                    ^
src/third_party/sqlite3.c:9909:82: note: Function 'sqlite3_strlike' argument 3 names different: declaration 'cEsc' definition 'esc'.
SQLITE_API int sqlite3_strlike(const char *zGlob, const char *zStr, unsigned int cEsc);
                                                                                 ^
src/third_party/sqlite3.c:117870:85: note: Function 'sqlite3_strlike' argument 3 names different: declaration 'cEsc' definition 'esc'.
SQLITE_API int sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){
                                                                                    ^
src/third_party/sqlite3.c:123463:15: style:inconclusive: Function 'sqlite3_exec' argument 2 names different: declaration 'sql' definition 'zSql'. [funcArgNamesDifferent]
  const char *zSql,           /* The SQL to be executed */
              ^
src/third_party/sqlite3.c:1452:15: note: Function 'sqlite3_exec' argument 2 names different: declaration 'sql' definition 'zSql'.
  const char *sql,                           /* SQL to be evaluated */
              ^
src/third_party/sqlite3.c:123463:15: note: Function 'sqlite3_exec' argument 2 names different: declaration 'sql' definition 'zSql'.
  const char *zSql,           /* The SQL to be executed */
              ^
src/third_party/sqlite3.c:123466:10: style:inconclusive: Function 'sqlite3_exec' argument 5 names different: declaration 'errmsg' definition 'pzErrMsg'. [funcArgNamesDifferent]
  char **pzErrMsg             /* Write error messages here */
         ^
src/third_party/sqlite3.c:1455:10: note: Function 'sqlite3_exec' argument 5 names different: declaration 'errmsg' definition 'pzErrMsg'.
  char **errmsg                              /* Error msg written here */
         ^
src/third_party/sqlite3.c:123466:10: note: Function 'sqlite3_exec' argument 5 names different: declaration 'errmsg' definition 'pzErrMsg'.
  char **pzErrMsg             /* Write error messages here */
         ^
src/third_party/sqlite3.c:129143:7: style:inconclusive: Function 'sqlite3_prepare' argument 3 names different: declaration 'nByte' definition 'nBytes'. [funcArgNamesDifferent]
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:5099:7: note: Function 'sqlite3_prepare' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nByte,              /* Maximum length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129143:7: note: Function 'sqlite3_prepare' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129155:7: style:inconclusive: Function 'sqlite3_prepare_v2' argument 3 names different: declaration 'nByte' definition 'nBytes'. [funcArgNamesDifferent]
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:5106:7: note: Function 'sqlite3_prepare_v2' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nByte,              /* Maximum length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129155:7: note: Function 'sqlite3_prepare_v2' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129173:7: style:inconclusive: Function 'sqlite3_prepare_v3' argument 3 names different: declaration 'nByte' definition 'nBytes'. [funcArgNamesDifferent]
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:5113:7: note: Function 'sqlite3_prepare_v3' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nByte,              /* Maximum length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129173:7: note: Function 'sqlite3_prepare_v3' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129259:7: style:inconclusive: Function 'sqlite3_prepare16' argument 3 names different: declaration 'nByte' definition 'nBytes'. [funcArgNamesDifferent]
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:5121:7: note: Function 'sqlite3_prepare16' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nByte,              /* Maximum length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129259:7: note: Function 'sqlite3_prepare16' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129271:7: style:inconclusive: Function 'sqlite3_prepare16_v2' argument 3 names different: declaration 'nByte' definition 'nBytes'. [funcArgNamesDifferent]
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:5128:7: note: Function 'sqlite3_prepare16_v2' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nByte,              /* Maximum length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129271:7: note: Function 'sqlite3_prepare16_v2' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129283:7: style:inconclusive: Function 'sqlite3_prepare16_v3' argument 3 names different: declaration 'nByte' definition 'nBytes'. [funcArgNamesDifferent]
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:5135:7: note: Function 'sqlite3_prepare16_v3' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nByte,              /* Maximum length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:129283:7: note: Function 'sqlite3_prepare16_v3' argument 3 names different: declaration 'nByte' definition 'nBytes'.
  int nBytes,               /* Length of zSql in bytes. */
      ^
src/third_party/sqlite3.c:136311:10: style:inconclusive: Function 'sqlite3_get_table' argument 6 names different: declaration 'pzErrmsg' definition 'pzErrMsg'. [funcArgNamesDifferent]
  char **pzErrMsg             /* Write error messages here */
         ^
src/third_party/sqlite3.c:3810:10: note: Function 'sqlite3_get_table' argument 6 names different: declaration 'pzErrmsg' definition 'pzErrMsg'.
  char **pzErrmsg       /* Error msg written here */
         ^
src/third_party/sqlite3.c:136311:10: note: Function 'sqlite3_get_table' argument 6 names different: declaration 'pzErrmsg' definition 'pzErrMsg'.
  char **pzErrMsg             /* Write error messages here */
         ^
src/third_party/sqlite3.c:136375:10: style:inconclusive: Function 'sqlite3_free_table' argument 1 names different: declaration 'result' definition 'azResult'. [funcArgNamesDifferent]
  char **azResult            /* Result returned from sqlite3_get_table() */
         ^
src/third_party/sqlite3.c:3812:43: note: Function 'sqlite3_free_table' argument 1 names different: declaration 'result' definition 'azResult'.
SQLITE_API void sqlite3_free_table(char **result);
                                          ^
src/third_party/sqlite3.c:136375:10: note: Function 'sqlite3_free_table' argument 1 names different: declaration 'result' definition 'azResult'.
  char **azResult            /* Result returned from sqlite3_get_table() */
         ^
src/third_party/sqlite3.c:138762:9: style:inconclusive: Function 'updateVirtualTable' argument 5 names different: declaration 'pRowidExpr' definition 'pRowid'. [funcArgNamesDifferent]
  Expr *pRowid,        /* Expression used to recompute the rowid */
        ^
src/third_party/sqlite3.c:137625:9: note: Function 'updateVirtualTable' argument 5 names different: declaration 'pRowidExpr' definition 'pRowid'.
  Expr *pRowidExpr,    /* Expression used to recompute the rowid */
        ^
src/third_party/sqlite3.c:138762:9: note: Function 'updateVirtualTable' argument 5 names different: declaration 'pRowidExpr' definition 'pRowid'.
  Expr *pRowid,        /* Expression used to recompute the rowid */
        ^
src/third_party/sqlite3.c:139688:25: style:inconclusive: Function 'sqlite3_create_module' argument 3 names different: declaration 'p' definition 'pModule'. [funcArgNamesDifferent]
  const sqlite3_module *pModule,  /* The definition of the module */
                        ^
src/third_party/sqlite3.c:7998:25: note: Function 'sqlite3_create_module' argument 3 names different: declaration 'p' definition 'pModule'.
  const sqlite3_module *p,   /* Methods for the module */
                        ^
src/third_party/sqlite3.c:139688:25: note: Function 'sqlite3_create_module' argument 3 names different: declaration 'p' definition 'pModule'.
  const sqlite3_module *pModule,  /* The definition of the module */
                        ^
src/third_party/sqlite3.c:139689:9: style:inconclusive: Function 'sqlite3_create_module' argument 4 names different: declaration 'pClientData' definition 'pAux'. [funcArgNamesDifferent]
  void *pAux                      /* Context pointer for xCreate/xConnect */
        ^
src/third_party/sqlite3.c:7999:9: note: Function 'sqlite3_create_module' argument 4 names different: declaration 'pClientData' definition 'pAux'.
  void *pClientData          /* Client data for xCreate/xConnect */
        ^
src/third_party/sqlite3.c:139689:9: note: Function 'sqlite3_create_module' argument 4 names different: declaration 'pClientData' definition 'pAux'.
  void *pAux                      /* Context pointer for xCreate/xConnect */
        ^
src/third_party/sqlite3.c:139703:25: style:inconclusive: Function 'sqlite3_create_module_v2' argument 3 names different: declaration 'p' definition 'pModule'. [funcArgNamesDifferent]
  const sqlite3_module *pModule,  /* The definition of the module */
                        ^
src/third_party/sqlite3.c:8004:25: note: Function 'sqlite3_create_module_v2' argument 3 names different: declaration 'p' definition 'pModule'.
  const sqlite3_module *p,   /* Methods for the module */
                        ^
src/third_party/sqlite3.c:139703:25: note: Function 'sqlite3_create_module_v2' argument 3 names different: declaration 'p' definition 'pModule'.
  const sqlite3_module *pModule,  /* The definition of the module */
                        ^
src/third_party/sqlite3.c:139704:9: style:inconclusive: Function 'sqlite3_create_module_v2' argument 4 names different: declaration 'pClientData' definition 'pAux'. [funcArgNamesDifferent]
  void *pAux,                     /* Context pointer for xCreate/xConnect */
        ^
src/third_party/sqlite3.c:8005:9: note: Function 'sqlite3_create_module_v2' argument 4 names different: declaration 'pClientData' definition 'pAux'.
  void *pClientData,         /* Client data for xCreate/xConnect */
        ^
src/third_party/sqlite3.c:139704:9: note: Function 'sqlite3_create_module_v2' argument 4 names different: declaration 'pClientData' definition 'pAux'.
  void *pAux,                     /* Context pointer for xCreate/xConnect */
        ^
src/third_party/sqlite3.c:139717:63: style:inconclusive: Function 'sqlite3_drop_modules' argument 2 names different: declaration 'azKeep' definition 'azNames'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_drop_modules(sqlite3 *db, const char** azNames){
                                                              ^
src/third_party/sqlite3.c:8023:16: note: Function 'sqlite3_drop_modules' argument 2 names different: declaration 'azKeep' definition 'azNames'.
  const char **azKeep         /* Except, do not remove the ones named here */
               ^
src/third_party/sqlite3.c:139717:63: note: Function 'sqlite3_drop_modules' argument 2 names different: declaration 'azKeep' definition 'azNames'.
SQLITE_API int sqlite3_drop_modules(sqlite3 *db, const char** azNames){
                                                              ^
src/third_party/sqlite3.c:140372:62: style:inconclusive: Function 'sqlite3_declare_vtab' argument 2 names different: declaration 'zSQL' definition 'zCreateTable'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){
                                                             ^
src/third_party/sqlite3.c:8081:59: note: Function 'sqlite3_declare_vtab' argument 2 names different: declaration 'zSQL' definition 'zCreateTable'.
SQLITE_API int sqlite3_declare_vtab(sqlite3*, const char *zSQL);
                                                          ^
src/third_party/sqlite3.c:140372:62: note: Function 'sqlite3_declare_vtab' argument 2 names different: declaration 'zSQL' definition 'zCreateTable'.
SQLITE_API int sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){
                                                             ^
src/third_party/sqlite3.c:160716:45: style:inconclusive: Function 'sqlite3_complete' argument 1 names different: declaration 'sql' definition 'zSql'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_complete(const char *zSql){
                                            ^
src/third_party/sqlite3.c:3644:45: note: Function 'sqlite3_complete' argument 1 names different: declaration 'sql' definition 'zSql'.
SQLITE_API int sqlite3_complete(const char *sql);
                                            ^
src/third_party/sqlite3.c:160716:45: note: Function 'sqlite3_complete' argument 1 names different: declaration 'sql' definition 'zSql'.
SQLITE_API int sqlite3_complete(const char *zSql){
                                            ^
src/third_party/sqlite3.c:160881:47: style:inconclusive: Function 'sqlite3_complete16' argument 1 names different: declaration 'sql' definition 'zSql'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_complete16(const void *zSql){
                                              ^
src/third_party/sqlite3.c:3645:47: note: Function 'sqlite3_complete16' argument 1 names different: declaration 'sql' definition 'zSql'.
SQLITE_API int sqlite3_complete16(const void *sql);
                                              ^
src/third_party/sqlite3.c:160881:47: note: Function 'sqlite3_complete16' argument 1 names different: declaration 'sql' definition 'zSql'.
SQLITE_API int sqlite3_complete16(const void *zSql){
                                              ^
src/third_party/sqlite3.c:162944:15: style:inconclusive: Function 'sqlite3_create_function' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'. [funcArgNamesDifferent]
  const char *zFunc,
              ^
src/third_party/sqlite3.c:6204:15: note: Function 'sqlite3_create_function' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'.
  const char *zFunctionName,
              ^
src/third_party/sqlite3.c:162944:15: note: Function 'sqlite3_create_function' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'.
  const char *zFunc,
              ^
src/third_party/sqlite3.c:162946:7: style:inconclusive: Function 'sqlite3_create_function' argument 4 names different: declaration 'eTextRep' definition 'enc'. [funcArgNamesDifferent]
  int enc,
      ^
src/third_party/sqlite3.c:6206:7: note: Function 'sqlite3_create_function' argument 4 names different: declaration 'eTextRep' definition 'enc'.
  int eTextRep,
      ^
src/third_party/sqlite3.c:162946:7: note: Function 'sqlite3_create_function' argument 4 names different: declaration 'eTextRep' definition 'enc'.
  int enc,
      ^
src/third_party/sqlite3.c:162947:9: style:inconclusive: Function 'sqlite3_create_function' argument 5 names different: declaration 'pApp' definition 'p'. [funcArgNamesDifferent]
  void *p,
        ^
src/third_party/sqlite3.c:6207:9: note: Function 'sqlite3_create_function' argument 5 names different: declaration 'pApp' definition 'p'.
  void *pApp,
        ^
src/third_party/sqlite3.c:162947:9: note: Function 'sqlite3_create_function' argument 5 names different: declaration 'pApp' definition 'p'.
  void *p,
        ^
src/third_party/sqlite3.c:162957:15: style:inconclusive: Function 'sqlite3_create_function_v2' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'. [funcArgNamesDifferent]
  const char *zFunc,
              ^
src/third_party/sqlite3.c:6224:15: note: Function 'sqlite3_create_function_v2' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'.
  const char *zFunctionName,
              ^
src/third_party/sqlite3.c:162957:15: note: Function 'sqlite3_create_function_v2' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'.
  const char *zFunc,
              ^
src/third_party/sqlite3.c:162959:7: style:inconclusive: Function 'sqlite3_create_function_v2' argument 4 names different: declaration 'eTextRep' definition 'enc'. [funcArgNamesDifferent]
  int enc,
      ^
src/third_party/sqlite3.c:6226:7: note: Function 'sqlite3_create_function_v2' argument 4 names different: declaration 'eTextRep' definition 'enc'.
  int eTextRep,
      ^
src/third_party/sqlite3.c:162959:7: note: Function 'sqlite3_create_function_v2' argument 4 names different: declaration 'eTextRep' definition 'enc'.
  int enc,
      ^
src/third_party/sqlite3.c:162960:9: style:inconclusive: Function 'sqlite3_create_function_v2' argument 5 names different: declaration 'pApp' definition 'p'. [funcArgNamesDifferent]
  void *p,
        ^
src/third_party/sqlite3.c:6227:9: note: Function 'sqlite3_create_function_v2' argument 5 names different: declaration 'pApp' definition 'p'.
  void *pApp,
        ^
src/third_party/sqlite3.c:162960:9: note: Function 'sqlite3_create_function_v2' argument 5 names different: declaration 'pApp' definition 'p'.
  void *p,
        ^
src/third_party/sqlite3.c:162971:15: style:inconclusive: Function 'sqlite3_create_window_function' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'. [funcArgNamesDifferent]
  const char *zFunc,
              ^
src/third_party/sqlite3.c:6235:15: note: Function 'sqlite3_create_window_function' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'.
  const char *zFunctionName,
              ^
src/third_party/sqlite3.c:162971:15: note: Function 'sqlite3_create_window_function' argument 2 names different: declaration 'zFunctionName' definition 'zFunc'.
  const char *zFunc,
              ^
src/third_party/sqlite3.c:162973:7: style:inconclusive: Function 'sqlite3_create_window_function' argument 4 names different: declaration 'eTextRep' definition 'enc'. [funcArgNamesDifferent]
  int enc,
      ^
src/third_party/sqlite3.c:6237:7: note: Function 'sqlite3_create_window_function' argument 4 names different: declaration 'eTextRep' definition 'enc'.
  int eTextRep,
      ^
src/third_party/sqlite3.c:162973:7: note: Function 'sqlite3_create_window_function' argument 4 names different: declaration 'eTextRep' definition 'enc'.
  int enc,
      ^
src/third_party/sqlite3.c:162974:9: style:inconclusive: Function 'sqlite3_create_window_function' argument 5 names different: declaration 'pApp' definition 'p'. [funcArgNamesDifferent]
  void *p,
        ^
src/third_party/sqlite3.c:6238:9: note: Function 'sqlite3_create_window_function' argument 5 names different: declaration 'pApp' definition 'p'.
  void *pApp,
        ^
src/third_party/sqlite3.c:162974:9: note: Function 'sqlite3_create_window_function' argument 5 names different: declaration 'pApp' definition 'p'.
  void *p,
        ^
src/third_party/sqlite3.c:162991:9: style:inconclusive: Function 'sqlite3_create_function16' argument 5 names different: declaration 'pApp' definition 'p'. [funcArgNamesDifferent]
  void *p,
        ^
src/third_party/sqlite3.c:6217:9: note: Function 'sqlite3_create_function16' argument 5 names different: declaration 'pApp' definition 'p'.
  void *pApp,
        ^
src/third_party/sqlite3.c:162991:9: note: Function 'sqlite3_create_function16' argument 5 names different: declaration 'pApp' definition 'p'.
  void *p,
        ^
src/third_party/sqlite3.c:163050:15: style:inconclusive: Function 'sqlite3_overload_function' argument 2 names different: declaration 'zFuncName' definition 'zName'. [funcArgNamesDifferent]
  const char *zName,
              ^
src/third_party/sqlite3.c:8100:64: note: Function 'sqlite3_overload_function' argument 2 names different: declaration 'zFuncName' definition 'zName'.
SQLITE_API int sqlite3_overload_function(sqlite3*, const char *zFuncName, int nArg);
                                                               ^
src/third_party/sqlite3.c:163050:15: note: Function 'sqlite3_overload_function' argument 2 names different: declaration 'zFuncName' definition 'zName'.
  const char *zName,
              ^
src/third_party/sqlite3.c:163104:12: style:inconclusive: Function 'sqlite3_trace_v2' argument 2 names different: declaration 'uMask' definition 'mTrace'. [funcArgNamesDifferent]
  unsigned mTrace,                           /* Mask of events to be traced */
           ^
src/third_party/sqlite3.c:4280:12: note: Function 'sqlite3_trace_v2' argument 2 names different: declaration 'uMask' definition 'mTrace'.
  unsigned uMask,
           ^
src/third_party/sqlite3.c:163104:12: note: Function 'sqlite3_trace_v2' argument 2 names different: declaration 'uMask' definition 'mTrace'.
  unsigned mTrace,                           /* Mask of events to be traced */
           ^
src/third_party/sqlite3.c:163106:9: style:inconclusive: Function 'sqlite3_trace_v2' argument 4 names different: declaration 'pCtx' definition 'pArg'. [funcArgNamesDifferent]
  void *pArg                                 /* Context */
        ^
src/third_party/sqlite3.c:4282:9: note: Function 'sqlite3_trace_v2' argument 4 names different: declaration 'pCtx' definition 'pArg'.
  void *pCtx
        ^
src/third_party/sqlite3.c:163106:9: note: Function 'sqlite3_trace_v2' argument 4 names different: declaration 'pCtx' definition 'pArg'.
  void *pArg                                 /* Context */
        ^
src/third_party/sqlite3.c:163287:60: style:inconclusive: Function 'sqlite3_wal_autocheckpoint' argument 2 names different: declaration 'N' definition 'nFrame'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){
                                                           ^
src/third_party/sqlite3.c:10003:60: note: Function 'sqlite3_wal_autocheckpoint' argument 2 names different: declaration 'N' definition 'nFrame'.
SQLITE_API int sqlite3_wal_autocheckpoint(sqlite3 *db, int N);
                                                           ^
src/third_party/sqlite3.c:163287:60: note: Function 'sqlite3_wal_autocheckpoint' argument 2 names different: declaration 'N' definition 'nFrame'.
SQLITE_API int sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){
                                                           ^
src/third_party/sqlite3.c:163734:47: style:inconclusive: Function 'sqlite3_limit' argument 2 names different: declaration 'id' definition 'limitId'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){
                                              ^
src/third_party/sqlite3.c:4886:44: note: Function 'sqlite3_limit' argument 2 names different: declaration 'id' definition 'limitId'.
SQLITE_API int sqlite3_limit(sqlite3*, int id, int newVal);
                                           ^
src/third_party/sqlite3.c:163734:47: note: Function 'sqlite3_limit' argument 2 names different: declaration 'id' definition 'limitId'.
SQLITE_API int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){
                                              ^
src/third_party/sqlite3.c:163734:60: style:inconclusive: Function 'sqlite3_limit' argument 3 names different: declaration 'newVal' definition 'newLimit'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){
                                                           ^
src/third_party/sqlite3.c:4886:52: note: Function 'sqlite3_limit' argument 3 names different: declaration 'newVal' definition 'newLimit'.
SQLITE_API int sqlite3_limit(sqlite3*, int id, int newVal);
                                                   ^
src/third_party/sqlite3.c:163734:60: note: Function 'sqlite3_limit' argument 3 names different: declaration 'newVal' definition 'newLimit'.
SQLITE_API int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){
                                                           ^
src/third_party/sqlite3.c:164387:15: style:inconclusive: Function 'sqlite3_open' argument 1 names different: declaration 'filename' definition 'zFilename'. [funcArgNamesDifferent]
  const char *zFilename,
              ^
src/third_party/sqlite3.c:4573:15: note: Function 'sqlite3_open' argument 1 names different: declaration 'filename' definition 'zFilename'.
  const char *filename,   /* Database filename (UTF-8) */
              ^
src/third_party/sqlite3.c:164387:15: note: Function 'sqlite3_open' argument 1 names different: declaration 'filename' definition 'zFilename'.
  const char *zFilename,
              ^
src/third_party/sqlite3.c:164407:15: style:inconclusive: Function 'sqlite3_open16' argument 1 names different: declaration 'filename' definition 'zFilename'. [funcArgNamesDifferent]
  const void *zFilename,
              ^
src/third_party/sqlite3.c:4577:15: note: Function 'sqlite3_open16' argument 1 names different: declaration 'filename' definition 'zFilename'.
  const void *filename,   /* Database filename (UTF-16) */
              ^
src/third_party/sqlite3.c:164407:15: note: Function 'sqlite3_open16' argument 1 names different: declaration 'filename' definition 'zFilename'.
  const void *zFilename,
              ^
src/third_party/sqlite3.c:164448:7: style:inconclusive: Function 'sqlite3_create_collation' argument 3 names different: declaration 'eTextRep' definition 'enc'. [funcArgNamesDifferent]
  int enc,
      ^
src/third_party/sqlite3.c:6941:7: note: Function 'sqlite3_create_collation' argument 3 names different: declaration 'eTextRep' definition 'enc'.
  int eTextRep,
      ^
src/third_party/sqlite3.c:164448:7: note: Function 'sqlite3_create_collation' argument 3 names different: declaration 'eTextRep' definition 'enc'.
  int enc,
      ^
src/third_party/sqlite3.c:164449:9: style:inconclusive: Function 'sqlite3_create_collation' argument 4 names different: declaration 'pArg' definition 'pCtx'. [funcArgNamesDifferent]
  void* pCtx,
        ^
src/third_party/sqlite3.c:6942:9: note: Function 'sqlite3_create_collation' argument 4 names different: declaration 'pArg' definition 'pCtx'.
  void *pArg,
        ^
src/third_party/sqlite3.c:164449:9: note: Function 'sqlite3_create_collation' argument 4 names different: declaration 'pArg' definition 'pCtx'.
  void* pCtx,
        ^
src/third_party/sqlite3.c:164461:7: style:inconclusive: Function 'sqlite3_create_collation_v2' argument 3 names different: declaration 'eTextRep' definition 'enc'. [funcArgNamesDifferent]
  int enc,
      ^
src/third_party/sqlite3.c:6948:7: note: Function 'sqlite3_create_collation_v2' argument 3 names different: declaration 'eTextRep' definition 'enc'.
  int eTextRep,
      ^
src/third_party/sqlite3.c:164461:7: note: Function 'sqlite3_create_collation_v2' argument 3 names different: declaration 'eTextRep' definition 'enc'.
  int enc,
      ^
src/third_party/sqlite3.c:164462:9: style:inconclusive: Function 'sqlite3_create_collation_v2' argument 4 names different: declaration 'pArg' definition 'pCtx'. [funcArgNamesDifferent]
  void* pCtx,
        ^
src/third_party/sqlite3.c:6949:9: note: Function 'sqlite3_create_collation_v2' argument 4 names different: declaration 'pArg' definition 'pCtx'.
  void *pArg,
        ^
src/third_party/sqlite3.c:164462:9: note: Function 'sqlite3_create_collation_v2' argument 4 names different: declaration 'pArg' definition 'pCtx'.
  void* pCtx,
        ^
src/third_party/sqlite3.c:164486:7: style:inconclusive: Function 'sqlite3_create_collation16' argument 3 names different: declaration 'eTextRep' definition 'enc'. [funcArgNamesDifferent]
  int enc,
      ^
src/third_party/sqlite3.c:6956:7: note: Function 'sqlite3_create_collation16' argument 3 names different: declaration 'eTextRep' definition 'enc'.
  int eTextRep,
      ^
src/third_party/sqlite3.c:164486:7: note: Function 'sqlite3_create_collation16' argument 3 names different: declaration 'eTextRep' definition 'enc'.
  int enc,
      ^
src/third_party/sqlite3.c:164487:9: style:inconclusive: Function 'sqlite3_create_collation16' argument 4 names different: declaration 'pArg' definition 'pCtx'. [funcArgNamesDifferent]
  void* pCtx,
        ^
src/third_party/sqlite3.c:6957:9: note: Function 'sqlite3_create_collation16' argument 4 names different: declaration 'pArg' definition 'pCtx'.
  void *pArg,
        ^
src/third_party/sqlite3.c:164487:9: note: Function 'sqlite3_create_collation16' argument 4 names different: declaration 'pArg' definition 'pCtx'.
  void* pCtx,
        ^
src/third_party/sqlite3.c:165324:48: style:inconclusive: Function 'sqlite3_uri_boolean' argument 1 names different: declaration 'zFile' definition 'zFilename'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){
                                               ^
src/third_party/sqlite3.c:4654:48: note: Function 'sqlite3_uri_boolean' argument 1 names different: declaration 'zFile' definition 'zFilename'.
SQLITE_API int sqlite3_uri_boolean(const char *zFile, const char *zParam, int bDefault);
                                               ^
src/third_party/sqlite3.c:165324:48: note: Function 'sqlite3_uri_boolean' argument 1 names different: declaration 'zFile' definition 'zFilename'.
SQLITE_API int sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){
                                               ^
src/third_party/sqlite3.c:165324:83: style:inconclusive: Function 'sqlite3_uri_boolean' argument 3 names different: declaration 'bDefault' definition 'bDflt'. [funcArgNamesDifferent]
SQLITE_API int sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){
                                                                                  ^
src/third_party/sqlite3.c:4654:79: note: Function 'sqlite3_uri_boolean' argument 3 names different: declaration 'bDefault' definition 'bDflt'.
SQLITE_API int sqlite3_uri_boolean(const char *zFile, const char *zParam, int bDefault);
                                                                              ^
src/third_party/sqlite3.c:165324:83: note: Function 'sqlite3_uri_boolean' argument 3 names different: declaration 'bDefault' definition 'bDflt'.
SQLITE_API int sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){
                                                                                  ^
src/third_party/sqlite3.c:60484:32: error: Subtracting pointers that point to different objects [comparePointers]
                               - (u8 *)&sLoc.aPgno[1]);
                               ^
src/third_party/sqlite3.c:60317:21: note: Variable declared here.
  volatile ht_slot *aHash;  /* Start of the wal-index hash table */
                    ^
src/third_party/sqlite3.c:60483:31: note: Address of variable taken here.
      int nByte = (int)((u8 *)&sLoc.aHash[HASHTABLE_NSLOT]
                              ^
src/third_party/sqlite3.c:60318:17: note: Variable declared here.
  volatile u32 *aPgno;      /* aPgno[1] is the page of first frame indexed */
                ^
src/third_party/sqlite3.c:60484:40: note: Address of variable taken here.
                               - (u8 *)&sLoc.aPgno[1]);
                                       ^
src/third_party/sqlite3.c:60484:32: note: Subtracting pointers that point to different objects
                               - (u8 *)&sLoc.aPgno[1]);
                               ^
src/third_party/sqlite3.c:112283:10: warning: Size of pointer 'zExtra' used instead of size of its data. [pointerSize]
  memcpy(zExtra, pIdx->azColl, sizeof(char*)*pIdx->nColumn);
         ^
src/third_party/sqlite3.c:150372:16: warning: Expression 'nTabList-1' can have a negative value. That is converted to an unsigned value and used in an unsigned calculation. [signConversionCond]
  nByteWInfo = ROUND8(sizeof(WhereInfo)+(nTabList-1)*sizeof(WhereLevel));
               ^
src/third_party/sqlite3.c:150413:15: note: Assuming that condition 'nTabList==0' is not redundant
  if( nTabList==0 ){
              ^
src/third_party/sqlite3.c:150372:16: note: Negative value is converted to an unsigned value
  nByteWInfo = ROUND8(sizeof(WhereInfo)+(nTabList-1)*sizeof(WhereLevel));
               ^
src/third_party/sqlite3.c:10918:9: style: struct member 'sqlite3_rtree_geometry::pContext' is never used. [unusedStructMember]
  void *pContext;                 /* Copy of pContext passed to s_r_g_c() */
        ^
src/third_party/sqlite3.c:10920:22: style: struct member 'sqlite3_rtree_geometry::aParam' is never used. [unusedStructMember]
  sqlite3_rtree_dbl *aParam;      /* Parameters passed to SQL geom function */
                     ^
src/third_party/sqlite3.c:10922:10: style: struct member 'sqlite3_rtree_geometry::xDelUser' is never used. [unusedStructMember]
  void (*xDelUser)(void *);       /* Called by SQLite to clean up pUser */
         ^
src/third_party/sqlite3.c:10950:9: style: struct member 'sqlite3_rtree_query_info::pContext' is never used. [unusedStructMember]
  void *pContext;                   /* pContext from when function registered */
        ^
src/third_party/sqlite3.c:10952:22: style: struct member 'sqlite3_rtree_query_info::aParam' is never used. [unusedStructMember]
  sqlite3_rtree_dbl *aParam;        /* value of function parameters */
                     ^
src/third_party/sqlite3.c:10954:10: style: struct member 'sqlite3_rtree_query_info::xDelUser' is never used. [unusedStructMember]
  void (*xDelUser)(void*);          /* function to free pUser */
         ^
src/third_party/sqlite3.c:10955:22: style: struct member 'sqlite3_rtree_query_info::aCoord' is never used. [unusedStructMember]
  sqlite3_rtree_dbl *aCoord;        /* Coordinates of node or entry to check */
                     ^
src/third_party/sqlite3.c:10956:17: style: struct member 'sqlite3_rtree_query_info::anQueue' is never used. [unusedStructMember]
  unsigned int *anQueue;            /* Number of pending entries in the queue */
                ^
src/third_party/sqlite3.c:10957:7: style: struct member 'sqlite3_rtree_query_info::nCoord' is never used. [unusedStructMember]
  int nCoord;                       /* Number of coordinates */
      ^
src/third_party/sqlite3.c:10958:7: style: struct member 'sqlite3_rtree_query_info::iLevel' is never used. [unusedStructMember]
  int iLevel;                       /* Level of current node or entry */
      ^
src/third_party/sqlite3.c:10959:7: style: struct member 'sqlite3_rtree_query_info::mxLevel' is never used. [unusedStructMember]
  int mxLevel;                      /* The largest iLevel value in the tree */
      ^
src/third_party/sqlite3.c:10961:21: style: struct member 'sqlite3_rtree_query_info::rParentScore' is never used. [unusedStructMember]
  sqlite3_rtree_dbl rParentScore;   /* Score of parent node */
                    ^
src/third_party/sqlite3.c:10962:7: style: struct member 'sqlite3_rtree_query_info::eParentWithin' is never used. [unusedStructMember]
  int eParentWithin;                /* Visibility of parent node */
      ^
src/third_party/sqlite3.c:10963:7: style: struct member 'sqlite3_rtree_query_info::eWithin' is never used. [unusedStructMember]
  int eWithin;                      /* OUT: Visibility */
      ^
src/third_party/sqlite3.c:10964:21: style: struct member 'sqlite3_rtree_query_info::rScore' is never used. [unusedStructMember]
  sqlite3_rtree_dbl rScore;         /* OUT: Write the score here */
                    ^
src/third_party/sqlite3.c:10966:19: style: struct member 'sqlite3_rtree_query_info::apSqlParam' is never used. [unusedStructMember]
  sqlite3_value **apSqlParam;       /* Original SQL values of parameters */
                  ^
src/third_party/sqlite3.c:12913:11: style: struct member 'Fts5ExtensionApi::xUserData' is never used. [unusedStructMember]
  void *(*xUserData)(Fts5Context*);
          ^
src/third_party/sqlite3.c:12915:9: style: struct member 'Fts5ExtensionApi::xColumnCount' is never used. [unusedStructMember]
  int (*xColumnCount)(Fts5Context*);
        ^
src/third_party/sqlite3.c:12916:9: style: struct member 'Fts5ExtensionApi::xRowCount' is never used. [unusedStructMember]
  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);
        ^
src/third_party/sqlite3.c:12917:9: style: struct member 'Fts5ExtensionApi::xColumnTotalSize' is never used. [unusedStructMember]
  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);
        ^
src/third_party/sqlite3.c:12919:9: style: struct member 'Fts5ExtensionApi::xTokenize' is never used. [unusedStructMember]
  int (*xTokenize)(Fts5Context*,
        ^
src/third_party/sqlite3.c:12925:9: style: struct member 'Fts5ExtensionApi::xPhraseCount' is never used. [unusedStructMember]
  int (*xPhraseCount)(Fts5Context*);
        ^
src/third_party/sqlite3.c:12926:9: style: struct member 'Fts5ExtensionApi::xPhraseSize' is never used. [unusedStructMember]
  int (*xPhraseSize)(Fts5Context*, int iPhrase);
        ^
src/third_party/sqlite3.c:12928:9: style: struct member 'Fts5ExtensionApi::xInstCount' is never used. [unusedStructMember]
  int (*xInstCount)(Fts5Context*, int *pnInst);
        ^
src/third_party/sqlite3.c:12929:9: style: struct member 'Fts5ExtensionApi::xInst' is never used. [unusedStructMember]
  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);
        ^
src/third_party/sqlite3.c:12932:9: style: struct member 'Fts5ExtensionApi::xColumnText' is never used. [unusedStructMember]
  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);
        ^
src/third_party/sqlite3.c:12933:9: style: struct member 'Fts5ExtensionApi::xColumnSize' is never used. [unusedStructMember]
  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);
        ^
src/third_party/sqlite3.c:12935:9: style: struct member 'Fts5ExtensionApi::xQueryPhrase' is never used. [unusedStructMember]
  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,
        ^
src/third_party/sqlite3.c:12938:9: style: struct member 'Fts5ExtensionApi::xSetAuxdata' is never used. [unusedStructMember]
  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));
        ^
src/third_party/sqlite3.c:12939:11: style: struct member 'Fts5ExtensionApi::xGetAuxdata' is never used. [unusedStructMember]
  void *(*xGetAuxdata)(Fts5Context*, int bClear);
          ^
src/third_party/sqlite3.c:12941:9: style: struct member 'Fts5ExtensionApi::xPhraseFirst' is never used. [unusedStructMember]
  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);
        ^
src/third_party/sqlite3.c:12942:10: style: struct member 'Fts5ExtensionApi::xPhraseNext' is never used. [unusedStructMember]
  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);
         ^
src/third_party/sqlite3.c:12944:9: style: struct member 'Fts5ExtensionApi::xPhraseFirstColumn' is never used. [unusedStructMember]
  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);
        ^
src/third_party/sqlite3.c:12945:10: style: struct member 'Fts5ExtensionApi::xPhraseNextColumn' is never used. [unusedStructMember]
  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);
         ^
src/third_party/sqlite3.c:13149:9: style: struct member 'fts5_tokenizer::xTokenize' is never used. [unusedStructMember]
  int (*xTokenize)(Fts5Tokenizer*,
        ^
src/third_party/sqlite3.c:13186:9: style: struct member 'fts5_api::xCreateTokenizer' is never used. [unusedStructMember]
  int (*xCreateTokenizer)(
        ^
src/third_party/sqlite3.c:13195:9: style: struct member 'fts5_api::xFindTokenizer' is never used. [unusedStructMember]
  int (*xFindTokenizer)(
        ^
src/third_party/sqlite3.c:13203:9: style: struct member 'fts5_api::xCreateFunction' is never used. [unusedStructMember]
  int (*xCreateFunction)(
        ^
src/third_party/sqlite3.c:16862:14: style: struct member 'sqlite3InitInfo::reopenMemdb' is never used. [unusedStructMember]
    unsigned reopenMemdb : 1;   /* ATTACH is really a reopen using MemDB */
             ^
src/third_party/sqlite3.c:16905:12: style: union member 'Anonymous1::notUsed1' is never used. [unusedStructMember]
    double notUsed1;            /* Spacer */
           ^
src/third_party/sqlite3.c:17847:12: style: struct member 'IndexSample::anLt' is never used. [unusedStructMember]
  tRowcnt *anLt;    /* Est. number of rows where key is less than this sample */
           ^
src/third_party/sqlite3.c:19021:7: style: struct member 'Sqlite3Config::mxStrlen' is never used. [unusedStructMember]
  int mxStrlen;                     /* Maximum string length */
      ^
src/third_party/sqlite3.c:19029:9: style: struct member 'Sqlite3Config::pHeap' is never used. [unusedStructMember]
  void *pHeap;                      /* Heap storage space */
        ^
src/third_party/sqlite3.c:19030:7: style: struct member 'Sqlite3Config::nHeap' is never used. [unusedStructMember]
  int nHeap;                        /* Size of pHeap[] */
      ^
src/third_party/sqlite3.c:19031:7: style: struct member 'Sqlite3Config::mnReq' is never used. [unusedStructMember]
  int mnReq, mxReq;                 /* Min and max heap requests sizes */
      ^
src/third_party/sqlite3.c:19031:14: style: struct member 'Sqlite3Config::mxReq' is never used. [unusedStructMember]
  int mnReq, mxReq;                 /* Min and max heap requests sizes */
             ^
src/third_party/sqlite3.c:19037:7: style: struct member 'Sqlite3Config::mxParserStack' is never used. [unusedStructMember]
  int mxParserStack;                /* maximum depth of the parser stack */
      ^
src/third_party/sqlite3.c:19070:7: style: struct member 'Sqlite3Config::szSorterRef' is never used. [unusedStructMember]
  u32 szSorterRef;                  /* Min size in bytes to use sorter-refs */
      ^
src/third_party/sqlite3.c:19108:22: style: union member 'Anonymous12::pCCurHint' is never used. [unusedStructMember]
    struct CCurHint *pCCurHint;               /* Used by codeCursorHint() */
                     ^
src/third_party/sqlite3.c:21061:7: style: struct member 'ScanStatus::addrLoop' is never used. [unusedStructMember]
  int addrLoop;                   /* Address of "loops" counter */
      ^
src/third_party/sqlite3.c:21062:7: style: struct member 'ScanStatus::addrVisit' is never used. [unusedStructMember]
  int addrVisit;                  /* Address of "rows visited" counter */
      ^
src/third_party/sqlite3.c:21063:7: style: struct member 'ScanStatus::iSelectID' is never used. [unusedStructMember]
  int iSelectID;                  /* The "Select-ID" for this loop */
      ^
src/third_party/sqlite3.c:21077:16: style: struct member 'DblquoteStr::pNextStr' is never used. [unusedStructMember]
  DblquoteStr *pNextStr;   /* Next string literal in the list */
               ^
src/third_party/sqlite3.c:21178:7: style: struct member 'PreUpdate::aRecord' is never used. [unusedStructMember]
  u8 *aRecord;                    /* old.* database record */
      ^
src/third_party/sqlite3.c:21181:19: style: struct member 'PreUpdate::pNewUnpacked' is never used. [unusedStructMember]
  UnpackedRecord *pNewUnpacked;   /* Unpacked version of new.* record */
                  ^
src/third_party/sqlite3.c:21182:7: style: struct member 'PreUpdate::iNewReg' is never used. [unusedStructMember]
  int iNewReg;                    /* Register for new.* values */
      ^
src/third_party/sqlite3.c:21183:7: style: struct member 'PreUpdate::iKey1' is never used. [unusedStructMember]
  i64 iKey1;                      /* First key value passed to hook */
      ^
src/third_party/sqlite3.c:21184:7: style: struct member 'PreUpdate::iKey2' is never used. [unusedStructMember]
  i64 iKey2;                      /* Second key value passed to hook */
      ^
src/third_party/sqlite3.c:21185:8: style: struct member 'PreUpdate::aNew' is never used. [unusedStructMember]
  Mem *aNew;                      /* Array of new.* values */
       ^
src/third_party/sqlite3.c:21187:10: style: struct member 'PreUpdate::pPk' is never used. [unusedStructMember]
  Index *pPk;                     /* PK index if pTab is WITHOUT ROWID */
         ^
src/third_party/sqlite3.c:34456:9: style: struct member 'vxworksFileId::zCanonicalName' is never used. [unusedStructMember]
  char *zCanonicalName;         /* Canonical filename */
        ^
src/third_party/sqlite3.c:37429:18: style: Variable 'nWrite' is assigned a value that is never used. [unreadVariable]
      int nWrite = 0;             /* Number of bytes written by seekAndWrite */
                 ^
src/third_party/sqlite3.c:57167:10: style: Variable 'rc' is assigned a value that is never used. [unreadVariable]
  int rc = SQLITE_OK;
         ^
src/third_party/sqlite3.c:69781:10: style: Variable 'rc' is assigned a value that is never used. [unreadVariable]
  int rc = SQLITE_OK;
         ^
src/third_party/sqlite3.c:75380:15: style: Variable 'pgszSrc' is assigned a value that is never used. [unreadVariable]
  int pgszSrc = 0;    /* Source page size */
              ^
src/third_party/sqlite3.c:75381:16: style: Variable 'pgszDest' is assigned a value that is never used. [unreadVariable]
  int pgszDest = 0;   /* Destination page size */
               ^
src/third_party/sqlite3.c:80597:12: style: Variable 'zSuper' is assigned a value that is never used. [unreadVariable]
    zSuper = 0;
           ^
src/third_party/sqlite3.c:95997:10: style: Variable 'rc' is assigned a value that is never used. [unreadVariable]
  int rc = SQLITE_OK;             /* Return code */
         ^
src/third_party/sqlite3.c:129965:9: style: Variable 'pOp' is assigned a value that is never used. [unreadVariable]
    pOp = 0; /* Ensure pOp not used after sqltie3VdbeAddOp3() */
        ^
src/third_party/sqlite3.c:131485:11: style: Variable 'v' is assigned a value that is never used. [unreadVariable]
  Vdbe *v = 0;
          ^
src/third_party/sqlite3.c:131486:14: style: Variable 'iLimit' is assigned a value that is never used. [unreadVariable]
  int iLimit = 0;
             ^
src/third_party/sqlite3.c:137294:15: style: Variable 'pWhen' is assigned a value that is never used. [unreadVariable]
  Expr *pWhen = 0;            /* Duplicate of trigger WHEN expression */
              ^
src/third_party/sqlite3.c:149215:19: style: Variable 'mPrereq' is assigned a value that is never used. [unreadVariable]
  Bitmask mPrereq = 0;
                  ^
src/third_party/sqlite3.c:160303:9: style: Variable 'n' is assigned a value that is never used. [unreadVariable]
  int n = 0;                      /* Length of the next token token */
        ^
src/third_party/sqlite3.c:162795:19: style: Variable 'nName' is assigned a value that is never used. [unreadVariable]
   || (255<(nName = sqlite3Strlen30( zFunctionName)))
                  ^
src/third_party/sqlite3.c:34232:0: information: Skipping configuration 'EINTR' since the value of 'EINTR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if( errno==EINTR ) continue;
^
src/third_party/sqlite3.c:34396:0: information: Skipping configuration 'EINTR' since the value of 'EINTR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  do{ rc = osFtruncate(h,sz); }while( rc<0 && errno==EINTR );
^
src/third_party/sqlite3.c:34420:0: information: Skipping configuration 'EINTR' since the value of 'EINTR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  case EINTR:
^
src/third_party/sqlite3.c:36857:0: information: Skipping configuration 'EINTR' since the value of 'EINTR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      if( errno==EINTR ){ got = 1; continue; }
^
src/third_party/sqlite3.c:36966:0: information: Skipping configuration 'EINTR' since the value of 'EINTR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  }while( rc<0 && errno==EINTR );
^
src/third_party/sqlite3.c:40067:0: information: Skipping configuration 'EINTR' since the value of 'EINTR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      do{ got = osRead(fd, zBuf, nBuf); }while( got<0 && errno==EINTR );
^
src/third_party/sqlite3.c:34928:0: information: Skipping configuration 'EOVERFLOW;SQLITE_DISABLE_LFS' since the value of 'EOVERFLOW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if( pFile->lastErrno==EOVERFLOW ) return SQLITE_NOLFS;
^
src/third_party/sqlite3.c:34227:0: information: Skipping configuration 'FD_CLOEXEC;O_CLOEXEC' since the value of 'O_CLOEXEC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    fd = osOpen(z,f|O_CLOEXEC,m2);
^
src/third_party/sqlite3.c:37167:0: information: Skipping configuration 'F_FULLFSYNC' since the value of 'F_FULLFSYNC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    rc = osFcntl(fd, F_FULLFSYNC, 0);
^
src/third_party/sqlite3.c:116146:12: error: Null pointer dereference: (VTable*)0 [nullPointer]
    return sqlite3GetVTable(pParse->db, pTab)->pMod->pModule->xUpdate==0;
           ^
src/third_party/sqlite3.c:10960:17: style: struct member 'sqlite3_rtree_query_info::iRowid' is never used. [unusedStructMember]
  sqlite3_int64 iRowid;             /* Rowid for current entry */
                ^
src/third_party/sqlite3.c:12931:19: style: struct member 'Fts5ExtensionApi::xRowid' is never used. [unusedStructMember]
  sqlite3_int64 (*xRowid)(Fts5Context*);
                  ^
src/third_party/sqlite3.c:15451:13: style: union member 'p4union::pVtab' is never used. [unusedStructMember]
    VTable *pVtab;         /* Used when p4type is P4_VTAB */
            ^
src/third_party/sqlite3.c:20820:26: style: union member 'Anonymous13::pVCur' is never used. [unusedStructMember]
    sqlite3_vtab_cursor *pVCur; /* CURTYPE_VTAB.              Vtab cursor */
                         ^
src/third_party/sqlite3.c:141057:11: style: struct member 'Anonymous23::idxNum' is never used. [unusedStructMember]
      int idxNum;            /* Index number */
          ^
src/third_party/sqlite3.c:141060:11: style: struct member 'Anonymous23::omitMask' is never used. [unusedStructMember]
      u16 omitMask;          /* Terms that may be omitted */
          ^
src/third_party/sqlite3.c:90590:17: style: Unused variable: pVtab [unusedVariable]
  sqlite3_vtab *pVtab;
                ^
src/third_party/sqlite3.c:90591:25: style: Unused variable: pModule [unusedVariable]
  const sqlite3_module *pModule;
                        ^
src/third_party/sqlite3.c:145042:22: style: Variable 'eOp2' is assigned a value that is never used. [unreadVariable]
  unsigned char eOp2 = 0;          /* op2 value for LIKE/REGEXP/GLOB */
                     ^
src/third_party/sqlite3.c:37187:0: information: Skipping configuration 'HAVE_FDATASYNC=0;fdatasync' since the value of 'fdatasync' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  rc = fdatasync(fd);
^
unittest/main.c:123:9: style: The scope of the variable 'f' can be reduced. [variableScope]
  FILE *f;
        ^
unittest/private.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 213 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/mod_mbedtls.inl:79:0: information: Skipping configuration 'DEBUG;MG_CONFIG_MBEDTLS_DEBUG;MG_CONFIG_MBEDTLS_DEBUG;USE_MBEDTLS;LOCAL_TEST' since the value of 'MG_CONFIG_MBEDTLS_DEBUG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 mbedtls_debug_set_threshold(MG_CONFIG_MBEDTLS_DEBUG);
^
src/mod_mbedtls.inl:79:0: information: Skipping configuration 'DEBUG;MG_CONFIG_MBEDTLS_DEBUG;USE_MBEDTLS;LOCAL_TEST' since the value of 'MG_CONFIG_MBEDTLS_DEBUG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 mbedtls_debug_set_threshold(MG_CONFIG_MBEDTLS_DEBUG);
^
src/civetweb.c:7087:16: error: Array 'src[27]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   dst[j] = src[i];
               ^
src/civetweb.c:3820:47: error: The address of local variable 's' is accessed at non-zero index. [objectIndex]
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
unittest/private.c:838:18: note: Address of variable taken here.
 p = skip_quoted(&s, ", ", ", ", 0);
                 ^
unittest/private.c:838:18: note: Calling function 'skip_quoted', 1st argument '&s' value is lifetime=s
 p = skip_quoted(&s, ", ", ", ", 0);
                 ^
src/civetweb.c:3787:15: note: Assuming condition is false
 if (end_word > begin_word) {
              ^
src/civetweb.c:3820:47: note: The address of local variable 's' is accessed at non-zero index.
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:3820:47: error: The address of local variable 's' is accessed at non-zero index. [objectIndex]
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
unittest/private.c:841:18: note: Address of variable taken here.
 p = skip_quoted(&s, ", ", ", ", 0);
                 ^
unittest/private.c:841:18: note: Calling function 'skip_quoted', 1st argument '&s' value is lifetime=s
 p = skip_quoted(&s, ", ", ", ", 0);
                 ^
src/civetweb.c:3787:15: note: Assuming condition is false
 if (end_word > begin_word) {
              ^
src/civetweb.c:3820:47: note: The address of local variable 's' is accessed at non-zero index.
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:3820:47: error: The address of local variable 's' is accessed at non-zero index. [objectIndex]
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
unittest/private.c:844:18: note: Address of variable taken here.
 p = skip_quoted(&s, ",", " ", 0);
                 ^
unittest/private.c:844:18: note: Calling function 'skip_quoted', 1st argument '&s' value is lifetime=s
 p = skip_quoted(&s, ",", " ", 0);
                 ^
src/civetweb.c:3787:15: note: Assuming condition is false
 if (end_word > begin_word) {
              ^
src/civetweb.c:3820:47: note: The address of local variable 's' is accessed at non-zero index.
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
src/civetweb.c:3820:47: error: The address of local variable 's' is accessed at non-zero index. [objectIndex]
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
unittest/private.c:847:18: note: Address of variable taken here.
 p = skip_quoted(&s, ",", " ", '\\');
                 ^
unittest/private.c:847:18: note: Calling function 'skip_quoted', 1st argument '&s' value is lifetime=s
 p = skip_quoted(&s, ",", " ", '\\');
                 ^
src/civetweb.c:3787:15: note: Assuming condition is false
 if (end_word > begin_word) {
              ^
src/civetweb.c:3820:47: note: The address of local variable 's' is accessed at non-zero index.
  end_whitespace = end_word + strspn(&end_word[1], whitespace) + 1;
                                              ^
unittest/private.c:1353:9: style: Variable 'len' is not assigned a value. [unassignedVariable]
 size_t len;
        ^
unittest/private_exe.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/main.c:306:0: information: Skipping configuration 'BUILD_DATE;LOCAL_TEST' since the value of 'BUILD_DATE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 const char *bd = BUILD_DATE;
^
src/main.c:780:0: information: Skipping configuration 'CONFIG_FILE2;__linux__;LOCAL_TEST' since the value of 'CONFIG_FILE2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  fp = fopen(CONFIG_FILE2, "r");
^
src/main.c:782:0: information: Skipping configuration 'CONFIG_FILE2;__linux__;LOCAL_TEST' since the value of 'CONFIG_FILE2' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   strcpy(g_config_file_name, CONFIG_FILE2);
^
src/main.c:761:0: information: Skipping configuration 'CONFIG_FILE;LOCAL_TEST' since the value of 'CONFIG_FILE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
           CONFIG_FILE);
^
src/main.c:771:0: information: Skipping configuration 'CONFIG_FILE;LOCAL_TEST' since the value of 'CONFIG_FILE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
           CONFIG_FILE);
^
src/main.c:840:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT;LOCAL_TEST' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT(sizeof(main_config_options) / sizeof(main_config_options[0])
^
src/main.c:842:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT;LOCAL_TEST' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT((strlen(mg_version()) + 12) < sizeof(g_server_base_name));
^
src/main.c:840:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT;_MSC_VER;LOCAL_TEST' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT(sizeof(main_config_options) / sizeof(main_config_options[0])
^
src/main.c:842:0: information: Skipping configuration 'DEBUG;DEBUG_ASSERT;_MSC_VER;LOCAL_TEST' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT((strlen(mg_version()) + 12) < sizeof(g_server_base_name));
^
src/main.c:840:0: information: Skipping configuration 'DEBUG_ASSERT;LOCAL_TEST' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT(sizeof(main_config_options) / sizeof(main_config_options[0])
^
src/main.c:842:0: information: Skipping configuration 'DEBUG_ASSERT;LOCAL_TEST' since the value of 'DEBUG_ASSERT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 DEBUG_ASSERT((strlen(mg_version()) + 12) < sizeof(g_server_base_name));
^
src/main.c:932:0: information: Skipping configuration 'IGNORE_UNUSED_RESULT;LOCAL_TEST' since the value of 'IGNORE_UNUSED_RESULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   IGNORE_UNUSED_RESULT(getcwd(path, sizeof(path)));
^
src/main.c:946:0: information: Skipping configuration 'IGNORE_UNUSED_RESULT;LOCAL_TEST' since the value of 'IGNORE_UNUSED_RESULT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  IGNORE_UNUSED_RESULT(abs_path(path, absolute, sizeof(absolute)));
^
unittest/public_func.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
unittest/public_func.c:152:12: style: The scope of the variable 'len' can be reduced. [variableScope]
 int i, j, len;
           ^
unittest/public_func.c:153:7: style: The scope of the variable 'c' can be reduced. [variableScope]
 char c;
      ^
unittest/public_func.c:686:12: style: The scope of the variable 'len' can be reduced. [variableScope]
 size_t j, len;
           ^
unittest/public_func.c:687:14: style: The scope of the variable 'resp' can be reduced. [variableScope]
 const char *resp;
             ^
unittest/public_server.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 34 configurations. Use --force to check all configurations. [toomanyconfigs]

^
unittest/public_server.c:1386:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  sprintf(uri, "/U%u", i);
  ^
unittest/public_server.c:1390:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  sprintf(uri, "/U%u", i);
  ^
unittest/public_server.c:1394:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  sprintf(uri, "/U%u", i);
  ^
unittest/public_server.c:1398:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  sprintf(uri, "/U%u", i);
  ^
unittest/public_server.c:1402:3: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
  sprintf(uri, "/U%u", i);
  ^
unittest/public_server.c:1409:2: warning: %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed short'. [invalidPrintfArgType_uint]
 sprintf(request_handler2_url_expected,
 ^
unittest/public_server.c:3386:34: error:inconclusive: Pointer addition with NULL pointer. [nullPointerArithmetic]
 ck_assert(!strncmp(auth_request + len, domain, strlen(domain)));
                                 ^
unittest/public_server.c:3373:17: note: Assignment 'auth_request=NULL', assigned value is 0
 auth_request = NULL;
                ^
unittest/public_server.c:3386:34: note: Null pointer addition
 ck_assert(!strncmp(auth_request + len, domain, strlen(domain)));
                                 ^
unittest/public_server.c:3389:34: error:inconclusive: Pointer addition with NULL pointer. [nullPointerArithmetic]
 ck_assert(!strncmp(auth_request + len, str, strlen(str)));
                                 ^
unittest/public_server.c:3373:17: note: Assignment 'auth_request=NULL', assigned value is 0
 auth_request = NULL;
                ^
unittest/public_server.c:3389:34: note: Null pointer addition
 ck_assert(!strncmp(auth_request + len, str, strlen(str)));
                                 ^
unittest/public_server.c:3391:28: error:inconclusive: Pointer addition with NULL pointer. [nullPointerArithmetic]
 str = strchr(auth_request + len, '\"');
                           ^
unittest/public_server.c:3373:17: note: Assignment 'auth_request=NULL', assigned value is 0
 auth_request = NULL;
                ^
unittest/public_server.c:3391:28: note: Null pointer addition
 str = strchr(auth_request + len, '\"');
                           ^
unittest/public_server.c:3393:37: error:inconclusive: Pointer addition with NULL pointer. [nullPointerArithmetic]
 ck_assert_ptr_ne(str, auth_request + len);
                                    ^
unittest/public_server.c:3373:17: note: Assignment 'auth_request=NULL', assigned value is 0
 auth_request = NULL;
                ^
unittest/public_server.c:3393:37: note: Null pointer addition
 ck_assert_ptr_ne(str, auth_request + len);
                                    ^
unittest/public_server.c:80:20: style: The scope of the variable 'in_addr_list' can be reduced. [variableScope]
  struct in_addr **in_addr_list;
                   ^
unittest/public_server.c:81:15: style: The scope of the variable 'ip' can be reduced. [variableScope]
  const char *ip;
              ^
unittest/public_server.c:5048:33: style: Variable 'tcase_file_in_mem' is assigned a value that is never used. [unreadVariable]
 TCase *const tcase_file_in_mem = tcase_create("File in memory");
                                ^
unittest/public_server.c:3738:0: information: Skipping configuration 'MAX_WORKER_THREADS;LOCAL_TEST' since the value of 'MAX_WORKER_THREADS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 sprintf(bad_thread_num, "%u", MAX_WORKER_THREADS + 1);
^
unittest/timertest.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 210 configurations. Use --force to check all configurations. [toomanyconfigs]

^
examples/rest/cJSON/cJSON.c:701:42: warning: Null pointer dereference: input_buffer [ctunullpointer]
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
examples/rest/cJSON/cJSON.c:1567:13: note: Assuming that condition 'input_buffer!=NULL' is not redundant

            ^
examples/rest/cJSON/cJSON.c:1557:26: note: Calling function parse_string, 2nd argument is null
        if (!parse_string(current_item, input_buffer))
                         ^
examples/rest/cJSON/cJSON.c:701:42: note: Dereferencing argument input_buffer that is null
    const unsigned char *input_pointer = buffer_at_offset(input_buffer) + 1;
                                         ^
src/third_party/sqlite3.c:23184:8: error: Null pointer dereference: pVfs [ctunullpointer]
  rc = pVfs->xOpen(pVfs, zPath, pFile, flags & 0x1087f7f, pFlagsOut);
       ^
src/third_party/sqlite3.c:97455:21: note: Calling function sqlite3JournalOpen, 1st argument is null
  sqlite3JournalOpen(0, 0, pJfd, 0, -1);
                    ^
src/third_party/sqlite3.c:97433:12: note: Calling function sqlite3OsOpen, 1st argument is null
    return sqlite3OsOpen(pVfs, zName, pJfd, flags, 0);
           ^
src/third_party/sqlite3.c:23184:8: note: Dereferencing argument pVfs that is null
  rc = pVfs->xOpen(pVfs, zPath, pFile, flags & 0x1087f7f, pFlagsOut);
       ^
src/third_party/sqlite3.c:48758:10: warning: Null pointer dereference: p [ctunullpointer]
  return p->iSize;
         ^
src/third_party/sqlite3.c:65080:9: note: Assuming that condition '!pBt->pHasContent' is not redundant

        ^
src/third_party/sqlite3.c:65084:47: note: Calling function sqlite3BitvecSize, 1st argument is null
  if( rc==SQLITE_OK && pgno<=sqlite3BitvecSize(pBt->pHasContent) ){
                                              ^
src/third_party/sqlite3.c:48758:10: note: Dereferencing argument p that is null
  return p->iSize;
         ^
src/third_party/sqlite3.c:129071:4: warning: Null pointer dereference: ppStmt [ctunullpointer]
  *ppStmt = 0;
   ^
src/third_party/sqlite3.c:129149:34: note: Assuming that condition 'ppStmt==0' is not redundant

                                 ^
src/third_party/sqlite3.c:129148:29: note: Calling function sqlite3LockAndPrepare, 6th argument is null
  rc = sqlite3LockAndPrepare(db,zSql,nBytes,0,0,ppStmt,pzTail);
                            ^
src/third_party/sqlite3.c:129071:4: note: Dereferencing argument ppStmt that is null
  *ppStmt = 0;
   ^
src/third_party/sqlite3.c:129217:4: warning: Null pointer dereference: ppStmt [ctunullpointer]
  *ppStmt = 0;
   ^
src/third_party/sqlite3.c:129265:34: note: Assuming that condition 'ppStmt==0' is not redundant

                                 ^
src/third_party/sqlite3.c:129264:24: note: Calling function sqlite3Prepare16, 5th argument is null
  rc = sqlite3Prepare16(db,zSql,nBytes,0,ppStmt,pzTail);
                       ^
src/third_party/sqlite3.c:129217:4: note: Dereferencing argument ppStmt that is null
  *ppStmt = 0;
   ^
fuzztest/fuzzmain.c:496:0: style: The function 'LLVMFuzzerTestOneInput' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:364:0: style: The function 'ajsheap_dec16' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:285:0: style: The function 'ajsheap_enc16' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:981:0: style: The function 'ajsheap_exec_timeout_check' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:421:0: style: The function 'ajsheap_extstr_check_1' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:871:0: style: The function 'ajsheap_extstr_check_2' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:924:0: style: The function 'ajsheap_extstr_check_3' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:496:0: style: The function 'ajsheap_extstr_free_1' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:909:0: style: The function 'ajsheap_extstr_free_2' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/cmdline/duk_cmdline_ajduk.c:954:0: style: The function 'ajsheap_extstr_free_3' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1109:0: style: The function 'cJSONUtils_AddPatchToArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1011:0: style: The function 'cJSONUtils_ApplyPatches' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1040:0: style: The function 'cJSONUtils_ApplyPatchesCaseSensitive' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1446:0: style: The function 'cJSONUtils_GenerateMergePatchCaseSensitive' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1254:0: style: The function 'cJSONUtils_GeneratePatches' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1269:0: style: The function 'cJSONUtils_GeneratePatchesCaseSensitive' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:328:0: style: The function 'cJSONUtils_GetPointer' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:333:0: style: The function 'cJSONUtils_GetPointerCaseSensitive' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1353:0: style: The function 'cJSONUtils_MergePatch' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1358:0: style: The function 'cJSONUtils_MergePatchCaseSensitive' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1284:0: style: The function 'cJSONUtils_SortObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON_Utils.c:1289:0: style: The function 'cJSONUtils_SortObjectCaseSensitive' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2060:0: style: The function 'cJSON_AddArrayToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2000:0: style: The function 'cJSON_AddBoolToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1988:0: style: The function 'cJSON_AddFalseToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1944:0: style: The function 'cJSON_AddItemReferenceToArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1954:0: style: The function 'cJSON_AddItemReferenceToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1939:0: style: The function 'cJSON_AddItemToObjectCS' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1964:0: style: The function 'cJSON_AddNullToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2048:0: style: The function 'cJSON_AddObjectToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2036:0: style: The function 'cJSON_AddRawToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1976:0: style: The function 'cJSON_AddTrueToObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2357:0: style: The function 'cJSON_CreateArrayReference' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2478:0: style: The function 'cJSON_CreateDoubleArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2442:0: style: The function 'cJSON_CreateFloatArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2407:0: style: The function 'cJSON_CreateIntArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2346:0: style: The function 'cJSON_CreateObjectReference' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2514:0: style: The function 'cJSON_CreateStringArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2334:0: style: The function 'cJSON_CreateStringReference' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2112:0: style: The function 'cJSON_DeleteItemFromArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1763:0: style: The function 'cJSON_GetArrayItem' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1721:0: style: The function 'cJSON_GetArraySize' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:71:0: style: The function 'cJSON_GetErrorPtr' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:76:0: style: The function 'cJSON_GetStringValue' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1811:0: style: The function 'cJSON_HasObjectItem' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:171:0: style: The function 'cJSON_InitHooks' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2142:0: style: The function 'cJSON_InsertItemInArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2731:0: style: The function 'cJSON_IsBool' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2710:0: style: The function 'cJSON_IsFalse' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2790:0: style: The function 'cJSON_IsRaw' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2720:0: style: The function 'cJSON_IsTrue' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2630:0: style: The function 'cJSON_Minify' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1153:0: style: The function 'cJSON_Print' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1163:0: style: The function 'cJSON_PrintBuffered' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:1193:0: style: The function 'cJSON_PrintPreallocated' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2206:0: style: The function 'cJSON_ReplaceItemInArray' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2236:0: style: The function 'cJSON_ReplaceItemInObject' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:2241:0: style: The function 'cJSON_ReplaceItemInObjectCaseSensitive' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:344:0: style: The function 'cJSON_SetNumberHelper' is never used. [unusedFunction]

^
examples/rest/cJSON/cJSON.c:89:0: style: The function 'cJSON_Version' is never used. [unusedFunction]

^
src/main.c:425:0: style: The function 'create_config_file' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:731:0: style: The function 'duk_trans_dvalue_send_err' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:735:0: style: The function 'duk_trans_dvalue_send_nfy' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/debug-trans-dvalue/duk_trans_dvalue.c:727:0: style: The function 'duk_trans_dvalue_send_rep' is never used. [unusedFunction]

^
src/third_party/duktape-1.5.2/examples/dummy-date-provider/dummy_date_provider.c:24:0: style: The function 'dummy_get_now' is never used. [unusedFunction]

^
src/third_party/lua-5.1.5/src/ltable.c:586:0: style: The function 'luaH_isdummy' is never used. [unusedFunction]

^
src/third_party/lua-5.1.5/src/ltable.c:582:0: style: The function 'luaH_mainposition' is never used. [unusedFunction]

^
src/third_party/lfs.c:1173:0: style: The function 'luaopen_lfs' is never used. [unusedFunction]

^
src/third_party/lsqlite3.c:2384:0: style: The function 'luaopen_lsqlite3' is never used. [unusedFunction]

^
src/third_party/lua_struct.c:394:0: style: The function 'luaopen_struct' is never used. [unusedFunction]

^
src/civetweb.c:19303:0: style: The function 'mg_connect_websocket_client_extensions' is never used. [unusedFunction]

^
src/civetweb.c:19276:0: style: The function 'mg_connect_websocket_client_secure' is never used. [unusedFunction]

^
src/civetweb.c:19334:0: style: The function 'mg_connect_websocket_client_secure_extensions' is never used. [unusedFunction]

^
src/civetweb.c:3520:0: style: The function 'mg_cry' is never used. [unusedFunction]

^
src/civetweb.c:1641:0: style: The function 'mg_current_thread_id' is never used. [unusedFunction]

^
src/civetweb.c:22076:0: style: The function 'mg_disable_connection_keep_alive' is never used. [unusedFunction]

^
src/civetweb.c:3228:0: style: The function 'mg_get_thread_pointer' is never used. [unusedFunction]

^
src/civetweb.c:10479:0: style: The function 'mg_send_file_body' is never used. [unusedFunction]

^
src/civetweb.c:10545:0: style: The function 'mg_send_mime_file' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:164556:0: style: The function 'sqlite3_global_recover' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:27389:0: style: The function 'sqlite3_memory_alarm' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:161377:0: style: The function 'sqlite3_shutdown' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:82430:0: style: The function 'vdbeRecordCompareInt' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:82524:0: style: The function 'vdbeRecordCompareString' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:94668:0: style: The function 'vdbeSorterCompare' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:94729:0: style: The function 'vdbeSorterCompareInt' is never used. [unusedFunction]

^
src/third_party/sqlite3.c:94687:0: style: The function 'vdbeSorterCompareText' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

